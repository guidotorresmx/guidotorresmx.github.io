<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Marco Guido&#39;s blog</title>
  
  <subtitle>Software and some electronics stuff</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-10-30T18:33:12.020Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Marco Guido</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Asset Folders</title>
    <link href="http://example.com/2021/10/30/asset-folders/"/>
    <id>http://example.com/2021/10/30/asset-folders/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Global-Asset-Folder"><a href="#Global-Asset-Folder" class="headerlink" title="Global Asset Folder"></a>Global Asset Folder</h2><p>Assets are non-post files in the <code>source</code> folder, such as images, CSS or JavaScript files. For instance, If you are only going to have a few images in the Hexo project, then the easiest way is to keep them in a <code>source/images</code> directory. Then, you can access them using something like <code>![](/images/image.jpg)</code>.</p><h2 id="Post-Asset-Folder"><a href="#Post-Asset-Folder" class="headerlink" title="Post Asset Folder"></a>Post Asset Folder</h2><div class="video-container"><iframe src="https://www.youtube.com/embed/feIDVQ2tz0o" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p>For users who expect to regularly serve images and/or other assets, and for those who prefer to separate their assets on a post-per-post basis, Hexo also provides a more organized way to manage assets. This slightly more involved, but very convenient approach to asset management can be turned on by setting the <code>post_asset_folder</code> setting in <code>_config.yml</code> to true.</p><figure class="highlight yaml"><figcaption><span>_config.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>With asset folder management enabled, Hexo will create a folder every time you make a new post with the <code>hexo new [layout] &lt;title&gt;</code> command. This asset folder will have the same name as the markdown file associated with the post. Place all assets related to your post into the associated folder, and you will be able to reference them using a relative path, making for an easier and more convenient workflow.</p><h2 id="Tag-Plugins-For-Relative-Path-Referencing"><a href="#Tag-Plugins-For-Relative-Path-Referencing" class="headerlink" title="Tag Plugins For Relative Path Referencing"></a>Tag Plugins For Relative Path Referencing</h2><p>Referencing images or other assets using normal markdown syntax and relative paths may lead to incorrect display on archive or index pages. Plugins have been created by the community to address this issue in Hexo 2. However, with the release of Hexo 3, several new <a href="/docs/tag-plugins#Include-Assets">tag plugins</a> were added to core. These enable you to reference your assets more easily in posts:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% asset_path slug %}</span><br><span class="line">{% asset_img slug [title] %}</span><br><span class="line">{% asset_link slug [title] %}</span><br></pre></td></tr></tbody></table></figure><p>For example, with post asset folders enabled, if you place an image <code>example.jpg</code> into your asset folder, it will <em>not</em> appear on the index page if you reference it using a relative path with regular <code>![](example.jpg)</code> markdown syntax (however, it will work as expected in the post itself).</p><p>The correct way to reference the image will thus be using tag plugin syntax rather than markdown:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% asset_img example.jpg This is an example image %}</span><br><span class="line">{% asset_img "spaced asset.jpg" "spaced title" %}</span><br></pre></td></tr></tbody></table></figure><p>This way, the image will appear both inside the post and on index and archive pages.</p><h2 id="Embedding-an-image-using-markdown"><a href="#Embedding-an-image-using-markdown" class="headerlink" title="Embedding an image using markdown"></a>Embedding an image using markdown</h2><p><a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a> 3.1.0 introduced a new option that allows you to embed an image in markdown without using <code>asset_img</code> tag plugin.</p><p>To enable:</p><figure class="highlight yml"><figcaption><span>_config.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">marked:</span></span><br><span class="line">  <span class="attr">prependRoot:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">postAsset:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><p>Once enabled, an asset image will be automatically resolved to its corresponding post’s path. For example, “image.jpg” is located at “/2020/01/02/foo/image.jpg”, meaning it is an asset image of “/2020/01/02/foo/“ post, <code>![](image.jpg)</code> will be rendered as <code>&lt;img src="/2020/01/02/foo/image.jpg"&gt;</code>.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Global-Asset-Folder&quot;&gt;&lt;a href=&quot;#Global-Asset-Folder&quot; class=&quot;headerlink&quot; title=&quot;Global Asset Folder&quot;&gt;&lt;/a&gt;Global Asset Folder&lt;/h2&gt;&lt;p&gt;As</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>commands</title>
    <link href="http://example.com/2021/10/30/commands/"/>
    <id>http://example.com/2021/10/30/commands/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>This is a repost from <a href="https://hexo.io/docs/commands.html">hexo’s website</a>. </p><h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init [folder]</span><br></pre></td></tr></tbody></table></figure><p>Initializes a website. If no <code>folder</code> is provided, Hexo will set up a website in the current directory.</p><p>This command is a shortcut that runs the following steps:</p><ol><li>Git clone <a href="https://github.com/hexojs/hexo-starter">hexo-starter</a> including <a href="https://github.com/hexojs/hexo-theme-landscape">hexo-theme-landscape</a> into the current directory or a target folder if specified.</li><li>Install dependencies using a package manager: <a href="https://classic.yarnpkg.com/lang/en/">Yarn 1</a>, <a href="https://pnpm.js.org/">pnpm</a> or <a href="https://docs.npmjs.com/cli/install">npm</a>, whichever is installed; if there are more than one installed, the priority is as listed. npm is bundled with <a href="/docs/#Install-Node-js">Node.js</a> by default.</li></ol><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></tbody></table></figure><p>Creates a new article. If no <code>layout</code> is provided, Hexo will use the <code>default_layout</code> from <a href="configuration.html">_config.yml</a>. If the <code>title</code> contains spaces, surround it with quotation marks.</p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--path</code></td><td>Post path. Customize the path of the post.</td></tr><tr><td><code>-r</code>, <code>--replace</code></td><td>Replace the current post if existed.</td></tr><tr><td><code>-s</code>, <code>--slug</code></td><td>Post slug. Customize the URL of the post.</td></tr></tbody></table><p>By default, Hexo will use the title to define the path of the file. For pages, it will create a directory of that name and an <code>index.md</code> file in it. Use the <code>--path</code> option to override that behaviour and define the file path:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page --path about/me <span class="string">"About me"</span></span><br></pre></td></tr></tbody></table></figure><p>will create <code>source/about/me.md</code> file with the title “About me” set in the front matter.</p><p>Please note that the title is mandatory. For example, this will not result in the behaviour you might expect:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page --path about/me</span><br></pre></td></tr></tbody></table></figure><p>will create the post <code>source/_posts/about/me.md</code> with the title “page” in the front matter. This is because there is only one argument (<code>page</code>) and the default layout is <code>post</code>.</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>Generates static files.</p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>-d</code>, <code>--deploy</code></td><td>Deploy after generation finishes</td></tr><tr><td><code>-w</code>, <code>--watch</code></td><td>Watch file changes</td></tr><tr><td><code>-b</code>, <code>--bail</code></td><td>Raise an error if any unhandled exception is thrown during generation</td></tr><tr><td><code>-f</code>, <code>--force</code></td><td>Force regenerate</td></tr><tr><td><code>-c</code>, <code>--concurrency</code></td><td>Maximum number of files to be generated in parallel. Default is infinity</td></tr></tbody></table><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo publish [layout] &lt;filename&gt;</span><br></pre></td></tr></tbody></table></figure><p>Publishes a draft.</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>Starts a local server. By default, this is at <code>http://localhost:4000/</code>.</p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>-p</code>, <code>--port</code></td><td>Override default port</td></tr><tr><td><code>-s</code>, <code>--static</code></td><td>Only serve static files</td></tr><tr><td><code>-l</code>, <code>--log</code></td><td>Enable logger. Override logger format.</td></tr></tbody></table><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>Deploys your website.</p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>-g</code>, <code>--generate</code></td><td>Generate before deployment</td></tr></tbody></table><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo render &lt;file1&gt; [file2] ...</span><br></pre></td></tr></tbody></table></figure><p>Renders files.</p><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>-o</code>, <code>--output</code></td><td>Output destination</td></tr></tbody></table><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate &lt;<span class="built_in">type</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p><a href="migration.html">Migrates</a> content from other blog systems.</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></tbody></table></figure><p>Cleans the cache file (<code>db.json</code>) and generated files (<code>public</code>).</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo list &lt;<span class="built_in">type</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p>Lists all routes.</p><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo version</span><br></pre></td></tr></tbody></table></figure><p>Displays version information.</p><h2 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h2><h3 id="Safe-mode"><a href="#Safe-mode" class="headerlink" title="Safe mode"></a>Safe mode</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --safe</span><br></pre></td></tr></tbody></table></figure><p>Disables loading plugins and scripts. Try this if you encounter problems after installing a new plugin.</p><h3 id="Debug-mode"><a href="#Debug-mode" class="headerlink" title="Debug mode"></a>Debug mode</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --debug</span><br></pre></td></tr></tbody></table></figure><p>Logs verbose messages to the terminal and to <code>debug.log</code>. Try this if you encounter any problems with Hexo. If you see errors, please <a href="https://github.com/hexojs/hexo/issues/new">raise a GitHub issue</a>.</p><h3 id="Silent-mode"><a href="#Silent-mode" class="headerlink" title="Silent mode"></a>Silent mode</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --silent</span><br></pre></td></tr></tbody></table></figure><p>Silences output to the terminal.</p><h3 id="Customize-config-file-path"><a href="#Customize-config-file-path" class="headerlink" title="Customize config file path"></a>Customize config file path</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --config custom.yml</span><br></pre></td></tr></tbody></table></figure><p>Uses a custom config file (instead of <code>_config.yml</code>). Also accepts a comma-separated list (no spaces) of JSON or YAML config files that will combine the files into a single <code>_multiconfig.yml</code>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --config custom.yml,custom2.json</span><br></pre></td></tr></tbody></table></figure><h3 id="Display-drafts"><a href="#Display-drafts" class="headerlink" title="Display drafts"></a>Display drafts</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --draft</span><br></pre></td></tr></tbody></table></figure><p>Displays draft posts (stored in the <code>source/_drafts</code> folder).</p><h3 id="Customize-CWD"><a href="#Customize-CWD" class="headerlink" title="Customize CWD"></a>Customize CWD</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo --cwd /path/to/cwd</span><br></pre></td></tr></tbody></table></figure><p>Customizes the path of current working directory.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;This is a repost from &lt;a href=&quot;https://hexo.io/docs/commands.html&quot;&gt;hexo’s website&lt;/a&gt;. &lt;/p&gt;
&lt;h2 id=&quot;init&quot;&gt;&lt;a href=&quot;#init&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Configuration</title>
    <link href="http://example.com/2021/10/30/configuration/"/>
    <id>http://example.com/2021/10/30/configuration/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>You can modify site settings in <code>_config.yml</code> or in an <a href="#Using-an-Alternate-Config">alternate config file</a>.</p><h3 id="Site"><a href="#Site" class="headerlink" title="Site"></a>Site</h3><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><code>title</code></td><td>The title of your website</td></tr><tr><td><code>subtitle</code></td><td>The subtitle of your website</td></tr><tr><td><code>description</code></td><td>The description of your website</td></tr><tr><td><code>keywords</code></td><td>The keywords of your website. Supports multiple values.</td></tr><tr><td><code>author</code></td><td>Your name</td></tr><tr><td><code>language</code></td><td>The language of your website. Use a <a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">2-letter ISO-639-1 code</a> or optionally <a href="/docs/internationalization">its variant</a>. Default is <code>en</code>.</td></tr><tr><td><code>timezone</code></td><td>The timezone of your website. Hexo uses the setting on your computer by default. You can find the list of available timezones <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">here</a>. Some examples are <code>America/New_York</code>, <code>Japan</code>, and <code>UTC</code>.</td></tr></tbody></table><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>url</code></td><td>The URL of your website, must starts with <code>http://</code> or <code>https://</code></td><td></td></tr><tr><td><code>root</code></td><td>The root directory of your website</td><td><code>url's pathname</code></td></tr><tr><td><code>permalink</code></td><td>The <a href="permalinks.html">permalink</a> format of articles</td><td><code>:year/:month/:day/:title/</code></td></tr><tr><td><code>permalink_defaults</code></td><td>Default values of each segment in permalink</td><td></td></tr><tr><td><code>pretty_urls</code></td><td>Rewrite the <a href="variables.html"><code>permalink</code></a> variables to pretty URLs</td><td></td></tr><tr><td><code>pretty_urls.trailing_index</code></td><td>Trailing <code>index.html</code>, set to <code>false</code> to remove it</td><td><code>true</code></td></tr><tr><td><code>pretty_urls.trailing_html</code></td><td>Trailing <code>.html</code>, set to <code>false</code> to remove it (<em>does not apply to trailing <code>index.html</code></em>)</td><td><code>true</code></td></tr></tbody></table><p>Examples:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># e.g. page.permalink is http://example.com/foo/bar/index.html</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">false</span></span><br><span class="line"><span class="comment"># becomes http://example.com/foo/bar/</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Directory"><a href="#Directory" class="headerlink" title="Directory"></a>Directory</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>source_dir</code></td><td>Source folder. Where your content is stored</td><td><code>source</code></td></tr><tr><td><code>public_dir</code></td><td>Public folder. Where the static site will be generated</td><td><code>public</code></td></tr><tr><td><code>tag_dir</code></td><td>Tag directory</td><td><code>tags</code></td></tr><tr><td><code>archive_dir</code></td><td>Archive directory</td><td><code>archives</code></td></tr><tr><td><code>category_dir</code></td><td>Category directory</td><td><code>categories</code></td></tr><tr><td><code>code_dir</code></td><td>Include code directory (subdirectory of <code>source_dir</code>)</td><td><code>downloads/code</code></td></tr><tr><td><code>i18n_dir</code></td><td>i18n directory</td><td><code>:lang</code></td></tr><tr><td><code>skip_render</code></td><td>Paths that will be copied to <code>public</code> raw, without being rendered. You can use <a href="https://github.com/micromatch/micromatch#extended-globbing">glob expressions</a> for path matching.</td><td></td></tr></tbody></table><p>Examples:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">skip_render:</span> <span class="string">"mypage/**/*"</span></span><br><span class="line"><span class="comment"># will output `source/mypage/index.html` and `source/mypage/code.js` without altering them.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## This also can be used to exclude posts,</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="string">"_posts/test-post.md"</span></span><br><span class="line"><span class="comment"># will ignore the `source/_posts/test-post.md`.</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Writing"><a href="#Writing" class="headerlink" title="Writing"></a>Writing</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>new_post_name</code></td><td>The filename format for new posts</td><td><code>:title.md</code></td></tr><tr><td><code>default_layout</code></td><td>Default layout</td><td><code>post</code></td></tr><tr><td><code>titlecase</code></td><td>Transform titles into title case?</td><td><code>false</code></td></tr><tr><td><code>external_link</code></td><td>Open external links in a new tab?</td><td></td></tr><tr><td><code>external_link.enable</code></td><td>Open external links in a new tab?</td><td><code>true</code></td></tr><tr><td><code>external_link.field</code></td><td>Applies to the whole <code>site</code> or <code>post</code> only</td><td><code>site</code></td></tr><tr><td><code>external_link.exclude</code></td><td>Exclude hostname. Specify subdomain when applicable, including <code>www</code></td><td><code>[]</code></td></tr><tr><td><code>filename_case</code></td><td>Transform filenames to <code>1</code> lower case; <code>2</code> upper case</td><td><code>0</code></td></tr><tr><td><code>render_drafts</code></td><td>Display drafts?</td><td><code>false</code></td></tr><tr><td><code>post_asset_folder</code></td><td>Enable the <a href="asset-folders.html">Asset Folder</a>?</td><td><code>false</code></td></tr><tr><td><code>relative_link</code></td><td>Make links relative to the root folder?</td><td><code>false</code></td></tr><tr><td><code>future</code></td><td>Display future posts?</td><td><code>true</code></td></tr><tr><td><code>highlight</code></td><td>Code block syntax highlight settings, see <a href="/docs/syntax-highlight#Highlight-js">Highlight.js</a> section for usage guide</td><td></td></tr><tr><td><code>prismjs</code></td><td>Code block syntax highlight settings, see <a href="/docs/syntax-highlight#PrismJS">PrismJS</a> section for usage guide</td><td></td></tr></tbody></table><h3 id="Home-page-setting"><a href="#Home-page-setting" class="headerlink" title="Home page setting"></a>Home page setting</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>index_generator</code></td><td>Generate an archive of posts, powered by <a href="https://github.com/hexojs/hexo-generator-index">hexo-generator-index</a></td><td></td></tr><tr><td><code>index_generator.path</code></td><td>Root path for your blog’s index page</td><td><code>''</code></td></tr><tr><td><code>index_generator.per_page</code></td><td>Posts displayed per page.</td><td><code>10</code></td></tr><tr><td><code>index_generator.order_by</code></td><td>Posts order. Order by descending date (new to old) by default.</td><td><code>-date</code></td></tr><tr><td><code>index_generator.pagination_dir</code></td><td>URL format, see <a href="#Pagination">Pagination</a> setting below</td><td><code>page</code></td></tr></tbody></table><h3 id="Category-amp-Tag"><a href="#Category-amp-Tag" class="headerlink" title="Category &amp; Tag"></a>Category &amp; Tag</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>default_category</code></td><td>Default category</td><td><code>uncategorized</code></td></tr><tr><td><code>category_map</code></td><td>Category slugs</td><td></td></tr><tr><td><code>tag_map</code></td><td>Tag slugs</td><td></td></tr></tbody></table><h3 id="Date-Time-format"><a href="#Date-Time-format" class="headerlink" title="Date / Time format"></a>Date / Time format</h3><p>Hexo uses <a href="http://momentjs.com/">Moment.js</a> to process dates.</p><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>date_format</code></td><td>Date format</td><td><code>YYYY-MM-DD</code></td></tr><tr><td><code>time_format</code></td><td>Time format</td><td><code>HH:mm:ss</code></td></tr><tr><td><code>updated_option</code></td><td>The <a href="/docs/variables#Page-Variables"><code>updated</code></a> value to used when not provided in the front-matter</td><td><code>mtime</code></td></tr></tbody></table><p><code>updated_option</code> controls the <code>updated</code> value when not provided in the front-matter:</p><ul><li><code>mtime</code>: Use file modification date as <code>updated</code>. It is the default behavior of Hexo since 3.0.0</li><li><code>date</code>: Use <code>date</code> as <code>updated</code>. Typically used with Git workflow when file modification date could be different.</li><li><code>empty</code>: Simply drop <code>updated</code> when not provided. May not be compatible with most themes and plugins.</li></ul><p><code>use_date_for_updated</code> is deprecated and will be removed in next major version. Please use <code>updated_option: 'date'</code> instead.</p><h3 id="Pagination"><a href="#Pagination" class="headerlink" title="Pagination"></a>Pagination</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>per_page</code></td><td>Number of posts displayed on each page. <code>0</code> disables pagination</td><td><code>10</code></td></tr><tr><td><code>pagination_dir</code></td><td>URL format</td><td><code>page</code></td></tr></tbody></table><p>Examples:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pagination_dir:</span> <span class="string">'page'</span></span><br><span class="line"><span class="comment"># http://example.com/page/2</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">'awesome-page'</span></span><br><span class="line"><span class="comment"># http://example.com/awesome-page/2</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Extensions"><a href="#Extensions" class="headerlink" title="Extensions"></a>Extensions</h3><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><code>theme</code></td><td>Theme name. <code>false</code> disables theming</td></tr><tr><td><code>theme_config</code></td><td>Theme configuration. Include any custom theme settings under this key to override theme defaults.</td></tr><tr><td><code>deploy</code></td><td>Deployment settings</td></tr><tr><td><code>meta_generator</code></td><td><a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta#Attributes">Meta generator</a> tag. <code>false</code> disables injection of the tag.</td></tr></tbody></table><h3 id="Include-Exclude-Files-or-Folders"><a href="#Include-Exclude-Files-or-Folders" class="headerlink" title="Include/Exclude Files or Folders"></a>Include/Exclude Files or Folders</h3><p>Use the following options to explicitly process or ignore certain files/folders. Support <a href="https://github.com/micromatch/micromatch#extended-globbing">glob expressions</a> for path matching.</p><p><code>include</code> and <code>exclude</code> options only apply to the <code>source/</code> folder, whereas <code>ignore</code> option applies to all folders.</p><table><thead><tr><th>Setting</th><th>Description</th></tr></thead><tbody><tr><td><code>include</code></td><td>Include hidden files (including files/folders with a name that start with an underscore, with an exception*)</td></tr><tr><td><code>exclude</code></td><td>Exclude files/folders</td></tr><tr><td><code>ignore</code></td><td>Ignore files/folders</td></tr></tbody></table><p>Examples:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Include/Exclude Files/Folders</span></span><br><span class="line"><span class="attr">include:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">".nojekyll"</span></span><br><span class="line">  <span class="comment"># Include 'source/css/_typing.css'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"css/_typing.css"</span></span><br><span class="line">  <span class="comment"># Include any file in 'source/_css/'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"_css/*"</span></span><br><span class="line">  <span class="comment"># Include any file and subfolder in 'source/_css/'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"_css/**/*"</span></span><br><span class="line"></span><br><span class="line"><span class="attr">exclude:</span></span><br><span class="line">  <span class="comment"># Exclude 'source/js/test.js'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"js/test.js"</span></span><br><span class="line">  <span class="comment"># Exclude any file in 'source/js/'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"js/*"</span></span><br><span class="line">  <span class="comment"># Exclude any file and subfolder in 'source/js/'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"js/**/*"</span></span><br><span class="line">  <span class="comment"># Exclude any file with filename that starts with 'test' in 'source/js/'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"js/test*"</span></span><br><span class="line">  <span class="comment"># Exclude any file with filename that starts with 'test' in 'source/js/' and its subfolders.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"js/**/test*"</span></span><br><span class="line">  <span class="comment"># Do not use this to exclude posts in the 'source/_posts/'.</span></span><br><span class="line">  <span class="comment"># Use skip_render for that. Or prepend an underscore to the filename.</span></span><br><span class="line">  <span class="comment"># - "_posts/hello-world.md" # Does not work.</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ignore:</span></span><br><span class="line">  <span class="comment"># Ignore any folder named 'foo'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"**/foo"</span></span><br><span class="line">  <span class="comment"># Ignore 'foo' folder in 'themes/' only.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"**/themes/*/foo"</span></span><br><span class="line">  <span class="comment"># Same as above, but applies to every subfolders of 'themes/'.</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">"**/themes/**/foo"</span></span><br></pre></td></tr></tbody></table></figure><p>Each value in the list must be enclosed with single/double quotes.</p><p><code>include:</code> and <code>exclude:</code> do not apply to the <code>themes/</code> folder. Either use <code>ignore:</code> or alternatively, prepend an underscore to the file/folder name to exclude.</p><p>* Notable exception is the <code>source/_posts</code> folder, but any file or folder with a name that starts with an underscore under that folder would still be ignored. Using <code>include:</code> rule in that folder is not recommended.</p><h3 id="Using-an-Alternate-Config"><a href="#Using-an-Alternate-Config" class="headerlink" title="Using an Alternate Config"></a>Using an Alternate Config</h3><p>A custom config file path can be specified by adding the <code>--config</code> flag to your <code>hexo</code> commands with a path to an alternate YAML or JSON config file, or a comma-separated list (no spaces) of multiple YAML or JSON files.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># use 'custom.yml' in place of '_config.yml'</span></span><br><span class="line">$ hexo server --config custom.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># use 'custom.yml' &amp; 'custom2.json', prioritizing 'custom2.json'</span></span><br><span class="line">$ hexo server --config custom.yml,custom2.json</span><br></pre></td></tr></tbody></table></figure><p>Using multiple files combines all the config files and saves the merged settings to <code>_multiconfig.yml</code>. The later values take precedence. It works with any number of JSON and YAML files with arbitrarily deep objects. Note that <strong>no spaces are allowed in the list</strong>.</p><p>For instance, in the above example if <code>foo: bar</code> is in <code>custom.yml</code>, but <code>"foo": "dinosaur"</code> is in <code>custom2.json</code>, <code>_multiconfig.yml</code> will contain <code>foo: dinosaur</code>.</p><h3 id="Alternate-Theme-Config"><a href="#Alternate-Theme-Config" class="headerlink" title="Alternate Theme Config"></a>Alternate Theme Config</h3><p>Hexo themes are independent projects, with separate <code>_config.yml</code> files.</p><p>Instead of forking a theme, and maintaining a custom version with your settings, you can configure it from somewhere else:</p><p><strong>from <code>theme_config</code> in site’s primary configuration file</strong></p><blockquote><p>Supported since Hexo 2.8.2</p></blockquote><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">"my-theme"</span></span><br><span class="line"><span class="attr">theme_config:</span></span><br><span class="line">  <span class="attr">bio:</span> <span class="string">"My awesome bio"</span></span><br><span class="line">  <span class="attr">foo:</span></span><br><span class="line">    <span class="attr">bar:</span> <span class="string">'a'</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># themes/my-theme/_config.yml</span></span><br><span class="line"><span class="attr">bio:</span> <span class="string">"Some generic bio"</span></span><br><span class="line"><span class="attr">logo:</span> <span class="string">"a-cool-image.png"</span></span><br><span class="line">  <span class="attr">foo:</span></span><br><span class="line">    <span class="attr">baz:</span> <span class="string">'b'</span></span><br></pre></td></tr></tbody></table></figure><p>Resulting in theme configuration:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  bio: <span class="string">"My awesome bio"</span>,</span><br><span class="line">  logo: <span class="string">"a-cool-image.png"</span>,</span><br><span class="line">  foo: {</span><br><span class="line">    bar: <span class="string">"a"</span>,</span><br><span class="line">    baz: <span class="string">"b"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><strong>from a dedicated <code>_config.[theme].yml</code> file</strong></p><blockquote><p>Supported since Hexo 5.0.0</p></blockquote><p>The file should be placed in your site folder, both <code>yml</code> and <code>json</code> are supported. <code>theme</code> inside <code>_config.yml</code> must be configured for Hexo to read <code>_config.[theme].yml</code></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">"my-theme"</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.my-theme.yml</span></span><br><span class="line"><span class="attr">bio:</span> <span class="string">"My awesome bio"</span></span><br><span class="line"><span class="attr">foo:</span></span><br><span class="line">  <span class="attr">bar:</span> <span class="string">'a'</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># themes/my-theme/_config.yml</span></span><br><span class="line"><span class="attr">bio:</span> <span class="string">"Some generic bio"</span></span><br><span class="line"><span class="attr">logo:</span> <span class="string">"a-cool-image.png"</span></span><br><span class="line">  <span class="attr">foo:</span></span><br><span class="line">    <span class="attr">baz:</span> <span class="string">'b'</span></span><br></pre></td></tr></tbody></table></figure><p>Resulting in theme configuration:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  bio: <span class="string">"My awesome bio"</span>,</span><br><span class="line">  logo: <span class="string">"a-cool-image.png"</span>,</span><br><span class="line">  foo: {</span><br><span class="line">    bar: <span class="string">"a"</span>,</span><br><span class="line">    baz: <span class="string">"b"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>We strongly recommend you to store your theme configuration in one place. But in case you have to store your theme configuration separately, you need to know the priority of those configurations: The <code>theme_config</code> inside site’s primary configuration file has the highest priority during merging, then the dedicated theme configuration file.<br>The <code>_config.yml</code> file under the theme directory has the lowest priority.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;You can modify site settings in &lt;code&gt;_config.yml&lt;/code&gt; or in an &lt;a href=&quot;#Using-an-Alternate-Config&quot;&gt;alternate config file&lt;/a&gt;.&lt;/p&gt;
&lt;h3</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Contributing</title>
    <link href="http://example.com/2021/10/30/contributing/"/>
    <id>http://example.com/2021/10/30/contributing/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>We welcome you to join the development of Hexo. 🤗</p><h2 id="Development"><a href="#Development" class="headerlink" title="Development"></a>Development</h2><p>We welcome you to join the development of Hexo. This document will help you through the process.</p><h3 id="Before-You-Start"><a href="#Before-You-Start" class="headerlink" title="Before You Start"></a>Before You Start</h3><p>Please read <a href="https://github.com/hexojs/hexo/blob/master/CODE_OF_CONDUCT.md">Contributor Covenant Code of Conduct</a> first.</p><p>Please follow the coding style:</p><ul><li>Follow <a href="https://google.github.io/styleguide/jsguide.html">Google JavaScript Style Guide</a>.</li><li>Use soft-tabs with a two space indent.</li><li>Don’t put commas first.</li></ul><p>Also, Hexo has its own <a href="https://github.com/hexojs/eslint-config-hexo">ESLint config</a>, so please make sure your contribution will make ESLint happy.</p><h3 id="Workflow"><a href="#Workflow" class="headerlink" title="Workflow"></a>Workflow</h3><ol><li>Fork <a href="https://github.com/hexojs/hexo">hexojs/hexo</a>.</li><li>Clone the repository to your computer and install dependencies.</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/&lt;username&gt;/hexo.git</span><br><span class="line">$ <span class="built_in">cd</span> hexo</span><br><span class="line">$ npm install</span><br><span class="line">$ git submodule update --init</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>Create a feature branch.</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git checkout -b new_feature</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>Start hacking.</li><li>Push the branch:</li></ol><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin new_feature</span><br></pre></td></tr></tbody></table></figure><ol start="6"><li>Create a pull request and describe the change.</li></ol><h3 id="Notice"><a href="#Notice" class="headerlink" title="Notice"></a>Notice</h3><ul><li>Please don’t modify version number in <code>package.json</code>.</li><li>Your pull request will only get merged when tests passed. Don’t forget to run tests before submission.</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="built_in">test</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Updating-official-plugins"><a href="#Updating-official-plugins" class="headerlink" title="Updating official-plugins"></a>Updating official-plugins</h2><p>Also, we welcome PR or issue to <a href="https://github.com/hexojs">official-plugins</a>. 🤗</p><h2 id="Updating-Documentation"><a href="#Updating-Documentation" class="headerlink" title="Updating Documentation"></a>Updating Documentation</h2><p>The Hexo documentation is open source and you can find the source code on <a href="https://github.com/hexojs/site">hexojs/site</a>.</p><h3 id="Workflow-1"><a href="#Workflow-1" class="headerlink" title="Workflow"></a>Workflow</h3><ol><li>Fork <a href="https://github.com/hexojs/site">hexojs/site</a></li><li>Clone the repository to your computer and install dependencies.</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g <span class="comment"># If you don't have hexo-cli installed</span></span><br><span class="line">$ git <span class="built_in">clone</span> https://github.com/&lt;username&gt;/site.git</span><br><span class="line">$ <span class="built_in">cd</span> site</span><br><span class="line">$ npm install</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>Start editing the documentation. You can start the server for live previewing.</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>Push the branch.</li><li>Create a pull request and describe the change.</li></ol><h3 id="Translating"><a href="#Translating" class="headerlink" title="Translating"></a>Translating</h3><ol><li>Add a new language folder in <code>source</code> folder. (All lower case)</li><li>Copy Markdown and template files in <code>source</code> folder to the new language folder.</li><li>Add the new language to <code>source/_data/language.yml</code>.</li><li>Copy <code>en.yml</code> in <code>themes/navy/languages</code> and rename to the language name (all lower case).</li></ol><h2 id="Reporting-Issues"><a href="#Reporting-Issues" class="headerlink" title="Reporting Issues"></a>Reporting Issues</h2><p>When you encounter some problems when using Hexo, you can find the solutions in <a href="troubleshooting.html">Troubleshooting</a> or ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a> or <a href="https://groups.google.com/group/hexo">Google Group</a>. If you can’t find the answer, please report it on GitHub.</p><ol><li>Represent the problem in <a href="commands.html#Debug_mode">debug mode</a>.</li><li>Follow the steps from issue template to provide debug message and version when submitting a new issue at GitHub.</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;We welcome you to join the development of Hexo. 🤗&lt;/p&gt;
&lt;h2 id=&quot;Development&quot;&gt;&lt;a href=&quot;#Development&quot; class=&quot;headerlink&quot; title=&quot;Development&quot;</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Data Files</title>
    <link href="http://example.com/2021/10/30/data-files/"/>
    <id>http://example.com/2021/10/30/data-files/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhere. For such use cases, Hexo 3 introduced the new <strong>Data files</strong>. This feature loads YAML or JSON files in <code>source/_data</code> folder so you can use them in your site.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/CN31plHbI-w" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p>For example, add <code>menu.yml</code> in <code>source/_data</code> folder.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">Home:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">Gallery:</span> <span class="string">/gallery/</span></span><br><span class="line"><span class="attr">Archives:</span> <span class="string">/archives/</span></span><br></pre></td></tr></tbody></table></figure><p>And you can use them in templates:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;% for (var link in site.data.menu) { %&gt;</span><br><span class="line">  &lt;a href="&lt;%= site.data.menu[link] %&gt;"&gt; &lt;%= link %&gt; &lt;/a&gt;</span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure><p>render like this :</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href="/"&gt; Home &lt;/a&gt;</span><br><span class="line">&lt;a href="/gallery/"&gt; Gallery &lt;/a&gt;</span><br><span class="line">&lt;a href="/archives/"&gt; Archives &lt;/a&gt;</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Sometimes you may need to use some data in templates which is not directly available in your posts, or you want to reuse the data elsewhe</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Front-matter</title>
    <link href="http://example.com/2021/10/30/front-matter/"/>
    <id>http://example.com/2021/10/30/front-matter/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/pfD6FCZdW4Q" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p>Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.</p><p><strong>YAML</strong></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><p><strong>JSON</strong></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"title"</span>: <span class="string">"Hello World"</span>,</span><br><span class="line"><span class="string">"date"</span>: <span class="string">"2013/7/13 20:46:25"</span></span><br><span class="line">;;;</span><br></pre></td></tr></tbody></table></figure><h3 id="Settings-amp-Their-Default-Values"><a href="#Settings-amp-Their-Default-Values" class="headerlink" title="Settings &amp; Their Default Values"></a>Settings &amp; Their Default Values</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>layout</code></td><td>Layout</td><td><a href="/docs/configuration#Writing"><code>config.default_layout</code></a></td></tr><tr><td><code>title</code></td><td>Title</td><td>Filename (posts only)</td></tr><tr><td><code>date</code></td><td>Published date</td><td>File created date</td></tr><tr><td><code>updated</code></td><td>Updated date</td><td>File updated date</td></tr><tr><td><code>comments</code></td><td>Enables comment feature for the post</td><td>true</td></tr><tr><td><code>tags</code></td><td>Tags (Not available for pages)</td><td></td></tr><tr><td><code>categories</code></td><td>Categories (Not available for pages)</td><td></td></tr><tr><td><code>permalink</code></td><td>Overrides the default permalink of the post</td><td></td></tr><tr><td><code>excerpt</code></td><td>Page excerpt in plain text. Use <a href="/docs/tag-plugins#Post-Excerpt">this plugin</a> to format the text</td><td></td></tr><tr><td><code>disableNunjucks</code></td><td>Disable rendering of Nunjucks tag <code>{{ }}</code>/<code>{% %}</code> and <a href="/docs/tag-plugins">tag plugins</a> when enabled</td><td>false</td></tr><tr><td><code>lang</code></td><td>Set the language to override <a href="/docs/internationalization#Path">auto-detection</a></td><td>Inherited from <code>_config.yml</code></td></tr></tbody></table><h4 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h4><p>The default layout is <code>post</code>, in accordance to the value of <a href="/docs/configuration#Writing"><code>default_layout</code></a> setting in <code>_config.yml</code>. When the layout is disabled (<code>layout: false</code>) in an article, it will not be processed with a theme. However, it will still be rendered by any available renderer: if an article is written in Markdown and a Markdown renderer (like the default <a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>) is installed, it will be rendered to HTML.</p><p><a href="/docs/tag-plugins">Tag plugins</a> are always processed regardless of layout, unless disabled by the <code>disableNunjucks</code> setting or <a href="/api/renderer#Disable-Nunjucks-tags">renderer</a>.</p><h4 id="Categories-amp-Tags"><a href="#Categories-amp-Tags" class="headerlink" title="Categories &amp; Tags"></a>Categories &amp; Tags</h4><p>Only posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.</p><p><strong>Example</strong></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Sports</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Baseball</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Injury</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Fight</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Shocking</span></span><br></pre></td></tr></tbody></table></figure><p>If you want to apply multiple category hierarchies, use a list of names instead of a single name. If Hexo sees any categories defined this way on a post, it will treat each category for that post as its own independent hierarchy.</p><p><strong>Example</strong></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">Sports</span>, <span class="string">Baseball</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">MLB</span>, <span class="string">American</span> <span class="string">League</span>, <span class="string">Boston</span> <span class="string">Red</span> <span class="string">Sox</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">MLB</span>, <span class="string">American</span> <span class="string">League</span>, <span class="string">New</span> <span class="string">York</span> <span class="string">Yankees</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="string">Rivalries</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/pfD6FCZdW4Q&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/ifr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Generating</title>
    <link href="http://example.com/2021/10/30/generating/"/>
    <id>http://example.com/2021/10/30/generating/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Generating static files with Hexo is quite easy and fast.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><div class="video-container"><iframe src="https://www.youtube.com/embed/viEJQPVCoLU" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h3 id="Watch-for-File-Changes"><a href="#Watch-for-File-Changes" class="headerlink" title="Watch for File Changes"></a>Watch for File Changes</h3><p>Hexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --watch</span><br></pre></td></tr></tbody></table></figure><h3 id="Deploy-After-Generating"><a href="#Deploy-After-Generating" class="headerlink" title="Deploy After Generating"></a>Deploy After Generating</h3><p>To deploy after generating, you can run one of the following commands. There is no difference between the two.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --deploy</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Generating static files with Hexo is quite easy and fast.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Pages</title>
    <link href="http://example.com/2021/10/30/github-pages/"/>
    <id>http://example.com/2021/10/30/github-pages/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>In this tutorial, we use <a href="https://docs.github.com/en/actions">GitHub Actions</a> to deploy GitHub Pages. It works in both public and private repository. Skip to the <a href="#One-command-deployment">One-command deployment</a> section if you prefer not to upload your source folder to GitHub.</p><ol><li>Create a repo named <b><em>username</em>.github.io</b>, where username is your username on GitHub. If you have already uploaded to other repo, rename the repo instead.</li><li>Add the following <em>highlighted</em> lines to <code>package.json</code>: (skip this step if there are existing lines)</li></ol><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line marked">  <span class="attr">"scripts"</span>: {</span><br><span class="line marked">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span></span><br><span class="line marked">  },</span><br><span class="line">  <span class="attr">"hexo"</span>: {</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"5.0.0"</span></span><br><span class="line">  },</span><br><span class="line">  <span class="attr">"dependencies"</span>: {</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^5.0.0"</span>,</span><br><span class="line">    ...</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>Push the files of your Hexo folder to the <strong><code>source</code> branch</strong> of your repository. The <code>public/</code> folder is not (and should not be) uploaded by default, make sure the <code>.gitignore</code> file contains <code>public/</code> line. The folder structure should be roughly similar to <a href="https://github.com/hexojs/hexo-starter">this repo</a>, without the <code>.gitmodules</code> file.</li></ol><ul><li><p>To push <code>source</code> to GitHub:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin source</span><br></pre></td></tr></tbody></table></figure></li></ul><ol start="4"><li>Add <code>.github/workflows/pages.yml</code> file to your repo with the following content:</li></ol><figure class="highlight yml"><figcaption><span>.github/workflows/pages.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">source</span>  <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">pages:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">12.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">'12.x'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">${{</span> <span class="string">runner.OS</span> <span class="string">}}-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            ${{ runner.OS }}-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">${{</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">}}</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">master</span>  <span class="comment"># deploying branch</span></span><br></pre></td></tr></tbody></table></figure><ol start="5"><li>Once the deployment is finished, the generated pages can be found in the <code>master</code> branch of your repository</li><li>In your GitHub repo’s setting, navigate to “GitHub Pages” section and change Source to <strong>master branch</strong>.</li><li>Check the webpage at <em>username</em>.github.io.</li></ol><p>Note - if you specify a custom domain name with a <code>CNAME</code>, you need to add the <code>CNAME</code> file to the <code>source/</code> folder.</p><h2 id="Project-page"><a href="#Project-page" class="headerlink" title="Project page"></a>Project page</h2><p>If you prefer to have a project page on GitHub:</p><ol><li>Navigate to your repo on GitHub. Go to the <strong>Settings</strong> tab. Change the <strong>Repository name</strong> so your blog is available at <b>username.github.io/<em>repository</em></b>,  <strong>repository</strong> can be any name, like <em>blog</em> or <em>hexo</em>.</li><li>Edit your <strong>_config.yml</strong>, change the <code>root:</code> value to the <code>/&lt;repository&gt;/</code> (must starts and ends with a slash, without the brackets).</li><li>Modify the following lines in <code>.github/workflows/pages.yml</code>:</li></ol><figure class="highlight diff"><figcaption><span>.github/workflows/pages.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">name: Pages</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line"><span class="deletion">-      - source  # default branch</span></span><br><span class="line"><span class="addition">+      - master</span></span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  pages:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">      - name: Deploy</span><br><span class="line">        uses: peaceiris/actions-gh-pages@v3</span><br><span class="line">        with:</span><br><span class="line">          github_token: ${{ secrets.GITHUB_TOKEN }}</span><br><span class="line">          publish_dir: ./public</span><br><span class="line"><span class="deletion">-          publish_branch: master  # deploying branch</span></span><br><span class="line"><span class="addition">+          publish_branch: gh-pages</span></span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>Commit and push to <strong><code>master</code> branch</strong>.</li></ol><ul><li><p>To push <code>master</code> branch to GitHub:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></tbody></table></figure></li></ul><ol start="5"><li>Once the deployment is finished, the generated pages can be found in the <code>gh-pages</code> branch of your repository</li><li>In your GitHub repo’s setting, navigate to “GitHub Pages” section and change Source to <strong>gh-pages branch</strong>.</li></ol><h2 id="One-command-deployment"><a href="#One-command-deployment" class="headerlink" title="One-command deployment"></a>One-command deployment</h2><p>The following instruction is adapted from <a href="/docs/one-command-deployment">one-command deployment</a> page.</p><ol><li>Install <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>.</li><li>Add the following configurations to <strong>_config.yml</strong>, (remove existing lines if any)</li></ol>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class="line">  <span class="comment"># example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>Run <code>hexo clean &amp;&amp; hexo deploy</code>.</li><li>Check the webpage at <em>username</em>.github.io.</li></ol><h2 id="Useful-links"><a href="#Useful-links" class="headerlink" title="Useful links"></a>Useful links</h2><ul><li><a href="https://help.github.com/categories/github-pages-basics/">GitHub Pages</a></li><li><a href="https://docs.travis-ci.com/user/tutorial/">Travis CI Docs</a></li><li><a href="https://github.com/marketplace/actions/github-pages-action">peaceiris/actions-gh-pages</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In this tutorial, we use &lt;a href=&quot;https://docs.github.com/en/actions&quot;&gt;GitHub Actions&lt;/a&gt; to deploy GitHub Pages. It works in both public </summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>GitLab Pages</title>
    <link href="http://example.com/2021/10/30/gitlab-pages/"/>
    <id>http://example.com/2021/10/30/gitlab-pages/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Create a new repository named <b><em>username</em>.gitlab.io</b>, where username is your username on GitLab. If you have already uploaded to other repo, rename the repo instead.</li><li>Enable Shared Runners via <code>Settings -&gt; CI / CD -&gt; Shared Runners</code>.</li><li>Push the files of your Hexo folder to the repository. The <code>public/</code> folder is not (and should not be) uploaded by default, make sure the <code>.gitignore</code> file contains <code>public/</code> line. The folder structure should be roughly similar to <a href="https://gitlab.com/pages/hexo">this repo</a>.</li><li>Add <code>.gitlab-ci.yml</code> file to your repo (alongside _config.yml &amp; package.json) with the following content:</li></ol><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">node:14-alpine</span> <span class="comment"># use nodejs v14 LTS</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">node_modules/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">before_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pages:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><ol start="5"><li><em>username</em>.gitlab.io should be up and running, once GitLab CI finishes the deployment job,</li><li>(Optional) If you wish to inspect the generated site assets (html, css, js, etc), they can be found in the <a href="https://docs.gitlab.com/ee/user/project/pipelines/job_artifacts.html">job artifact</a>.</li></ol><h2 id="Project-page"><a href="#Project-page" class="headerlink" title="Project page"></a>Project page</h2><p>If you prefer to have a project page on GitLab:</p><ol><li>Go to <code>Settings -&gt; General -&gt; Advanced -&gt; Change path</code>. Change the value to a name, so the website is available at <b>username.gitlab.io/<em>name</em></b>. It can be any name, like <em>blog</em> or <em>hexo</em>.</li><li>Edit <strong>_config.yml</strong>, change the <code>root:</code> value from <code>""</code> to <code>"name"</code>.</li><li>Commit and push.</li></ol><h2 id="Useful-links"><a href="#Useful-links" class="headerlink" title="Useful links"></a>Useful links</h2><ul><li><a href="https://docs.gitlab.com/ee/user/project/pages/index.html">GitLab Pages</a></li><li><a href="https://docs.gitlab.com/ee/ci/README.html">GitLab CI Docs</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;Create a new repository named &lt;b&gt;&lt;em&gt;username&lt;/em&gt;.gitlab.io&lt;/b&gt;, where username is your username on GitLab. If you have already up</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Helpers</title>
    <link href="http://example.com/2021/10/30/helpers/"/>
    <id>http://example.com/2021/10/30/helpers/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.</p><p>You could easily <a href="https://hexo.io/api/helper.html">write your own custom helper</a> or use our ready-made helpers.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/Uc53pW0GJHU" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><h3 id="url-for"><a href="#url-for" class="headerlink" title="url_for"></a>url_for</h3><p>Returns a url with the root path prefixed. Output is encoded automatically.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- url_for(path, [option]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>relative</code></td><td>Output relative link</td><td>Value of <code>config.relative_link</code></td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span> <span class="comment"># example</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- url_for(<span class="string">'/a/path'</span>) %&gt;</span><br><span class="line"><span class="comment">// /blog/a/path</span></span><br></pre></td></tr></tbody></table></figure><p>Relative link, follows <code>relative_link</code> option by default<br>e.g. post/page path is ‘/foo/bar/index.html’</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- url_for(<span class="string">'/css/style.css'</span>) %&gt;</span><br><span class="line"><span class="comment">// ../../css/style.css</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Override option</span></span><br><span class="line"><span class="comment"> * you could also disable it to output a non-relative link,</span></span><br><span class="line"><span class="comment"> * even when `relative_link` is enabled and vice versa.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&lt;%- url_for(<span class="string">'/css/style.css'</span>, {<span class="attr">relative</span>: <span class="literal">false</span>}) %&gt;</span><br><span class="line"><span class="comment">// /css/style.css</span></span><br></pre></td></tr></tbody></table></figure><h3 id="relative-url"><a href="#relative-url" class="headerlink" title="relative_url"></a>relative_url</h3><p>Returns the relative URL from <code>from</code> to <code>to</code>.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- relative_url(<span class="keyword">from</span>, to) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- relative_url(<span class="string">'foo/bar/'</span>, <span class="string">'css/style.css'</span>) %&gt;</span><br><span class="line"><span class="comment">// ../../css/style.css</span></span><br></pre></td></tr></tbody></table></figure><h3 id="full-url-for"><a href="#full-url-for" class="headerlink" title="full_url_for"></a>full_url_for</h3><p>Returns a url with the <code>config.url</code> prefixed. Output is encoded automatically.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_url_for(path) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://example.com/blog</span> <span class="comment"># example</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_url_for(<span class="string">'/a/path'</span>) %&gt;</span><br><span class="line"><span class="comment">// https://example.com/blog/a/path</span></span><br></pre></td></tr></tbody></table></figure><h3 id="gravatar"><a href="#gravatar" class="headerlink" title="gravatar"></a>gravatar</h3><p>Returns the gravatar image url from an email.</p><p>If you didn’t specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- gravatar(email, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>s</code></td><td>Output image size</td><td>80</td></tr><tr><td><code>d</code></td><td>Default image</td><td></td></tr><tr><td><code>f</code></td><td>Force default</td><td></td></tr><tr><td><code>r</code></td><td>Rating</td><td></td></tr></tbody></table><p>More info: <a href="https://en.gravatar.com/site/implement/images/">Gravatar</a></p><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- gravatar(<span class="string">'a@abc.com'</span>) %&gt;</span><br><span class="line"><span class="comment">// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class="line"></span><br><span class="line">&lt;%- gravatar(<span class="string">'a@abc.com'</span>, <span class="number">40</span>) %&gt;</span><br><span class="line"><span class="comment">// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class="line"></span><br><span class="line">&lt;%- gravatar(<span class="string">'a@abc.com'</span> {<span class="attr">s</span>: <span class="number">40</span>, <span class="attr">d</span>: <span class="string">'https://via.placeholder.com/150'</span>}) %&gt;</span><br><span class="line"><span class="comment">// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=https%3A%2F%2Fvia.placeholder.com%2F150</span></span><br></pre></td></tr></tbody></table></figure><h2 id="HTML-Tags"><a href="#HTML-Tags" class="headerlink" title="HTML Tags"></a>HTML Tags</h2><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p>Loads CSS files. <code>path</code> can be an array or a string. <code>path</code> can be a string, an array, an object or an array of objects. <a href="/docs/configuration#URL"><code>/&lt;root&gt;/</code></a> value is prepended while <code>.css</code> extension is appended to the <code>path</code> automatically. Use object type for custom attributes.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- css(<span class="string">'style.css'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- css([<span class="string">'style.css'</span>, <span class="string">'screen.css'</span>]) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css"&gt;</span></span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/screen.css"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- css({ <span class="attr">href</span>: <span class="string">'style.css'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span> }) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css" integrity="foo"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- css([{ <span class="attr">href</span>: <span class="string">'style.css'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span> }, { <span class="attr">href</span>: <span class="string">'screen.css'</span>, <span class="attr">integrity</span>: <span class="string">'bar'</span> }]) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css" integrity="foo"&gt;</span></span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/screen.css" integrity="bar"&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p>Loads JavaScript files. <code>path</code> can be a string, an array, an object or an array of objects. <a href="/docs/configuration#URL"><code>/&lt;root&gt;/</code></a> value is prepended while <code>.js</code> extension is appended to the <code>path</code> automatically. Use object type for custom attributes.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- js(<span class="string">'script.js'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- js([<span class="string">'script.js'</span>, <span class="string">'gallery.js'</span>]) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">// &lt;script src="/gallery.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- js({ <span class="attr">src</span>: <span class="string">'script.js'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span>, <span class="attr">async</span>: <span class="literal">true</span> }) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js" integrity="foo" async&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- js([{ <span class="attr">src</span>: <span class="string">'script.js'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span> }, { <span class="attr">src</span>: <span class="string">'gallery.js'</span>, <span class="attr">integrity</span>: <span class="string">'bar'</span> }]) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js" integrity="foo"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">// &lt;script src="/gallery.js" integrity="bar"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="link-to"><a href="#link-to" class="headerlink" title="link_to"></a>link_to</h3><p>Inserts a link.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>external</code></td><td>Opens the link in a new tab</td><td>false</td></tr><tr><td><code>class</code></td><td>Class name</td><td></td></tr><tr><td><code>id</code></td><td>ID</td><td></td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- link_to(<span class="string">'http://www.google.com'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- link_to(<span class="string">'http://www.google.com'</span>, <span class="string">'Google'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="Google"&gt;Google&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- link_to(<span class="string">'http://www.google.com'</span>, <span class="string">'Google'</span>, {<span class="attr">external</span>: <span class="literal">true</span>}) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="Google" target="_blank" rel="noopener"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="mail-to"><a href="#mail-to" class="headerlink" title="mail_to"></a>mail_to</h3><p>Inserts a mail link.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>class</code></td><td>Class name</td></tr><tr><td><code>id</code></td><td>ID</td></tr><tr><td><code>subject</code></td><td>Mail subject</td></tr><tr><td><code>cc</code></td><td>CC</td></tr><tr><td><code>bcc</code></td><td>BCC</td></tr><tr><td><code>body</code></td><td>Mail content</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- mail_to(<span class="string">'a@abc.com'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="mailto:a@abc.com" title="a@abc.com"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- mail_to(<span class="string">'a@abc.com'</span>, <span class="string">'Email'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="mailto:a@abc.com" title="Email"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="image-tag"><a href="#image-tag" class="headerlink" title="image_tag"></a>image_tag</h3><p>Inserts an image.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>alt</code></td><td>Alternative text of the image</td></tr><tr><td><code>class</code></td><td>Class name</td></tr><tr><td><code>id</code></td><td>ID</td></tr><tr><td><code>width</code></td><td>Image width</td></tr><tr><td><code>height</code></td><td>Image height</td></tr></tbody></table><h3 id="favicon-tag"><a href="#favicon-tag" class="headerlink" title="favicon_tag"></a>favicon_tag</h3><p>Inserts a favicon.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="feed-tag"><a href="#feed-tag" class="headerlink" title="feed_tag"></a>feed_tag</h3><p>Inserts a feed link.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>title</code></td><td>Feed title</td><td><code>config.title</code></td></tr><tr><td><code>type</code></td><td>Feed type</td><td>atom</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- feed_tag(<span class="string">'atom.xml'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="alternate" href="/atom.xml" title="Hexo" type="application/atom+xml"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- feed_tag(<span class="string">'rss.xml'</span>, { <span class="attr">title</span>: <span class="string">'RSS Feed'</span>, <span class="attr">type</span>: <span class="string">'rss'</span> }) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="alternate" href="/atom.xml" title="RSS Feed" type="application/atom+xml"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Defaults to hexo-generator-feed's config if no argument */</span></span><br><span class="line">&lt;%- feed_tag() %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="alternate" href="/atom.xml" title="Hexo" type="application/atom+xml"&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Conditional-Tags"><a href="#Conditional-Tags" class="headerlink" title="Conditional Tags"></a>Conditional Tags</h2><h3 id="is-current"><a href="#is-current" class="headerlink" title="is_current"></a>is_current</h3><p>Check whether <code>path</code> matches the URL of the current page. Use <code>strict</code> options to enable strict matching.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-home"><a href="#is-home" class="headerlink" title="is_home"></a>is_home</h3><p>Check whether the current page is home page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_home() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-post"><a href="#is-post" class="headerlink" title="is_post"></a>is_post</h3><p>Check whether the current page is a post.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_post() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-page"><a href="#is-page" class="headerlink" title="is_page"></a>is_page</h3><p>Check whether the current page is a page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_page() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-archive"><a href="#is-archive" class="headerlink" title="is_archive"></a>is_archive</h3><p>Check whether the current page is an archive page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-year"><a href="#is-year" class="headerlink" title="is_year"></a>is_year</h3><p>Check whether the current page is a yearly archive page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_year() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-month"><a href="#is-month" class="headerlink" title="is_month"></a>is_month</h3><p>Check whether the current page is a monthly archive page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_month() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-category"><a href="#is-category" class="headerlink" title="is_category"></a>is_category</h3><p>Check whether the current page is a category page.<br>If a string is given as parameter, check whether the current page match the given category.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_category() %&gt;</span><br><span class="line">&lt;%- is_category(<span class="string">'hobby'</span>) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-tag"><a href="#is-tag" class="headerlink" title="is_tag"></a>is_tag</h3><p>Check whether the current page is a tag page.<br>If a string is given as parameter, check whether the current page match the given tag.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_tag() %&gt;</span><br><span class="line">&lt;%- is_tag(<span class="string">'hobby'</span>) %&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="String-Manipulation"><a href="#String-Manipulation" class="headerlink" title="String Manipulation"></a>String Manipulation</h2><h3 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h3><p>Removes prefixing and trailing spaces of a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="strip-html"><a href="#strip-html" class="headerlink" title="strip_html"></a>strip_html</h3><p>Sanitizes all HTML tags in a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- strip_html(<span class="string">'It\'s not &lt;b&gt;important&lt;/b&gt; anymore!'</span>) %&gt;</span><br><span class="line"><span class="comment">// It's not important anymore!</span></span><br></pre></td></tr></tbody></table></figure><h3 id="titlecase"><a href="#titlecase" class="headerlink" title="titlecase"></a>titlecase</h3><p>Transforms a string into proper title caps.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- titlecase(<span class="string">'this is an apple'</span>) %&gt;</span><br><span class="line"># This is an Apple</span><br></pre></td></tr></tbody></table></figure><h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><p>Renders a string with Markdown.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- markdown(<span class="string">'make me **strong**'</span>) %&gt;</span><br><span class="line"><span class="comment">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><p>Renders a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- render(<span class="string">'p(class="example") Test'</span>, <span class="string">'pug'</span>); %&gt;</span><br><span class="line"><span class="comment">// &lt;p class="example"&gt;Test&lt;/p&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>See <a href="https://hexo.io/api/rendering">Rendering</a> for more details.</p><h3 id="word-wrap"><a href="#word-wrap" class="headerlink" title="word_wrap"></a>word_wrap</h3><p>Wraps text into lines no longer than <code>length</code>. <code>length</code> is 80 by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- word_wrap(<span class="string">'Once upon a time'</span>, <span class="number">8</span>) %&gt;</span><br><span class="line"><span class="comment">// Once upon\n a time</span></span><br></pre></td></tr></tbody></table></figure><h3 id="truncate"><a href="#truncate" class="headerlink" title="truncate"></a>truncate</h3><p>Truncates text after certain <code>length</code>. Default is 30 characters.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- truncate(text, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- truncate(<span class="string">'Once upon a time in a world far far away'</span>, {<span class="attr">length</span>: <span class="number">17</span>}) %&gt;</span><br><span class="line"><span class="comment">// Once upon a ti...</span></span><br><span class="line"></span><br><span class="line">&lt;%- truncate(<span class="string">'Once upon a time in a world far far away'</span>, {<span class="attr">length</span>: <span class="number">17</span>, <span class="attr">separator</span>: <span class="string">' '</span>}) %&gt;</span><br><span class="line"><span class="comment">// Once upon a...</span></span><br><span class="line"></span><br><span class="line">&lt;%- truncate(<span class="string">'And they found that many people were sleeping better.'</span>, {<span class="attr">length</span>: <span class="number">25</span>, <span class="attr">omission</span>: <span class="string">'... (continued)'</span>}) %&gt;</span><br><span class="line"><span class="comment">// And they f... (continued)</span></span><br></pre></td></tr></tbody></table></figure><h3 id="escape-html"><a href="#escape-html" class="headerlink" title="escape_html"></a>escape_html</h3><p>Escapes HTML entities in a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- escape_html(str) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- escape_html(<span class="string">'&lt;p&gt;Hello "world".&lt;/p&gt;'</span>) %&gt;</span><br><span class="line"><span class="comment">// &amp;lt;p&amp;gt;Hello &amp;quot;world&amp;quot;.&amp;lt;&amp;#x2F;p&amp;gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Templates"><a href="#Templates" class="headerlink" title="Templates"></a>Templates</h2><h3 id="partial"><a href="#partial" class="headerlink" title="partial"></a>partial</h3><p>Loads other template files. You can define local variables in <code>locals</code>.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>cache</code></td><td>Cache contents (Use fragment cache)</td><td><code>false</code></td></tr><tr><td><code>only</code></td><td>Strict local variables. Only use variables set in <code>locals</code> in templates.</td><td><code>false</code></td></tr></tbody></table><h3 id="fragment-cache"><a href="#fragment-cache" class="headerlink" title="fragment_cache"></a>fragment_cache</h3><p>Caches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- fragment_cache(<span class="string">'header'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="Date-amp-Time"><a href="#Date-amp-Time" class="headerlink" title="Date &amp; Time"></a>Date &amp; Time</h2><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><p>Inserts formatted date. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object. <code>format</code> is <code>date_format</code> setting by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date(<span class="built_in">Date</span>.now()) %&gt;</span><br><span class="line"><span class="comment">// 2013-01-01</span></span><br><span class="line"></span><br><span class="line">&lt;%- date(<span class="built_in">Date</span>.now(), <span class="string">'YYYY/M/D'</span>) %&gt;</span><br><span class="line"><span class="comment">// Jan 1 2013</span></span><br></pre></td></tr></tbody></table></figure><h3 id="date-xml"><a href="#date-xml" class="headerlink" title="date_xml"></a>date_xml</h3><p>Inserts date in XML format. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date_xml(<span class="built_in">Date</span>.now()) %&gt;</span><br><span class="line"><span class="comment">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></tbody></table></figure><h3 id="time"><a href="#time" class="headerlink" title="time"></a>time</h3><p>Inserts formatted time. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object. <code>format</code> is <code>time_format</code> setting by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- time(<span class="built_in">Date</span>.now()) %&gt;</span><br><span class="line"><span class="comment">// 13:05:12</span></span><br><span class="line"></span><br><span class="line">&lt;%- time(<span class="built_in">Date</span>.now(), <span class="string">'h:mm:ss a'</span>) %&gt;</span><br><span class="line"><span class="comment">// 1:05:12 pm</span></span><br></pre></td></tr></tbody></table></figure><h3 id="full-date"><a href="#full-date" class="headerlink" title="full_date"></a>full_date</h3><p>Inserts formatted date and time. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object. <code>format</code> is <code>date_format + time_format</code> setting by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_date(<span class="keyword">new</span> <span class="built_in">Date</span>()) %&gt;</span><br><span class="line"><span class="comment">// Jan 1, 2013 0:00:00</span></span><br><span class="line"></span><br><span class="line">&lt;%- full_date(<span class="keyword">new</span> <span class="built_in">Date</span>(), <span class="string">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class="line"><span class="comment">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></tbody></table></figure><h3 id="moment"><a href="#moment" class="headerlink" title="moment"></a>moment</h3><p><a href="http://momentjs.com/">Moment.js</a> library.</p><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><h3 id="list-categories"><a href="#list-categories" class="headerlink" title="list_categories"></a>list_categories</h3><p>Inserts a list of all categories.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>orderby</code></td><td>Order of categories</td><td>name</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>show_count</code></td><td>Display the number of posts for each category</td><td>true</td></tr><tr><td><code>style</code></td><td>Style to display the category list. <code>list</code> displays categories in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>depth</code></td><td>Levels of categories to be displayed. <code>0</code> displays all categories and child categories; <code>-1</code> is similar to <code>0</code> but displayed in flat; <code>1</code> displays only top level categories.</td><td>0</td></tr><tr><td><code>class</code></td><td>Class name of category list.</td><td>category</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of category name.</td><td></td></tr><tr><td><code>suffix</code></td><td>Add a suffix to link.</td><td>None</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_categories(post.categories, {</span><br><span class="line">  <span class="attr">class</span>: <span class="string">'post-category'</span>,</span><br><span class="line">  <span class="function"><span class="title">transform</span>(<span class="params">str</span>)</span> {</span><br><span class="line">    <span class="keyword">return</span> titlecase(str);</span><br><span class="line">  }</span><br><span class="line">}) %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%- list_categories(post.categories, {</span><br><span class="line">  <span class="attr">class</span>: <span class="string">'post-category'</span>,</span><br><span class="line">  <span class="function"><span class="title">transform</span>(<span class="params">str</span>)</span> {</span><br><span class="line">    <span class="keyword">return</span> str.toUpperCase();</span><br><span class="line">  }</span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="list-tags"><a href="#list-tags" class="headerlink" title="list_tags"></a>list_tags</h3><p>Inserts a list of all tags.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>orderby</code></td><td>Order of categories</td><td>name</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>show_count</code></td><td>Display the number of posts for each tag</td><td>true</td></tr><tr><td><code>style</code></td><td>Style to display the tag list. <code>list</code> displays tags in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>class</code></td><td>Class name of tag list (string) or customize each tag’s class (object, see below).</td><td>tag</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of tag name. See examples in <a href="#list-categories">list_categories</a>.</td><td></td></tr><tr><td><code>amount</code></td><td>The number of tags to display (0 = unlimited)</td><td>0</td></tr><tr><td><code>suffix</code></td><td>Add a suffix to link.</td><td>None</td></tr></tbody></table><p>Class advanced customization:</p><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>class.ul</code></td><td><code>&lt;ul&gt;</code> class name (only for style <code>list</code>)</td><td><code>tag-list</code> (list style)</td></tr><tr><td><code>class.li</code></td><td><code>&lt;li&gt;</code> class name (only for style <code>list</code>)</td><td><code>tag-list-item</code> (list style)</td></tr><tr><td><code>class.a</code></td><td><code>&lt;a&gt;</code> class name</td><td><code>tag-list-link</code> (list style) <code>tag-link</code> (normal style)</td></tr><tr><td><code>class.label</code></td><td><code>&lt;span&gt;</code> class name where the tag label is stored (only for normal style, when <code>class.label</code> is set the label is put in a <code>&lt;span&gt;</code>)</td><td><code>tag-label</code> (normal style)</td></tr><tr><td><code>class.count</code></td><td><code>&lt;span&gt;</code> class name where the tag counter is stored (only when <code>show_count</code> is <code>true</code>)</td><td><code>tag-list-count</code> (list style) <code>tag-count</code> (normal style)</td></tr></tbody></table><p>Examples:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_tags(site.tags, {class: 'classtest', style: false, separator: ' | '}) %&gt;</span><br><span class="line">&lt;%- list_tags(site.tags, {class: 'classtest', style: 'list'}) %&gt;</span><br><span class="line">&lt;%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: false, separator: ' | '}) %&gt;</span><br><span class="line">&lt;%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: 'list'}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="list-archives"><a href="#list-archives" class="headerlink" title="list_archives"></a>list_archives</h3><p>Inserts a list of archives.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>type</code></td><td>Type. This value can be <code>yearly</code> or <code>monthly</code>.</td><td>monthly</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>show_count</code></td><td>Display the number of posts for each archive</td><td>true</td></tr><tr><td><code>format</code></td><td>Date format</td><td>MMMM YYYY</td></tr><tr><td><code>style</code></td><td>Style to display the archive list. <code>list</code> displays archives in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between archives. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>class</code></td><td>Class name of archive list.</td><td>archive</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of archive name. See examples in <a href="#list-categories">list_categories</a>.</td><td></td></tr></tbody></table><h3 id="list-posts"><a href="#list-posts" class="headerlink" title="list_posts"></a>list_posts</h3><p>Inserts a list of posts.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>orderby</code></td><td>Order of posts</td><td>date</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>style</code></td><td>Style to display the post list. <code>list</code> displays posts in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between posts. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>class</code></td><td>Class name of post list.</td><td>post</td></tr><tr><td><code>amount</code></td><td>The number of posts to display (0 = unlimited)</td><td>6</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of post name. See examples in <a href="#list-categories">list_categories</a>.</td><td></td></tr></tbody></table><h3 id="tagcloud"><a href="#tagcloud" class="headerlink" title="tagcloud"></a>tagcloud</h3><p>Inserts a tag cloud.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>min_font</code></td><td>Minimum font size</td><td>10</td></tr><tr><td><code>max_font</code></td><td>Maximum font size</td><td>20</td></tr><tr><td><code>unit</code></td><td>Unit of font size</td><td>px</td></tr><tr><td><code>amount</code></td><td>Total amount of tags</td><td>unlimited</td></tr><tr><td><code>orderby</code></td><td>Order of tags</td><td>name</td></tr><tr><td><code>order</code></td><td>Sort order. <code>1</code>, <code>asc</code> as ascending; <code>-1</code>, <code>desc</code> as descending</td><td>1</td></tr><tr><td><code>color</code></td><td>Colorizes the tag cloud</td><td>false</td></tr><tr><td><code>start_color</code></td><td>Start color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href="http://www.w3.org/TR/css3-color/#svg-color">color keywords</a>. This option only works when <code>color</code> is true.</td><td></td></tr><tr><td><code>end_color</code></td><td>End color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href="http://www.w3.org/TR/css3-color/#svg-color">color keywords</a>. This option only works when <code>color</code> is true.</td><td></td></tr><tr><td><code>class</code></td><td>Class name prefix of tags</td><td></td></tr><tr><td><code>level</code></td><td>The number of different class names. This option only works when <code>class</code> is set.</td><td>10</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Default options</span></span><br><span class="line">&lt;%- tagcloud() %&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Limit number of tags to 30</span></span><br><span class="line">&lt;%- tagcloud({<span class="attr">amount</span>: <span class="number">30</span>}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h2><h3 id="paginator"><a href="#paginator" class="headerlink" title="paginator"></a>paginator</h3><p>Inserts a paginator.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>base</code></td><td>Base URL</td><td>/</td></tr><tr><td><code>format</code></td><td>URL format</td><td>page/%d/</td></tr><tr><td><code>total</code></td><td>The number of pages</td><td>1</td></tr><tr><td><code>current</code></td><td>Current page number</td><td>0</td></tr><tr><td><code>prev_text</code></td><td>The link text of previous page. Works only if <code>prev_next</code> is set to true.</td><td>Prev</td></tr><tr><td><code>next_text</code></td><td>The link text of next page. Works only if <code>prev_next</code> is set to true.</td><td>Next</td></tr><tr><td><code>space</code></td><td>The space text</td><td>&amp;hellp;</td></tr><tr><td><code>prev_next</code></td><td>Display previous and next links</td><td>true</td></tr><tr><td><code>end_size</code></td><td>The number of pages displayed on the start and the end side</td><td>1</td></tr><tr><td><code>mid_size</code></td><td>The number of pages displayed between current page, but not including current page</td><td>2</td></tr><tr><td><code>show_all</code></td><td>Display all pages. If this is set to true, <code>end_size</code> and <code>mid_size</code> will not work</td><td>false</td></tr><tr><td><code>escape</code></td><td>Escape HTML tags</td><td>true</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- paginator({</span><br><span class="line">  <span class="attr">prev_text</span>: <span class="string">'&lt;'</span>,</span><br><span class="line">  <span class="attr">next_text</span>: <span class="string">'&gt;'</span></span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Rendered as --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">2</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- paginator({</span><br><span class="line">  <span class="attr">prev_text</span>: <span class="string">'&lt;i class="fa fa-angle-left"&gt;&lt;/i&gt;'</span>,</span><br><span class="line">  <span class="attr">next_text</span>: <span class="string">'&lt;i class="fa fa-angle-right"&gt;&lt;/i&gt;'</span>,</span><br><span class="line">  <span class="attr">escape</span>: <span class="literal">false</span></span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Rendered as --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">2</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="search-form"><a href="#search-form" class="headerlink" title="search_form"></a>search_form</h3><p>Inserts a Google search form.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>class</code></td><td>The class name of form</td><td>search-form</td></tr><tr><td><code>text</code></td><td>Search hint word</td><td>Search</td></tr><tr><td><code>button</code></td><td>Display search button. The value can be a boolean or a string. If the value is a string, it’ll be the text of the button.</td><td>false</td></tr></tbody></table><h3 id="number-format"><a href="#number-format" class="headerlink" title="number_format"></a>number_format</h3><p>Formats a number.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>precision</code></td><td>The precision of number. The value can be <code>false</code> or a nonnegative integer.</td><td>false</td></tr><tr><td><code>delimiter</code></td><td>The thousands delimiter</td><td>,</td></tr><tr><td><code>separator</code></td><td>The separator between the fractional and integer digits.</td><td>.</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">precision</span>: <span class="number">1</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345.68</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">precision</span>: <span class="number">4</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345.6700</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">precision</span>: <span class="number">0</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">delimiter</span>: <span class="string">''</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12345.67</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">separator</span>: <span class="string">'/'</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345/67</span></span><br></pre></td></tr></tbody></table></figure><h3 id="meta-generator"><a href="#meta-generator" class="headerlink" title="meta_generator"></a>meta_generator</h3><p>Inserts <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta">generator tag</a>.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- meta_generator() %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- meta_generator() %&gt;</span><br><span class="line"><span class="comment">// &lt;meta name="generator" content="Hexo 4.0.0"&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="open-graph"><a href="#open-graph" class="headerlink" title="open_graph"></a>open_graph</h3><p>Inserts <a href="http://ogp.me/">Open Graph</a> data.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>title</code></td><td>Page title (<code>og:title</code>)</td><td><code>page.title</code></td></tr><tr><td><code>type</code></td><td>Page type (<code>og:type</code>)</td><td>blog</td></tr><tr><td><code>url</code></td><td>Page URL (<code>og:url</code>)</td><td><code>url</code></td></tr><tr><td><code>image</code></td><td>Page images (<code>og:image</code>)</td><td>All images in the content</td></tr><tr><td><code>site_name</code></td><td>Site name (<code>og:site_name</code>)</td><td><code>config.title</code></td></tr><tr><td><code>description</code></td><td>Page description (<code>og:description</code>)</td><td>Page excerpt or first 200 characters of the content</td></tr><tr><td><code>twitter_card</code></td><td>Twitter card type (<code>twitter:card</code>)</td><td>summary</td></tr><tr><td><code>twitter_id</code></td><td>Twitter ID (<code>twitter:creator</code>)</td><td></td></tr><tr><td><code>twitter_site</code></td><td>Twitter Site (<code>twitter:site</code>)</td><td></td></tr><tr><td><code>google_plus</code></td><td>Google+ profile link</td><td></td></tr><tr><td><code>fb_admins</code></td><td>Facebook admin ID</td><td></td></tr><tr><td><code>fb_app_id</code></td><td>Facebook App ID</td><td></td></tr></tbody></table><h3 id="toc"><a href="#toc" class="headerlink" title="toc"></a>toc</h3><p>Parses all heading tags (h1~h6) in the content and inserts a table of contents.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>class</code></td><td>Class name</td><td>toc</td></tr><tr><td><code>list_number</code></td><td>Displays list number</td><td>true</td></tr><tr><td><code>max_depth</code></td><td>Maximum heading depth of generated toc</td><td>6</td></tr><tr><td><code>min_depth</code></td><td>Minimum heading depth of generated toc</td><td>1</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.&lt;/p&gt;
&lt;p&gt;You could easily &lt;a hr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Documentation</title>
    <link href="http://example.com/2021/10/30/index/"/>
    <id>http://example.com/2021/10/30/index/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  <a href="troubleshooting.html">troubleshooting guide</a>, raise an issue on <a href="https://github.com/hexojs/hexo/issues">GitHub</a> or start a topic on the <a href="https://groups.google.com/group/hexo">Google Group</a>.</p><h2 id="What-is-Hexo"><a href="#What-is-Hexo" class="headerlink" title="What is Hexo?"></a>What is Hexo?</h2><p>Hexo is a fast, simple and powerful blog framework. You write posts in <a href="http://daringfireball.net/projects/markdown/">Markdown</a> (or other markup languages) and Hexo generates static files with a beautiful theme in seconds.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>It only takes a few minutes to set up Hexo. If you encounter a problem and can’t find the solution here, please <a href="https://github.com/hexojs/hexo/issues">submit a GitHub issue</a> and we’ll help.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/ARted4RniaU" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><p>Installing Hexo is quite easy and only requires the following beforehand:</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Should be at least Node.js 10.13, recommends 12.0 or higher)</li><li><a href="http://git-scm.com/">Git</a></li></ul><p>If your computer already has these, congratulations! You can skip to the <a href="#Install-Hexo">Hexo installation</a> step.</p><p>If not, please follow the following instructions to install all the requirements.</p><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><ul><li>Windows: Download &amp; install <a href="https://git-scm.com/download/win">git</a>.</li><li>Mac: Install it with <a href="https://brew.sh/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> or <a href="http://sourceforge.net/projects/git-osx-installer/">installer</a>.</li><li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li></ul><p>You may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> to install command line tools.</p><h3 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h3><p>Node.js provides <a href="https://nodejs.org/en/download/">official installer</a> for most platforms.</p><p>Alternative installation methods:</p><ul><li>Windows: Install it with <a href="https://github.com/jasongin/nvs/">nvs</a> (recommended) or <a href="https://github.com/nvm-sh/nvm">nvm</a>.</li><li>Mac: Install it with <a href="https://brew.sh/">Homebrew</a> or <a href="http://www.macports.org/">MacPorts</a>.</li><li>Linux (DEB/RPM-based): Install it with <a href="https://github.com/nodesource/distributions">NodeSource</a>.</li><li>Others: Install it through respective package manager. Refer to <a href="https://nodejs.org/en/download/package-manager/">the guide</a> provided by Node.js.</li></ul><p>nvs is also recommended for Mac and Linux to avoid possible permission issue.</p><p>If you use the official installer, make sure <strong>Add to PATH</strong> is checked (it’s checked by default).</p><p>If you encounter <code>EACCES</code> permission error when trying to install Hexo, please follow <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">the workaround</a> provided by npmjs; overriding with root/sudo is highly discouraged.</p><p>If you installed Node.js using Snap, you may need to manually run <code>npm install</code> in the target folder when <a href="/docs/commands#init">initializing</a> a blog.</p><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>Once all the requirements are installed, you can install Hexo with npm:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure><h3 id="Advanced-installation-and-usage"><a href="#Advanced-installation-and-usage" class="headerlink" title="Advanced installation and usage"></a>Advanced installation and usage</h3><p>Advanced users may prefer to install and use <code>hexo</code> package instead.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo</span><br></pre></td></tr></tbody></table></figure><p>Once installed, you can run Hexo in two ways:</p><ol><li><code>npx hexo &lt;command&gt;</code></li><li>Linux users can set relative path of <code>node_modules/</code> folder:</li></ol>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'PATH="$PATH:./node_modules/.bin"'</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></tbody></table></figure><p>  then run Hexo using <code>hexo &lt;command&gt;</code></p><h3 id="Minimum-required-Node-js-version"><a href="#Minimum-required-Node-js-version" class="headerlink" title="Minimum required Node.js version"></a>Minimum required Node.js version</h3><p>If you are stuck with older Node.js, you can consider installing a past version of Hexo.</p><p>Please note we do not provide bugfixes to past versions of Hexo.</p><p>We highly recommend to always install the <a href="https://www.npmjs.com/package/hexo?activeTab=versions">latest version</a> of Hexo and the <a href="#Requirements">recommended version</a> of Node.js, whenever possible.</p><table><thead><tr><th>Hexo version</th><th>Minimum Node.js version</th></tr></thead><tbody><tr><td>5.0+</td><td>10.13.0</td></tr><tr><td>4.1 - 4.2</td><td>8.10</td></tr><tr><td>4.0</td><td>8.6</td></tr><tr><td>3.3 - 3.9</td><td>6.9</td></tr><tr><td>3.2 - 3.3</td><td>0.12</td></tr><tr><td>3.0 - 3.1</td><td>0.10 or iojs</td></tr><tr><td>0.0.1 - 2.8</td><td>0.10</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  &lt;a href=&quot;troubleshooting.html&quot;&gt;trou</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Internationalization (i18n)</title>
    <link href="http://example.com/2021/10/30/internationalization/"/>
    <id>http://example.com/2021/10/30/internationalization/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>You can use internationalization to present your site in different languages. The default language is set by modifying the <code>language</code> setting in <code>_config.yml</code>. You can also set multiple languages and modify the order of default languages.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-tw</span></span><br><span class="line"></span><br><span class="line"><span class="attr">language:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">zh-tw</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">en</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Language-Files"><a href="#Language-Files" class="headerlink" title="Language Files"></a>Language Files</h3><p>Language files can be YAML or JSON files. You should put them into the <code>languages</code> folder in the theme. There is support for the <a href="https://github.com/alexei/sprintf.js">printf format</a> in language files.</p><h3 id="Templates"><a href="#Templates" class="headerlink" title="Templates"></a>Templates</h3><p>Use <code>__</code> or <code>_p</code> helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:</p><figure class="highlight yaml"><figcaption><span>en.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Home</span></span><br><span class="line">  <span class="attr">add:</span> <span class="string">Add</span></span><br><span class="line">  <span class="attr">video:</span></span><br><span class="line">    <span class="attr">zero:</span> <span class="literal">No</span> <span class="string">videos</span></span><br><span class="line">    <span class="attr">one:</span> <span class="string">One</span> <span class="string">video</span></span><br><span class="line">    <span class="attr">other:</span> <span class="string">%d</span> <span class="string">videos</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= __(<span class="string">'index.title'</span>) %&gt;</span><br><span class="line"><span class="comment">// Home</span></span><br><span class="line"></span><br><span class="line">&lt;%= _p(<span class="string">'index.video'</span>, <span class="number">3</span>) %&gt;</span><br><span class="line"><span class="comment">// 3 videos</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h3><p>You can set the language of pages in front-matter, or modify the <code>i18n_dir</code> setting in <code>_config.yml</code> to enable automatic detection by Hexo.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br></pre></td></tr></tbody></table></figure><p>The default value of <code>i18n_dir</code> setting is <code>:lang</code>, which means that Hexo will detect the language within the first segment of URL. For example:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/index.html =&gt; en</span><br><span class="line">/archives/index.html =&gt; en</span><br><span class="line">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></tbody></table></figure><p>The string will only be served as a language when the language file exists. So <code>archives</code> in <code>/archives/index.html</code> (example 2) will not get served as a language.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;You can use internationalization to present your site in different languages. The default language is set by modifying the &lt;code&gt;language</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Migration</title>
    <link href="http://example.com/2021/10/30/migration/"/>
    <id>http://example.com/2021/10/30/migration/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h2><p>First, install the <code>hexo-migrator-rss</code> plugin.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></tbody></table></figure><p>Once the plugin is installed, run the following command to migrate all posts from RSS. <code>source</code> can be a file path or URL.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate rss &lt;<span class="built_in">source</span>&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="Jekyll"><a href="#Jekyll" class="headerlink" title="Jekyll"></a>Jekyll</h2><p>Move all files in the Jekyll <code>_posts</code> folder to the <code>source/_posts</code> folder.</p><p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Octopress"><a href="#Octopress" class="headerlink" title="Octopress"></a>Octopress</h2><p>Move all files in the Octopress <code>source/_posts</code> folder to <code>source/_posts</code></p><p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span></span><br></pre></td></tr></tbody></table></figure><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><p>First, install the <code>hexo-migrator-wordpress</code> plugin.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></tbody></table></figure><p>Export your WordPress site by going to “Tools” → “Export” → “WordPress” in the WordPress dashboard (see the <a href="http://en.support.wordpress.com/export/">WordPress support page</a> for more details).</p><p>Now run:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate wordpress &lt;<span class="built_in">source</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p>Where <code>source</code> is the file path or URL to the WordPress export file.</p><h2 id="Joomla"><a href="#Joomla" class="headerlink" title="Joomla"></a>Joomla</h2><p>First, install the <code>hexo-migrator-joomla</code> plugin.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></tbody></table></figure><p>Export your Joomla articles using the <a href="http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ==">J2XML</a> component.</p><p>Now run:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate joomla &lt;<span class="built_in">source</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p>Where <code>source</code> is the file path or URL to the Joomla export file.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;RSS&quot;&gt;&lt;a href=&quot;#RSS&quot; class=&quot;headerlink&quot; title=&quot;RSS&quot;&gt;&lt;/a&gt;RSS&lt;/h2&gt;&lt;p&gt;First, install the &lt;code&gt;hexo-migrator-rss&lt;/code&gt; plugin.&lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>One-Command Deployment</title>
    <link href="http://example.com/2021/10/30/one-command-deployment/"/>
    <id>http://example.com/2021/10/30/one-command-deployment/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your server.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>Install the necessary plugin(s) that is compatible with the deployment method provided by your server/repository.</p><p>Deployment is usually configured through <strong>_config.yml</strong>. A valid configuration must have the <code>type</code> field. For example:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br></pre></td></tr></tbody></table></figure><p>You can use multiple deployers. Hexo will execute each deployer in order.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">heroku</span></span><br><span class="line">  <span class="attr">repo:</span></span><br></pre></td></tr></tbody></table></figure><p>Refer to the <a href="https://hexo.io/plugins/">Plugins</a> list for more deployment plugins.</p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ol><li>Install <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>.</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>Edit <strong>_config.yml</strong> (with example values shown below as comments):</li></ol><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span> <span class="comment"># https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">branch</span>]</span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>repo</code></td><td>URL of the target repository</td><td></td></tr><tr><td><code>branch</code></td><td>Branch name.</td><td><code>gh-pages</code> (GitHub)<br><code>coding-pages</code> (Coding.net)<br><code>master</code> (others)</td></tr><tr><td><code>message</code></td><td>Customize commit message.</td><td><code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code></td></tr><tr><td><code>token</code></td><td>Optional token value to authenticate with the repo. Prefix with <code>$</code> to read token from environment variable</td><td></td></tr></tbody></table><ol start="3"><li>Deploy your site <code>hexo clean &amp;&amp; hexo deploy</code>.</li></ol><ul><li>You will be prompted with username and password of the target repository, unless you authenticate with a token or ssh key.</li><li>hexo-deployer-git does not store your username and password. Use <a href="https://git-scm.com/docs/git-credential-cache">git-credential-cache</a> to store them temporarily.</li></ul><ol start="4"><li>Navigate to your repository settings and change the “Pages” branch to <code>gh-pages</code> (or the branch specified in your config). The deployed site should be live on the link shown on the “Pages” setting.</li></ol><h2 id="Heroku"><a href="#Heroku" class="headerlink" title="Heroku"></a>Heroku</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-heroku">hexo-deployer-heroku</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">heroku</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>repo</code>, <code>repository</code></td><td>Heroku repository URL</td></tr><tr><td><code>message</code></td><td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td></tr></tbody></table><h2 id="Netlify"><a href="#Netlify" class="headerlink" title="Netlify"></a>Netlify</h2><p><a href="https://www.netlify.com/">Netlify</a> provides continuous deployment (Git-triggered builds), an intelligent global CDN, full DNS (including custom domains), automated HTTPS, asset acceleration, and a lot more. It is a unified platform that automates your code to create high-performance, easily maintainable sites and web apps.</p><p>There are two different ways to deploy your sites on Netlify. The most common way is to use the web UI. Go to the <a href="https://app.netlify.com/start">create a new site page</a>, select your project repo from GitHub, GitLab, or Bitbucket, and follow the prompts.</p><p>Alternatively, you can use Netlify’s <a href="https://www.netlify.com/docs/cli/">Node based CLI</a> tool to manage and deploy sites on Netlify without leaving your terminal.</p><p>You can also add a <a href="https://www.netlify.com/docs/deploy-button/">Deploy to Netlify Button</a> in your README.file to allow others to create a copy of your repository and be deployed to Netlify via one click.</p><h2 id="Rsync"><a href="#Rsync" class="headerlink" title="Rsync"></a>Rsync</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-rsync">hexo-deployer-rsync</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">rsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&lt;host&gt;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&lt;user&gt;</span></span><br><span class="line">  <span class="attr">root:</span> <span class="string">&lt;root&gt;</span></span><br><span class="line">  <span class="attr">port:</span> [<span class="string">port</span>]</span><br><span class="line">  <span class="attr">delete:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br><span class="line">  <span class="attr">verbose:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br><span class="line">  <span class="attr">ignore_errors:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>host</code></td><td>Address of remote host</td><td></td></tr><tr><td><code>user</code></td><td>Username</td><td></td></tr><tr><td><code>root</code></td><td>Root directory of remote host</td><td></td></tr><tr><td><code>port</code></td><td>Port</td><td>22</td></tr><tr><td><code>delete</code></td><td>Delete old files on remote host</td><td>true</td></tr><tr><td><code>verbose</code></td><td>Display verbose messages</td><td>true</td></tr><tr><td><code>ignore_errors</code></td><td>Ignore errors</td><td>false</td></tr></tbody></table><h2 id="OpenShift"><a href="#OpenShift" class="headerlink" title="OpenShift"></a>OpenShift</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-openshift">hexo-deployer-openshift</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">openshift</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>repo</code></td><td>OpenShift repository URL</td></tr><tr><td><code>message</code></td><td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td></tr></tbody></table><h2 id="FTPSync"><a href="#FTPSync" class="headerlink" title="FTPSync"></a>FTPSync</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-ftpsync">hexo-deployer-ftpsync</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ftpsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&lt;host&gt;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&lt;user&gt;</span></span><br><span class="line">  <span class="attr">pass:</span> <span class="string">&lt;password&gt;</span></span><br><span class="line">  <span class="attr">remote:</span> [<span class="string">remote</span>]</span><br><span class="line">  <span class="attr">port:</span> [<span class="string">port</span>]</span><br><span class="line">  <span class="attr">ignore:</span> [<span class="string">ignore</span>]</span><br><span class="line">  <span class="attr">connections:</span> [<span class="string">connections</span>]</span><br><span class="line">  <span class="attr">verbose:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>host</code></td><td>Address of remote host</td><td></td></tr><tr><td><code>user</code></td><td>Username</td><td></td></tr><tr><td><code>pass</code></td><td>Password</td><td></td></tr><tr><td><code>remote</code></td><td>Root directory of remote host</td><td><code>/</code></td></tr><tr><td><code>port</code></td><td>Port</td><td>21</td></tr><tr><td><code>ignore</code></td><td>Ignore the files on either host or remote</td><td></td></tr><tr><td><code>connections</code></td><td>Connections number</td><td>1</td></tr><tr><td><code>verbose</code></td><td>Display verbose messages</td><td>false</td></tr></tbody></table><h2 id="SFTP"><a href="#SFTP" class="headerlink" title="SFTP"></a>SFTP</h2><p>Install <a href="https://github.com/lucascaro/hexo-deployer-sftp">hexo-deployer-sftp</a>. Deploys the site via SFTP, allowing for passwordless connections using ssh-agent.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-sftp --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">sftp</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&lt;host&gt;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&lt;user&gt;</span></span><br><span class="line">  <span class="attr">pass:</span> <span class="string">&lt;password&gt;</span></span><br><span class="line">  <span class="attr">remotePath:</span> [<span class="string">remote</span> <span class="string">path</span>]</span><br><span class="line">  <span class="attr">port:</span> [<span class="string">port</span>]</span><br><span class="line">  <span class="attr">privateKey:</span> [<span class="string">path/to/privateKey</span>]</span><br><span class="line">  <span class="attr">passphrase:</span> [<span class="string">passphrase</span>]</span><br><span class="line">  <span class="attr">agent:</span> [<span class="string">path/to/agent/socket</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>host</code></td><td>Address of remote host</td><td></td></tr><tr><td><code>user</code></td><td>Username</td><td></td></tr><tr><td><code>pass</code></td><td>Password</td><td></td></tr><tr><td><code>remotePath</code></td><td>Root directory of remote host</td><td><code>/</code></td></tr><tr><td><code>port</code></td><td>Port</td><td>22</td></tr><tr><td><code>privateKey</code></td><td>Path to a ssh private key</td><td></td></tr><tr><td><code>passphrase</code></td><td>Optional passphrase for the private key</td><td></td></tr><tr><td><code>agent</code></td><td>Path to the ssh-agent socket</td><td><code>$SSH_AUTH_SOCK</code></td></tr></tbody></table><h2 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h2><p><a href="https://vercel.com/">Vercel</a> is a cloud platform that enables developers to host Jamstack websites and web services that deploy instantly, scale automatically, and requires no supervision, all with zero configuration. They provide a global edge network, SSL encryption, asset compression, cache invalidation, and more.</p><p>Step 1: Add a build script to your <code>package.json</code> file:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"scripts"</span>: {</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Step 2: Deploy your Hexo Website to Vercel</p><p>To deploy your Hexo app with a <a href="https://vercel.com/docs/git-integrations">Vercel for Git Integration</a>, make sure it has been pushed to a Git repository.</p><p>Import the project into Vercel using the <a href="https://vercel.com/import/git">Import Flow</a>. During the import, you will find all relevant options preconfigured for you; however, you can choose to change any of these options, a list of which can be found <a href="https://vercel.com/docs/build-step#build-&amp;-development-settings">here</a>.</p><p>After your project has been imported, all subsequent pushes to branches will generate <a href="https://vercel.com/docs/platform/deployments#preview">Preview Deployments</a>, and all changes made to the <a href="https://vercel.com/docs/git-integrations#production-branch">Production Branch</a> (commonly “main”) will result in a <a href="https://vercel.com/docs/platform/deployments#production">Production Deployment</a>.</p><p>Alternatively, you can click the deploy button below to create a new project:</p><p><a href="https://vercel.com/new/hexo"><img src="https://vercel.com/button" alt="Deploy Vercel"></a></p><h2 id="21YunBox"><a href="#21YunBox" class="headerlink" title="21YunBox"></a>21YunBox</h2><ol><li>On <a href="https://www.21yunbox.com/">21YunBox</a>, setup up a new <code>Static Site</code> project from GitHub with the following settings:</li></ol><ul><li><strong>Build command:</strong> <code>yarn &amp;&amp; hexo deploy</code></li><li><strong>Publish directory:</strong> <code>public</code></li></ul><ol start="2"><li>Press Deploy Buton！</li></ol><p>That’s it! Your app will be live on your 21YunBox URL as soon as the build finishes.</p><p>The sample app for <code>hexo</code> is deployed at <a href="https://hexo.21yunbox.com/">https://hexo.21yunbox.com/</a>.</p><p>For more detail, follow this guide at <a href="https://www.21yunbox.com/docs/#/deploy-hexo">https://www.21yunbox.com/docs/#/deploy-hexo</a>.</p><h2 id="Bip"><a href="#Bip" class="headerlink" title="Bip"></a>Bip</h2><p><a href="https://bip.sh/">Bip</a> is a commercial hosting service which provides zero downtime deployment, a global CDN, SSL, unlimited bandwidth and more for static websites. Plans are available on a pay as you go, per domain basis.</p><p>Getting started is quick and easy, as Bip provides out the box support for Hexo. This guide assumes you already have <a href="https://bip.sh/getstarted">a Bip domain and Bip CLI installed</a>.</p><p>1: Initialise your project directory</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bip init</span><br></pre></td></tr></tbody></table></figure><p>Follow the prompts, where you’ll be asked which domain you’d like to deploy to. Bip will detect that you’re using Hexo, and set project settings like the source file directory automatically.</p><p>2: Deploy your website</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate —deploy &amp;&amp; bip deploy</span><br></pre></td></tr></tbody></table></figure><p>After a few moments, your website will be deployed.</p><h2 id="RSS3"><a href="#RSS3" class="headerlink" title="RSS3"></a>RSS3</h2><p><a href="https://rss3.io/">RSS3</a> is an open protocol designed for content and social networks in the Web 3.0 era.</p><ol><li><p>Install <a href="https://github.com/NaturalSelectionLabs/hexo-deployer-rss3">hexo-deployer-rss3</a>.</p></li><li><p>Modify the configuration.</p></li></ol>  <figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> <span class="comment"># The root configuration block for all deployers</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">rss3</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">https://hub.rss3.io</span></span><br><span class="line">  <span class="attr">privateKey:</span> <span class="string">47e18d6c386898b424025cd9db446f779ef24ad33a26c499c87bb3d9372540ba</span></span><br><span class="line">  <span class="attr">ipfs:</span></span><br><span class="line">    <span class="attr">deploy:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">gateway:</span> <span class="string">pinata</span></span><br><span class="line">    <span class="attr">api:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">d693df715d3631e489d6</span></span><br><span class="line">      <span class="attr">secret:</span> <span class="string">ee8b74626f12b61c1a4bde3b8c331ad390567c86ba779c9b18561ee92c1cbff0</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td><code>endpoint</code></td><td>a link to the RSS3 Hub</td></tr><tr><td><code>privateKey</code></td><td>your private key, 64 bytes</td></tr><tr><td><code>ipfs/deploy</code></td><td>whether to deploy to IPFS</td></tr><tr><td><code>ipfs/gateway</code></td><td>IPFS API gateway</td></tr><tr><td><code>ipfs/api/key</code></td><td>IPFS gateway-related authentication content</td></tr><tr><td><code>ipfs/api/secret</code></td><td>IPFS gateway-related authentication content</td></tr></tbody></table><ol start="3"><li><p>generate static files</p></li><li><p>deploy</p></li></ol><p>For deployment-related considerations, you can refer to <a href="https://github.com/NaturalSelectionLabs/hexo-deployer-rss3/blob/develop/README.md">Our documentation</a>.</p><h2 id="Other-Methods"><a href="#Other-Methods" class="headerlink" title="Other Methods"></a>Other Methods</h2><p>All generated files are saved in the <code>public</code> folder. You can copy them to wherever you like.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your server.&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Permalinks</title>
    <link href="http://example.com/2021/10/30/permalinks/"/>
    <id>http://example.com/2021/10/30/permalinks/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>You can specify the permalinks for your site in <code>_config.yml</code> or in the front-matter for each post.</p><h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><p>Besides the following variables, you can use any attributes in the permalink.</p><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td><code>:year</code></td><td>Published year of posts (4-digit)</td></tr><tr><td><code>:month</code></td><td>Published month of posts (2-digit)</td></tr><tr><td><code>:i_month</code></td><td>Published month of posts (Without leading zeros)</td></tr><tr><td><code>:day</code></td><td>Published day of posts (2-digit)</td></tr><tr><td><code>:i_day</code></td><td>Published day of posts (Without leading zeros)</td></tr><tr><td><code>:hour</code></td><td>Published hour of posts (2-digit)</td></tr><tr><td><code>:minute</code></td><td>Published minute of posts (2-digit)</td></tr><tr><td><code>:second</code></td><td>Published second of posts (2-digit)</td></tr><tr><td><code>:title</code></td><td>Filename (relative to “source/_posts/“ folder)</td></tr><tr><td><code>:name</code></td><td>Filename</td></tr><tr><td><code>:post_title</code></td><td>Post title</td></tr><tr><td><code>:id</code></td><td>Post ID (<em>not persistent across <a href="/docs/commands#clean">cache reset</a></em>)</td></tr><tr><td><code>:category</code></td><td>Categories. If the post is uncategorized, it will use the <code>default_category</code> value.</td></tr><tr><td><code>:hash</code></td><td>SHA1 hash of filename (same as <code>:title</code>) and date (12-hexadecimal)</td></tr></tbody></table><p>You can define the default value of each variable in the permalink through the <code>permalink_defaults</code> setting:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight yaml"><figcaption><span>source/_posts/hello-world.md</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013-07-14 17:01:34</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">foo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">bar</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Setting</th><th>Result</th></tr></thead><tbody><tr><td><code>:year/:month/:day/:title/</code></td><td>2013/07/14/hello-world/</td></tr><tr><td><code>:year-:month-:day-:title.html</code></td><td>2013-07-14-hello-world.html</td></tr><tr><td><code>:category/:title/</code></td><td>foo/bar/hello-world/</td></tr><tr><td><code>:title-:hash/</code></td><td>hello-world-a2c8ac003b43/</td></tr></tbody></table><figure class="highlight yaml"><figcaption><span>source/_posts/lorem/hello-world.md</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013-07-14 17:01:34</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">foo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">bar</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Setting</th><th>Result</th></tr></thead><tbody><tr><td><code>:year/:month/:day/:title/</code></td><td>2013/07/14/lorem/hello-world/</td></tr><tr><td><code>:year/:month/:day/:name/</code></td><td>2013/07/14/hello-world/</td></tr></tbody></table><h3 id="Multi-language-Support"><a href="#Multi-language-Support" class="headerlink" title="Multi-language Support"></a>Multi-language Support</h3><p>To create a multi-language site, you can modify the <code>new_post_name</code> and <code>permalink</code> settings like this:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:lang/:title.md</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:lang/:title/</span></span><br></pre></td></tr></tbody></table></figure><p>When you create a new post, the post will be saved to:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"Hello World"</span> --lang tw</span><br><span class="line"><span class="comment"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></tbody></table></figure><p>and the URL will be:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;You can specify the permalinks for your site in &lt;code&gt;_config.yml&lt;/code&gt; or in the front-matter for each post.&lt;/p&gt;
&lt;h3 id=&quot;Variables&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Plugins</title>
    <link href="http://example.com/2021/10/30/plugins/"/>
    <id>http://example.com/2021/10/30/plugins/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:</p><h3 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h3><p>If your plugin is relatively simple, it’s recommended to use a script. All you need to do is put your JavaScript files in the <code>scripts</code> folder and Hexo will load them during initialization.</p><h3 id="Plugin"><a href="#Plugin" class="headerlink" title="Plugin"></a>Plugin</h3><p>If your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the <code>node_modules</code> folder. The name of this folder must begin with <code>hexo-</code> or Hexo will ignore it.</p><p>Your new folder must contain at least two files: one containing the actual JavaScript code and one <code>package.json</code> file that describes the purpose of the plugin and sets its dependencies.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── index.js</span><br><span class="line">└── package.json</span><br></pre></td></tr></tbody></table></figure><p>At the very least, you should set the <code>name</code>, <code>version</code> and <code>main</code> entries in <code>package.json</code>. For example:</p><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-my-plugin"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.1"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>You’ll also need to list your plugin as a dependency in the root <code>package.json</code> of your hexo instance in order for Hexo to detect and load it.</p><h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><p>You can make use of the official tools provided by Hexo to accelerate development:</p><ul><li><a href="https://github.com/hexojs/hexo-fs">hexo-fs</a>：File IO</li><li><a href="https://github.com/hexojs/hexo-util">hexo-util</a>：Utilities</li><li><a href="https://github.com/hexojs/hexo-i18n">hexo-i18n</a>：Localization (i18n)</li><li><a href="https://github.com/hexojs/hexo-pagination">hexo-pagination</a>：Generate pagination data</li></ul><h3 id="Publishing"><a href="#Publishing" class="headerlink" title="Publishing"></a>Publishing</h3><p>When your plugin is ready, you may consider publishing it to the <a href="/plugins">plugin list</a> to invite other people to start using it. Publishing your own plugins is very similar to <a href="contributing.html#Updating_Documentation">updating documentation</a>.</p><ol><li><p>Fork <a href="https://github.com/hexojs/site">hexojs/site</a></p></li><li><p>Clone the repository to your computer and install dependencies.</p> <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class="line">$ cd site</span><br><span class="line">$ npm install</span><br></pre></td></tr></tbody></table></figure></li><li><p>Edit <code>source/_data/plugins.yml</code> and add your plugin. For example:</p> <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- name: hexo-server</span><br><span class="line">  description: Server module for Hexo.</span><br><span class="line">  link: https://github.com/hexojs/hexo-server</span><br><span class="line">  tags:</span><br><span class="line">    - official</span><br><span class="line">    - server</span><br><span class="line">    - console</span><br></pre></td></tr></tbody></table></figure></li><li><p>Push the branch.</p></li><li><p>Create a pull request and describe the change.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There ar</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Quick hexo startup</title>
    <link href="http://example.com/2021/10/30/quick-startup/"/>
    <id>http://example.com/2021/10/30/quick-startup/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Server</title>
    <link href="http://example.com/2021/10/30/server/"/>
    <id>http://example.com/2021/10/30/server/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a><a href="https://github.com/hexojs/hexo-server">hexo-server</a></h2><p>With the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install <a href="https://github.com/hexojs/hexo-server">hexo-server</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></tbody></table></figure><p>Once the server has been installed, run the following command to start the server. Your website will run at <code>http://localhost:4000</code> by default. When the server is running, Hexo will watch for file changes and update automatically so it’s not necessary to manually restart the server.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>If you want to change the port or if you’re encountering <code>EADDRINUSE</code> errors, use the <code>-p</code> option to set a different port.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></tbody></table></figure><h3 id="Static-Mode"><a href="#Static-Mode" class="headerlink" title="Static Mode"></a>Static Mode</h3><p>In static mode, only files in the <code>public</code> folder will be served and file watching is disabled. You have to run <code>hexo generate</code> before starting the server. Usually used in production.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -s</span><br></pre></td></tr></tbody></table></figure><h3 id="Custom-IP"><a href="#Custom-IP" class="headerlink" title="Custom IP"></a>Custom IP</h3><p>Hexo runs the server at <code>0.0.0.0</code> by default. You can override the default IP setting.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></tbody></table></figure><h2 id="Pow"><a href="#Pow" class="headerlink" title="Pow"></a>Pow</h2><p><a href="http://pow.cx/">Pow</a> is a zero-config Rack server for Mac.</p><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl get.pow.cx | sh</span><br></pre></td></tr></tbody></table></figure><h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><p>Symlink the folder into <code>~/.pow</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.pow</span><br><span class="line">$ ln -s /path/to/myapp</span><br></pre></td></tr></tbody></table></figure><p>Your website will be up and running at <code>http://myapp.test</code>. The URL is based on the name of the symlink.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hexo-server&quot;&gt;&lt;a href=&quot;#hexo-server&quot; class=&quot;headerlink&quot; title=&quot;hexo-server&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/hexojs/hexo-server&quot;&gt;hexo-</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Setup</title>
    <link href="http://example.com/2021/10/30/setup/"/>
    <id>http://example.com/2021/10/30/setup/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/0m2HnATkHOk" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p>Once Hexo is installed, run the following commands to initialize Hexo in the target <code>&lt;folder&gt;</code>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></tbody></table></figure><p>Once initialized, here’s what your project folder will look like:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></tbody></table></figure><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>Site <a href="configuration.html">configuration</a> file. You can configure most settings here.</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>Application data. The <a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> and <a href="http://daringfireball.net/projects/markdown/">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"hexo"</span>: {</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">""</span></span><br><span class="line">  },</span><br><span class="line">  <span class="attr">"dependencies"</span>: {</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^3.8.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^0.1.5"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^0.1.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^0.2.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^0.3.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^0.3.2"</span>,</span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^0.3.3"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p><a href="writing.html#Scaffolds">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p><a href="themes.html">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/0m2HnATkHOk&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/ifr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Syntax Highlighting</title>
    <link href="http://example.com/2021/10/30/syntax-highlight/"/>
    <id>http://example.com/2021/10/30/syntax-highlight/</id>
    <published>2021-10-30T18:33:12.020Z</published>
    <updated>2021-10-30T18:33:12.020Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo has two built-in syntax highlight libraries, <a href="https://github.com/highlightjs/highlight.js">highlight.js</a> and <a href="https://github.com/PrismJS/prism">prismjs</a>. This tutorial shows you how to integrate Hexo’s built-in syntax highlight into your template.</p><h2 id="How-to-use-code-block-in-posts"><a href="#How-to-use-code-block-in-posts" class="headerlink" title="How to use code block in posts"></a>How to use code block in posts</h2><p>Hexo supports two ways to write code block: <a href="tag-plugins#Code-Block">Tag Plugin - Code Block</a> and <a href="https://hexo.io/docs/tag-plugins#Backtick-Code-Block">Tag Plugin - Backtick Code Block</a>:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">{% codeblock [title] [lang:language] [url] [link text] [additional options] %}</span><br><span class="line">code snippet</span><br><span class="line">{% endcodeblock %}</span><br><span class="line"></span><br><span class="line">{% code [title] [lang:language] [url] [link text] [additional options] %}</span><br><span class="line">code snippet</span><br><span class="line">{% endcode %}</span><br><span class="line"></span><br><span class="line"><span class="code">``` [language] [title] [url] [link text] [additional options]</span></span><br><span class="line"><span class="code">code snippet</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></tbody></table></figure><p>The third syntax is a Markdown’s fenced code block syntax and Hexo extends it to support more features. Check out <a href="tag-plugins#Code-Block">Tag Plugin Docs</a> to find out options available.</p><blockquote><p>Tip: Hexo support posts written in any format, so long the corresponding renderer plugin is installed. It can be in markdown, ejs, swig, nunjucks, pug, asciidoc, etc. Regardless of the format used, those three code block syntax will always be available.</p></blockquote><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>The YAML above is Hexo’s default configuration.</p><h2 id="Disabled"><a href="#Disabled" class="headerlink" title="Disabled"></a>Disabled</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><p>When both <code>highlight.enable</code> and <code>prismjs.enable</code> are <code>false</code>, the output HTML of the code block is controlled by the corresponding renderer. For example, <a href="https://github.com/markedjs/marked"><code>marked.js</code></a> (used by <a href="https://github.com/hexojs/hexo-renderer-marked"><code>hexo-renderer-marked</code></a>, the default markdown renderer of Hexo) will add the language code to the <code>class</code> of <code>&lt;code&gt;</code>:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```yaml</span></span><br><span class="line"><span class="code">hello: hexo</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">"yaml"</span>&gt;</span>hello: hexo<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>When no built-in syntax highlight is enabled, you can either install third-party syntax-highlight plugin, or use a browser-side syntax hilighter (e.g. <code>highlight.js</code> and <code>prism.js</code> both support running in browser).</p><h2 id="Highlight-js"><a href="#Highlight-js" class="headerlink" title="Highlight.js"></a>Highlight.js</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">'  '</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><p><code>highlight.js</code> is enabled by default and used as server-side highlighting in Hexo; it needs to be disabled if you prefer to run <code>highlight.js</code> on browser-side.</p><blockquote><p>Server-side means, the syntax highlight is generated during <code>hexo generate</code> or <code>hexo server</code>.</p></blockquote><h3 id="auto-detect"><a href="#auto-detect" class="headerlink" title="auto_detect"></a>auto_detect</h3><p><code>auto_detect</code> is a <code>highlight.js</code> feature that detect language of the code block automatically.</p><blockquote><p>Tip: When you want to use “sublanguage highlight”, enable <code>auto_detect</code> and don’t mark language when writing code block.</p></blockquote><p><code>auto_detect</code> is very resource-intensive. Do not enable it unless you really need “sublanguage highlight” or prefer not to mark language when writing code block.</p><h3 id="line-number"><a href="#line-number" class="headerlink" title="line_number"></a>line_number</h3><p><code>highlight.js</code> <a href="https://highlightjs.readthedocs.io/en/latest/line-numbers.html">does not</a> support line number.</p><p>Hexo adds line number by wrapping output inside <code>&lt;figure&gt;</code> and <code>&lt;table&gt;</code>:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">class</span>=<span class="string">"highlight yaml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"gutter"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"code"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"attr"</span>&gt;</span>hello:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"string"</span>&gt;</span>hexo<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>It is not the behavior of <code>highlight.js</code> and requires custom CSS for <code>&lt;figure&gt;</code> and <code>&lt;table&gt;</code> elements; some themes have built-in support.</p><p>You might also notice that all <code>class</code> has no <code>hljs-</code> prefixed, we will revisit it <a href="#hljs">later part</a>.</p><h3 id="tab-replace"><a href="#tab-replace" class="headerlink" title="tab_replace"></a>tab_replace</h3><p>Replace tabs inside code block with given string. By default it is 2 spaces.</p><h3 id="wraps"><a href="#wraps" class="headerlink" title="wraps"></a>wraps</h3><p>Hexo <em>wraps</em> the output inside <code>&lt;figure&gt;</code> and <code>&lt;table&gt;</code> to support line number. You need to disable <strong>both</strong> <code>line_number</code> and <code>wrap</code> to revert to <code>highlight.js</code>‘s behavior:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">"yaml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span># _config.yml<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"attr"</span>&gt;</span>hexo:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"string"</span>&gt;</span>hexo<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>Because <code>line_number</code> feature relies on <code>wrap</code>, you can’t disable <code>wrap</code> with <code>line_number</code> enabled: If you set <code>line_number</code> to <code>true</code>, <code>wrap</code> will be automatically enabled.</p><h3 id="hljs"><a href="#hljs" class="headerlink" title="hljs"></a>hljs</h3><p>When <code>hljs</code> is set to <code>true</code>, all the HTML output will have <code>class</code> prefixed with <code>hljs-</code> (regardless <code>wrap</code> is enabled or not):</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">"yaml hljs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hljs-comment"</span>&gt;</span># _config.yml<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hljs-attr"</span>&gt;</span>hexo:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hljs-string"</span>&gt;</span>hexo<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>Tip: When <code>line_number</code> is set to <code>false</code>, <code>wrap</code> is set to false and <code>hljs</code> is set to <code>true</code>, you can then use <code>highlight.js</code> <a href="https://github.com/highlightjs/highlight.js/tree/master/src/styles">theme</a> directly in your site.</p></blockquote><h2 id="PrismJS"><a href="#PrismJS" class="headerlink" title="PrismJS"></a>PrismJS</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>Prismjs is disabled by default. You should set <code>highlight.enable</code> to <code>false</code> before enabling prismjs.</p><h3 id="preprocess"><a href="#preprocess" class="headerlink" title="preprocess"></a>preprocess</h3><p>Hexo’s built-in prismjs supports both browser-side (<code>preprocess</code> set to <code>false</code>) and server-side (<code>preprocess</code> set to <code>true</code>).</p><p>When use server-side mode (set <code>preprocess</code> to <code>true</code>), you only need to include prismjs theme (css stylesheet) in your website. When use browser-side (set <code>preprocess</code> to <code>false</code>), you have to include the javascript library as well.</p><p>Prismjs is designed to be used in browser, thus under <code>preprocess</code> mode only limited prismjs plugin is supported:</p><ul><li><a href="https://prismjs.com/plugins/line-numbers/">Line Numbers</a>: Only <code>prism-line-numbers.css</code> is required, No need to include <code>prism-line-numbers.js</code> in your website. Hexo will generate required HTML mark up mark up for you.</li><li><a href="https://prismjs.com/plugins/show-language/">Show Languages</a>: Hexo will always have <code>data-language</code> attribute added as long as language is given for the code block.</li><li>Any other prism plugins that don’t need special HTML markup are supported as well, but you will have to include JavaScript required by those plugins.</li></ul><p>All prism plugins are supported if <code>preprocess</code> is set to <code>false</code>. Here are a few things you should still pay attention to:</p><ul><li><a href="https://prismjs.com/plugins/line-numbers/">Line Numbers</a>: Hexo won’t generate required HTML mark up when <code>preprocess</code> is set to <code>false</code>. Requires both <code>prism-line-numbers.css</code> and <code>prism-line-numbers.js</code>.</li><li><a href="https://prismjs.com/plugins/show-language/">Show Languages</a>: Hexo will always have <code>data-language</code> attribute added as long as language is given for the code block.</li><li><a href="https://prismjs.com/plugins/line-highlight/">Line Highlight</a>: Both Hexo <a href="tag-plugins#Code-Block">Tag Plugin - Code Block</a> and <a href="https://hexo.io/docs/tag-plugins#Backtick-Code-Block">Tag Plugin - Backtick Code Block</a> supports Line Highlight syntax (<code>mark</code> option). When <code>mark</code> option is given, Hexo will generate the corresponding HTML markup.</li></ul><h3 id="line-number-1"><a href="#line-number-1" class="headerlink" title="line_number"></a>line_number</h3><p>With both <code>preprocess</code> and <code>line_number</code> set to <code>true</code>, you just need to include <code>prism-line-numbers.css</code> to make line-numbering work. If you set both <code>preprocess</code> and <code>line_number</code> to false, you will need both <code>prism-line-numbers.css</code> and <code>prism-line-numbers.js</code>.</p><h3 id="tab-replace-1"><a href="#tab-replace-1" class="headerlink" title="tab_replace"></a>tab_replace</h3><p>Replace <code>\t</code> inside code block with given string. By default it is 2 spaces.</p><h2 id="Other-useful-information"><a href="#Other-useful-information" class="headerlink" title="Other useful information"></a>Other useful information</h2><ul><li><a href="https://highlightjs.readthedocs.io/en/latest/">Highlight.js</a></li><li><a href="https://prismjs.com/">PrismJS</a></li></ul><p>The source codes behind Hexo’s syntax highlighting are available in:</p><ul><li><a href="https://github.com/hexojs/hexo-util/blob/master/lib/highlight.js">Highlight.js Utility Functions</a></li><li><a href="https://github.com/hexojs/hexo-util/blob/master/lib/prism.js">PrismJS Utility Functions</a></li><li><a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/tag/code.js">Tag Plugin - Code Block</a></li><li><a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/filter/before_post_render/backtick_code_block.js">Tag Plugin - Backtick Code Block</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo has two built-in syntax highlight libraries, &lt;a href=&quot;https://github.com/highlightjs/highlight.js&quot;&gt;highlight.js&lt;/a&gt; and &lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
</feed>
