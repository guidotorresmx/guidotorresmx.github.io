<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Marco Guido&#39;s blog</title>
  
  <subtitle>Software and some electronics stuff</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-01T10:31:16.771Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Marco Guido</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Front-matter</title>
    <link href="http://example.com/2021/11/01/front-matter/"/>
    <id>http://example.com/2021/11/01/front-matter/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/pfD6FCZdW4Q" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p>Front-matter is a block of YAML or JSON at the beginning of the file that is used to configure settings for your writings. Front-matter is terminated by three dashes when written in YAML or three semicolons when written in JSON.</p><p><strong>YAML</strong></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013</span><span class="string">/7/13</span> <span class="number">20</span><span class="string">:46:25</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></tbody></table></figure><p><strong>JSON</strong></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"title"</span>: <span class="string">"Hello World"</span>,</span><br><span class="line"><span class="string">"date"</span>: <span class="string">"2013/7/13 20:46:25"</span></span><br><span class="line">;;;</span><br></pre></td></tr></tbody></table></figure><h3 id="Settings-amp-Their-Default-Values"><a href="#Settings-amp-Their-Default-Values" class="headerlink" title="Settings &amp; Their Default Values"></a>Settings &amp; Their Default Values</h3><table><thead><tr><th>Setting</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>layout</code></td><td>Layout</td><td><a href="/docs/configuration#Writing"><code>config.default_layout</code></a></td></tr><tr><td><code>title</code></td><td>Title</td><td>Filename (posts only)</td></tr><tr><td><code>date</code></td><td>Published date</td><td>File created date</td></tr><tr><td><code>updated</code></td><td>Updated date</td><td>File updated date</td></tr><tr><td><code>comments</code></td><td>Enables comment feature for the post</td><td>true</td></tr><tr><td><code>tags</code></td><td>Tags (Not available for pages)</td><td></td></tr><tr><td><code>categories</code></td><td>Categories (Not available for pages)</td><td></td></tr><tr><td><code>permalink</code></td><td>Overrides the default permalink of the post</td><td></td></tr><tr><td><code>excerpt</code></td><td>Page excerpt in plain text. Use <a href="/docs/tag-plugins#Post-Excerpt">this plugin</a> to format the text</td><td></td></tr><tr><td><code>disableNunjucks</code></td><td>Disable rendering of Nunjucks tag <code>{{ }}</code>/<code>{% %}</code> and <a href="/docs/tag-plugins">tag plugins</a> when enabled</td><td>false</td></tr><tr><td><code>lang</code></td><td>Set the language to override <a href="/docs/internationalization#Path">auto-detection</a></td><td>Inherited from <code>_config.yml</code></td></tr></tbody></table><h4 id="Layout"><a href="#Layout" class="headerlink" title="Layout"></a>Layout</h4><p>The default layout is <code>post</code>, in accordance to the value of <a href="/docs/configuration#Writing"><code>default_layout</code></a> setting in <code>_config.yml</code>. When the layout is disabled (<code>layout: false</code>) in an article, it will not be processed with a theme. However, it will still be rendered by any available renderer: if an article is written in Markdown and a Markdown renderer (like the default <a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>) is installed, it will be rendered to HTML.</p><p><a href="/docs/tag-plugins">Tag plugins</a> are always processed regardless of layout, unless disabled by the <code>disableNunjucks</code> setting or <a href="/api/renderer#Disable-Nunjucks-tags">renderer</a>.</p><h4 id="Categories-amp-Tags"><a href="#Categories-amp-Tags" class="headerlink" title="Categories &amp; Tags"></a>Categories &amp; Tags</h4><p>Only posts support the use of categories and tags. Categories apply to posts in order, resulting in a hierarchy of classifications and sub-classifications. Tags are all defined on the same hierarchical level so the order in which they appear is not important.</p><p><strong>Example</strong></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Sports</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Baseball</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Injury</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Fight</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Shocking</span></span><br></pre></td></tr></tbody></table></figure><p>If you want to apply multiple category hierarchies, use a list of names instead of a single name. If Hexo sees any categories defined this way on a post, it will treat each category for that post as its own independent hierarchy.</p><p><strong>Example</strong></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> [<span class="string">Sports</span>, <span class="string">Baseball</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">MLB</span>, <span class="string">American</span> <span class="string">League</span>, <span class="string">Boston</span> <span class="string">Red</span> <span class="string">Sox</span>]</span><br><span class="line"><span class="bullet">-</span> [<span class="string">MLB</span>, <span class="string">American</span> <span class="string">League</span>, <span class="string">New</span> <span class="string">York</span> <span class="string">Yankees</span>]</span><br><span class="line"><span class="bullet">-</span> <span class="string">Rivalries</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/pfD6FCZdW4Q&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/ifr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Generating</title>
    <link href="http://example.com/2021/11/01/generating/"/>
    <id>http://example.com/2021/11/01/generating/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Generating static files with Hexo is quite easy and fast.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><div class="video-container"><iframe src="https://www.youtube.com/embed/viEJQPVCoLU" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h3 id="Watch-for-File-Changes"><a href="#Watch-for-File-Changes" class="headerlink" title="Watch for File Changes"></a>Watch for File Changes</h3><p>Hexo can watch for file changes and regenerate files immediately. Hexo will compare the SHA1 checksum of your files and only write if file changes are detected.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --watch</span><br></pre></td></tr></tbody></table></figure><h3 id="Deploy-After-Generating"><a href="#Deploy-After-Generating" class="headerlink" title="Deploy After Generating"></a>Deploy After Generating</h3><p>To deploy after generating, you can run one of the following commands. There is no difference between the two.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate --deploy</span><br><span class="line">$ hexo deploy --generate</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Generating static files with Hexo is quite easy and fast.&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;s</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>GitHub Pages</title>
    <link href="http://example.com/2021/11/01/github-pages/"/>
    <id>http://example.com/2021/11/01/github-pages/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>In this tutorial, we use <a href="https://docs.github.com/en/actions">GitHub Actions</a> to deploy GitHub Pages. It works in both public and private repository. Skip to the <a href="#One-command-deployment">One-command deployment</a> section if you prefer not to upload your source folder to GitHub.</p><ol><li>Create a repo named <b><em>username</em>.github.io</b>, where username is your username on GitHub. If you have already uploaded to other repo, rename the repo instead.</li><li>Add the following <em>highlighted</em> lines to <code>package.json</code>: (skip this step if there are existing lines)</li></ol><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line marked">  <span class="attr">"scripts"</span>: {</span><br><span class="line marked">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span></span><br><span class="line marked">  },</span><br><span class="line">  <span class="attr">"hexo"</span>: {</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"5.0.0"</span></span><br><span class="line">  },</span><br><span class="line">  <span class="attr">"dependencies"</span>: {</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^5.0.0"</span>,</span><br><span class="line">    ...</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>Push the files of your Hexo folder to the <strong><code>source</code> branch</strong> of your repository. The <code>public/</code> folder is not (and should not be) uploaded by default, make sure the <code>.gitignore</code> file contains <code>public/</code> line. The folder structure should be roughly similar to <a href="https://github.com/hexojs/hexo-starter">this repo</a>, without the <code>.gitmodules</code> file.</li></ol><ul><li><p>To push <code>source</code> to GitHub:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin source</span><br></pre></td></tr></tbody></table></figure></li></ul><ol start="4"><li>Add <code>.github/workflows/pages.yml</code> file to your repo with the following content:</li></ol><figure class="highlight yml"><figcaption><span>.github/workflows/pages.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">Pages</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">source</span>  <span class="comment"># default branch</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">pages:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">12.</span><span class="string">x</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">node-version:</span> <span class="string">'12.x'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Cache</span> <span class="string">NPM</span> <span class="string">dependencies</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">actions/cache@v2</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">          <span class="attr">key:</span> <span class="string">${{</span> <span class="string">runner.OS</span> <span class="string">}}-npm-cache</span></span><br><span class="line">          <span class="attr">restore-keys:</span> <span class="string">|</span></span><br><span class="line"><span class="string">            ${{ runner.OS }}-npm-cache</span></span><br><span class="line"><span class="string"></span>      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Install</span> <span class="string">Dependencies</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Build</span></span><br><span class="line">        <span class="attr">run:</span> <span class="string">npm</span> <span class="string">run</span> <span class="string">build</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Deploy</span></span><br><span class="line">        <span class="attr">uses:</span> <span class="string">peaceiris/actions-gh-pages@v3</span></span><br><span class="line">        <span class="attr">with:</span></span><br><span class="line">          <span class="attr">github_token:</span> <span class="string">${{</span> <span class="string">secrets.GITHUB_TOKEN</span> <span class="string">}}</span></span><br><span class="line">          <span class="attr">publish_dir:</span> <span class="string">./public</span></span><br><span class="line">          <span class="attr">publish_branch:</span> <span class="string">master</span>  <span class="comment"># deploying branch</span></span><br></pre></td></tr></tbody></table></figure><ol start="5"><li>Once the deployment is finished, the generated pages can be found in the <code>master</code> branch of your repository</li><li>In your GitHub repo’s setting, navigate to “GitHub Pages” section and change Source to <strong>master branch</strong>.</li><li>Check the webpage at <em>username</em>.github.io.</li></ol><p>Note - if you specify a custom domain name with a <code>CNAME</code>, you need to add the <code>CNAME</code> file to the <code>source/</code> folder.</p><h2 id="Project-page"><a href="#Project-page" class="headerlink" title="Project page"></a>Project page</h2><p>If you prefer to have a project page on GitHub:</p><ol><li>Navigate to your repo on GitHub. Go to the <strong>Settings</strong> tab. Change the <strong>Repository name</strong> so your blog is available at <b>username.github.io/<em>repository</em></b>,  <strong>repository</strong> can be any name, like <em>blog</em> or <em>hexo</em>.</li><li>Edit your <strong>_config.yml</strong>, change the <code>root:</code> value to the <code>/&lt;repository&gt;/</code> (must starts and ends with a slash, without the brackets).</li><li>Modify the following lines in <code>.github/workflows/pages.yml</code>:</li></ol><figure class="highlight diff"><figcaption><span>.github/workflows/pages.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">name: Pages</span><br><span class="line"></span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line"><span class="deletion">-      - source  # default branch</span></span><br><span class="line"><span class="addition">+      - master</span></span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  pages:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">      - name: Deploy</span><br><span class="line">        uses: peaceiris/actions-gh-pages@v3</span><br><span class="line">        with:</span><br><span class="line">          github_token: ${{ secrets.GITHUB_TOKEN }}</span><br><span class="line">          publish_dir: ./public</span><br><span class="line"><span class="deletion">-          publish_branch: master  # deploying branch</span></span><br><span class="line"><span class="addition">+          publish_branch: gh-pages</span></span><br></pre></td></tr></tbody></table></figure><ol start="4"><li>Commit and push to <strong><code>master</code> branch</strong>.</li></ol><ul><li><p>To push <code>master</code> branch to GitHub:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></tbody></table></figure></li></ul><ol start="5"><li>Once the deployment is finished, the generated pages can be found in the <code>gh-pages</code> branch of your repository</li><li>In your GitHub repo’s setting, navigate to “GitHub Pages” section and change Source to <strong>gh-pages branch</strong>.</li></ol><h2 id="One-command-deployment"><a href="#One-command-deployment" class="headerlink" title="One-command deployment"></a>One-command deployment</h2><p>The following instruction is adapted from <a href="/docs/one-command-deployment">one-command deployment</a> page.</p><ol><li>Install <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>.</li><li>Add the following configurations to <strong>_config.yml</strong>, (remove existing lines if any)</li></ol>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/&lt;username&gt;/&lt;project&gt;</span></span><br><span class="line">  <span class="comment"># example, https://github.com/hexojs/hexojs.github.io</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">gh-pages</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>Run <code>hexo clean &amp;&amp; hexo deploy</code>.</li><li>Check the webpage at <em>username</em>.github.io.</li></ol><h2 id="Useful-links"><a href="#Useful-links" class="headerlink" title="Useful links"></a>Useful links</h2><ul><li><a href="https://help.github.com/categories/github-pages-basics/">GitHub Pages</a></li><li><a href="https://docs.travis-ci.com/user/tutorial/">Travis CI Docs</a></li><li><a href="https://github.com/marketplace/actions/github-pages-action">peaceiris/actions-gh-pages</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In this tutorial, we use &lt;a href=&quot;https://docs.github.com/en/actions&quot;&gt;GitHub Actions&lt;/a&gt; to deploy GitHub Pages. It works in both public </summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>GitLab Pages</title>
    <link href="http://example.com/2021/11/01/gitlab-pages/"/>
    <id>http://example.com/2021/11/01/gitlab-pages/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<ol><li>Create a new repository named <b><em>username</em>.gitlab.io</b>, where username is your username on GitLab. If you have already uploaded to other repo, rename the repo instead.</li><li>Enable Shared Runners via <code>Settings -&gt; CI / CD -&gt; Shared Runners</code>.</li><li>Push the files of your Hexo folder to the repository. The <code>public/</code> folder is not (and should not be) uploaded by default, make sure the <code>.gitignore</code> file contains <code>public/</code> line. The folder structure should be roughly similar to <a href="https://gitlab.com/pages/hexo">this repo</a>.</li><li>Add <code>.gitlab-ci.yml</code> file to your repo (alongside _config.yml &amp; package.json) with the following content:</li></ol><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">node:14-alpine</span> <span class="comment"># use nodejs v14 LTS</span></span><br><span class="line"><span class="attr">cache:</span></span><br><span class="line">  <span class="attr">paths:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">node_modules/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">before_script:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-cli</span> <span class="string">-g</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">npm</span> <span class="string">install</span></span><br><span class="line"></span><br><span class="line"><span class="attr">pages:</span></span><br><span class="line">  <span class="attr">script:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hexo</span> <span class="string">generate</span></span><br><span class="line">  <span class="attr">artifacts:</span></span><br><span class="line">    <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">public</span></span><br><span class="line">  <span class="attr">only:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br></pre></td></tr></tbody></table></figure><ol start="5"><li><em>username</em>.gitlab.io should be up and running, once GitLab CI finishes the deployment job,</li><li>(Optional) If you wish to inspect the generated site assets (html, css, js, etc), they can be found in the <a href="https://docs.gitlab.com/ee/user/project/pipelines/job_artifacts.html">job artifact</a>.</li></ol><h2 id="Project-page"><a href="#Project-page" class="headerlink" title="Project page"></a>Project page</h2><p>If you prefer to have a project page on GitLab:</p><ol><li>Go to <code>Settings -&gt; General -&gt; Advanced -&gt; Change path</code>. Change the value to a name, so the website is available at <b>username.gitlab.io/<em>name</em></b>. It can be any name, like <em>blog</em> or <em>hexo</em>.</li><li>Edit <strong>_config.yml</strong>, change the <code>root:</code> value from <code>""</code> to <code>"name"</code>.</li><li>Commit and push.</li></ol><h2 id="Useful-links"><a href="#Useful-links" class="headerlink" title="Useful links"></a>Useful links</h2><ul><li><a href="https://docs.gitlab.com/ee/user/project/pages/index.html">GitLab Pages</a></li><li><a href="https://docs.gitlab.com/ee/ci/README.html">GitLab CI Docs</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;Create a new repository named &lt;b&gt;&lt;em&gt;username&lt;/em&gt;.gitlab.io&lt;/b&gt;, where username is your username on GitLab. If you have already up</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Helpers</title>
    <link href="http://example.com/2021/11/01/helpers/"/>
    <id>http://example.com/2021/11/01/helpers/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.</p><p>You could easily <a href="https://hexo.io/api/helper.html">write your own custom helper</a> or use our ready-made helpers.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/Uc53pW0GJHU" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><h3 id="url-for"><a href="#url-for" class="headerlink" title="url_for"></a>url_for</h3><p>Returns a url with the root path prefixed. Output is encoded automatically.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- url_for(path, [option]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>relative</code></td><td>Output relative link</td><td>Value of <code>config.relative_link</code></td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span> <span class="comment"># example</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- url_for(<span class="string">'/a/path'</span>) %&gt;</span><br><span class="line"><span class="comment">// /blog/a/path</span></span><br></pre></td></tr></tbody></table></figure><p>Relative link, follows <code>relative_link</code> option by default<br>e.g. post/page path is ‘/foo/bar/index.html’</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- url_for(<span class="string">'/css/style.css'</span>) %&gt;</span><br><span class="line"><span class="comment">// ../../css/style.css</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Override option</span></span><br><span class="line"><span class="comment"> * you could also disable it to output a non-relative link,</span></span><br><span class="line"><span class="comment"> * even when `relative_link` is enabled and vice versa.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&lt;%- url_for(<span class="string">'/css/style.css'</span>, {<span class="attr">relative</span>: <span class="literal">false</span>}) %&gt;</span><br><span class="line"><span class="comment">// /css/style.css</span></span><br></pre></td></tr></tbody></table></figure><h3 id="relative-url"><a href="#relative-url" class="headerlink" title="relative_url"></a>relative_url</h3><p>Returns the relative URL from <code>from</code> to <code>to</code>.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- relative_url(<span class="keyword">from</span>, to) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- relative_url(<span class="string">'foo/bar/'</span>, <span class="string">'css/style.css'</span>) %&gt;</span><br><span class="line"><span class="comment">// ../../css/style.css</span></span><br></pre></td></tr></tbody></table></figure><h3 id="full-url-for"><a href="#full-url-for" class="headerlink" title="full_url_for"></a>full_url_for</h3><p>Returns a url with the <code>config.url</code> prefixed. Output is encoded automatically.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_url_for(path) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">_config.yml</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://example.com/blog</span> <span class="comment"># example</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_url_for(<span class="string">'/a/path'</span>) %&gt;</span><br><span class="line"><span class="comment">// https://example.com/blog/a/path</span></span><br></pre></td></tr></tbody></table></figure><h3 id="gravatar"><a href="#gravatar" class="headerlink" title="gravatar"></a>gravatar</h3><p>Returns the gravatar image url from an email.</p><p>If you didn’t specify the [options] parameter, the default options will apply. Otherwise, you can set it to a number which will then be passed on as the size parameter to Gravatar. Finally, if you set it to an object, it will be converted into a query string of parameters for Gravatar.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- gravatar(email, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>s</code></td><td>Output image size</td><td>80</td></tr><tr><td><code>d</code></td><td>Default image</td><td></td></tr><tr><td><code>f</code></td><td>Force default</td><td></td></tr><tr><td><code>r</code></td><td>Rating</td><td></td></tr></tbody></table><p>More info: <a href="https://en.gravatar.com/site/implement/images/">Gravatar</a></p><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- gravatar(<span class="string">'a@abc.com'</span>) %&gt;</span><br><span class="line"><span class="comment">// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787</span></span><br><span class="line"></span><br><span class="line">&lt;%- gravatar(<span class="string">'a@abc.com'</span>, <span class="number">40</span>) %&gt;</span><br><span class="line"><span class="comment">// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40</span></span><br><span class="line"></span><br><span class="line">&lt;%- gravatar(<span class="string">'a@abc.com'</span> {<span class="attr">s</span>: <span class="number">40</span>, <span class="attr">d</span>: <span class="string">'https://via.placeholder.com/150'</span>}) %&gt;</span><br><span class="line"><span class="comment">// https://www.gravatar.com/avatar/b9b00e66c6b8a70f88c73cb6bdb06787?s=40&amp;d=https%3A%2F%2Fvia.placeholder.com%2F150</span></span><br></pre></td></tr></tbody></table></figure><h2 id="HTML-Tags"><a href="#HTML-Tags" class="headerlink" title="HTML Tags"></a>HTML Tags</h2><h3 id="css"><a href="#css" class="headerlink" title="css"></a>css</h3><p>Loads CSS files. <code>path</code> can be an array or a string. <code>path</code> can be a string, an array, an object or an array of objects. <a href="/docs/configuration#URL"><code>/&lt;root&gt;/</code></a> value is prepended while <code>.css</code> extension is appended to the <code>path</code> automatically. Use object type for custom attributes.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- css(path, ...) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- css(<span class="string">'style.css'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- css([<span class="string">'style.css'</span>, <span class="string">'screen.css'</span>]) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css"&gt;</span></span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/screen.css"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- css({ <span class="attr">href</span>: <span class="string">'style.css'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span> }) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css" integrity="foo"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- css([{ <span class="attr">href</span>: <span class="string">'style.css'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span> }, { <span class="attr">href</span>: <span class="string">'screen.css'</span>, <span class="attr">integrity</span>: <span class="string">'bar'</span> }]) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/style.css" integrity="foo"&gt;</span></span><br><span class="line"><span class="comment">// &lt;link rel="stylesheet" href="/screen.css" integrity="bar"&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="js"><a href="#js" class="headerlink" title="js"></a>js</h3><p>Loads JavaScript files. <code>path</code> can be a string, an array, an object or an array of objects. <a href="/docs/configuration#URL"><code>/&lt;root&gt;/</code></a> value is prepended while <code>.js</code> extension is appended to the <code>path</code> automatically. Use object type for custom attributes.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- js(path, ...) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- js(<span class="string">'script.js'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- js([<span class="string">'script.js'</span>, <span class="string">'gallery.js'</span>]) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">// &lt;script src="/gallery.js"&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- js({ <span class="attr">src</span>: <span class="string">'script.js'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span>, <span class="attr">async</span>: <span class="literal">true</span> }) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js" integrity="foo" async&gt;&lt;/script&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- js([{ <span class="attr">src</span>: <span class="string">'script.js'</span>, <span class="attr">integrity</span>: <span class="string">'foo'</span> }, { <span class="attr">src</span>: <span class="string">'gallery.js'</span>, <span class="attr">integrity</span>: <span class="string">'bar'</span> }]) %&gt;</span><br><span class="line"><span class="comment">// &lt;script src="/script.js" integrity="foo"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="comment">// &lt;script src="/gallery.js" integrity="bar"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="link-to"><a href="#link-to" class="headerlink" title="link_to"></a>link_to</h3><p>Inserts a link.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- link_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>external</code></td><td>Opens the link in a new tab</td><td>false</td></tr><tr><td><code>class</code></td><td>Class name</td><td></td></tr><tr><td><code>id</code></td><td>ID</td><td></td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- link_to(<span class="string">'http://www.google.com'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- link_to(<span class="string">'http://www.google.com'</span>, <span class="string">'Google'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="Google"&gt;Google&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- link_to(<span class="string">'http://www.google.com'</span>, <span class="string">'Google'</span>, {<span class="attr">external</span>: <span class="literal">true</span>}) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="http://www.google.com" title="Google" target="_blank" rel="noopener"&gt;Google&lt;/a&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="mail-to"><a href="#mail-to" class="headerlink" title="mail_to"></a>mail_to</h3><p>Inserts a mail link.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- mail_to(path, [text], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>class</code></td><td>Class name</td></tr><tr><td><code>id</code></td><td>ID</td></tr><tr><td><code>subject</code></td><td>Mail subject</td></tr><tr><td><code>cc</code></td><td>CC</td></tr><tr><td><code>bcc</code></td><td>BCC</td></tr><tr><td><code>body</code></td><td>Mail content</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- mail_to(<span class="string">'a@abc.com'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="mailto:a@abc.com" title="a@abc.com"&gt;a@abc.com&lt;/a&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- mail_to(<span class="string">'a@abc.com'</span>, <span class="string">'Email'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;a href="mailto:a@abc.com" title="Email"&gt;Email&lt;/a&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="image-tag"><a href="#image-tag" class="headerlink" title="image_tag"></a>image_tag</h3><p>Inserts an image.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- image_tag(path, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>alt</code></td><td>Alternative text of the image</td></tr><tr><td><code>class</code></td><td>Class name</td></tr><tr><td><code>id</code></td><td>ID</td></tr><tr><td><code>width</code></td><td>Image width</td></tr><tr><td><code>height</code></td><td>Image height</td></tr></tbody></table><h3 id="favicon-tag"><a href="#favicon-tag" class="headerlink" title="favicon_tag"></a>favicon_tag</h3><p>Inserts a favicon.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- favicon_tag(path) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="feed-tag"><a href="#feed-tag" class="headerlink" title="feed_tag"></a>feed_tag</h3><p>Inserts a feed link.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- feed_tag(path, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>title</code></td><td>Feed title</td><td><code>config.title</code></td></tr><tr><td><code>type</code></td><td>Feed type</td><td>atom</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- feed_tag(<span class="string">'atom.xml'</span>) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="alternate" href="/atom.xml" title="Hexo" type="application/atom+xml"&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;%- feed_tag(<span class="string">'rss.xml'</span>, { <span class="attr">title</span>: <span class="string">'RSS Feed'</span>, <span class="attr">type</span>: <span class="string">'rss'</span> }) %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="alternate" href="/atom.xml" title="RSS Feed" type="application/atom+xml"&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Defaults to hexo-generator-feed's config if no argument */</span></span><br><span class="line">&lt;%- feed_tag() %&gt;</span><br><span class="line"><span class="comment">// &lt;link rel="alternate" href="/atom.xml" title="Hexo" type="application/atom+xml"&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Conditional-Tags"><a href="#Conditional-Tags" class="headerlink" title="Conditional Tags"></a>Conditional Tags</h2><h3 id="is-current"><a href="#is-current" class="headerlink" title="is_current"></a>is_current</h3><p>Check whether <code>path</code> matches the URL of the current page. Use <code>strict</code> options to enable strict matching.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_current(path, [strict]) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-home"><a href="#is-home" class="headerlink" title="is_home"></a>is_home</h3><p>Check whether the current page is home page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_home() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-post"><a href="#is-post" class="headerlink" title="is_post"></a>is_post</h3><p>Check whether the current page is a post.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_post() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-page"><a href="#is-page" class="headerlink" title="is_page"></a>is_page</h3><p>Check whether the current page is a page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_page() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-archive"><a href="#is-archive" class="headerlink" title="is_archive"></a>is_archive</h3><p>Check whether the current page is an archive page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_archive() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-year"><a href="#is-year" class="headerlink" title="is_year"></a>is_year</h3><p>Check whether the current page is a yearly archive page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_year() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-month"><a href="#is-month" class="headerlink" title="is_month"></a>is_month</h3><p>Check whether the current page is a monthly archive page.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_month() %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-category"><a href="#is-category" class="headerlink" title="is_category"></a>is_category</h3><p>Check whether the current page is a category page.<br>If a string is given as parameter, check whether the current page match the given category.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_category() %&gt;</span><br><span class="line">&lt;%- is_category(<span class="string">'hobby'</span>) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="is-tag"><a href="#is-tag" class="headerlink" title="is_tag"></a>is_tag</h3><p>Check whether the current page is a tag page.<br>If a string is given as parameter, check whether the current page match the given tag.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- is_tag() %&gt;</span><br><span class="line">&lt;%- is_tag(<span class="string">'hobby'</span>) %&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="String-Manipulation"><a href="#String-Manipulation" class="headerlink" title="String Manipulation"></a>String Manipulation</h2><h3 id="trim"><a href="#trim" class="headerlink" title="trim"></a>trim</h3><p>Removes prefixing and trailing spaces of a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- trim(string) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="strip-html"><a href="#strip-html" class="headerlink" title="strip_html"></a>strip_html</h3><p>Sanitizes all HTML tags in a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- strip_html(string) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- strip_html(<span class="string">'It\'s not &lt;b&gt;important&lt;/b&gt; anymore!'</span>) %&gt;</span><br><span class="line"><span class="comment">// It's not important anymore!</span></span><br></pre></td></tr></tbody></table></figure><h3 id="titlecase"><a href="#titlecase" class="headerlink" title="titlecase"></a>titlecase</h3><p>Transforms a string into proper title caps.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- titlecase(string) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- titlecase(<span class="string">'this is an apple'</span>) %&gt;</span><br><span class="line"># This is an Apple</span><br></pre></td></tr></tbody></table></figure><h3 id="markdown"><a href="#markdown" class="headerlink" title="markdown"></a>markdown</h3><p>Renders a string with Markdown.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- markdown(str) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- markdown(<span class="string">'make me **strong**'</span>) %&gt;</span><br><span class="line"><span class="comment">// make me &lt;strong&gt;strong&lt;/strong&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="render"><a href="#render" class="headerlink" title="render"></a>render</h3><p>Renders a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- render(str, engine, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- render(<span class="string">'p(class="example") Test'</span>, <span class="string">'pug'</span>); %&gt;</span><br><span class="line"><span class="comment">// &lt;p class="example"&gt;Test&lt;/p&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>See <a href="https://hexo.io/api/rendering">Rendering</a> for more details.</p><h3 id="word-wrap"><a href="#word-wrap" class="headerlink" title="word_wrap"></a>word_wrap</h3><p>Wraps text into lines no longer than <code>length</code>. <code>length</code> is 80 by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- word_wrap(str, [length]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- word_wrap(<span class="string">'Once upon a time'</span>, <span class="number">8</span>) %&gt;</span><br><span class="line"><span class="comment">// Once upon\n a time</span></span><br></pre></td></tr></tbody></table></figure><h3 id="truncate"><a href="#truncate" class="headerlink" title="truncate"></a>truncate</h3><p>Truncates text after certain <code>length</code>. Default is 30 characters.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- truncate(text, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- truncate(<span class="string">'Once upon a time in a world far far away'</span>, {<span class="attr">length</span>: <span class="number">17</span>}) %&gt;</span><br><span class="line"><span class="comment">// Once upon a ti...</span></span><br><span class="line"></span><br><span class="line">&lt;%- truncate(<span class="string">'Once upon a time in a world far far away'</span>, {<span class="attr">length</span>: <span class="number">17</span>, <span class="attr">separator</span>: <span class="string">' '</span>}) %&gt;</span><br><span class="line"><span class="comment">// Once upon a...</span></span><br><span class="line"></span><br><span class="line">&lt;%- truncate(<span class="string">'And they found that many people were sleeping better.'</span>, {<span class="attr">length</span>: <span class="number">25</span>, <span class="attr">omission</span>: <span class="string">'... (continued)'</span>}) %&gt;</span><br><span class="line"><span class="comment">// And they f... (continued)</span></span><br></pre></td></tr></tbody></table></figure><h3 id="escape-html"><a href="#escape-html" class="headerlink" title="escape_html"></a>escape_html</h3><p>Escapes HTML entities in a string.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- escape_html(str) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- escape_html(<span class="string">'&lt;p&gt;Hello "world".&lt;/p&gt;'</span>) %&gt;</span><br><span class="line"><span class="comment">// &amp;lt;p&amp;gt;Hello &amp;quot;world&amp;quot;.&amp;lt;&amp;#x2F;p&amp;gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Templates"><a href="#Templates" class="headerlink" title="Templates"></a>Templates</h2><h3 id="partial"><a href="#partial" class="headerlink" title="partial"></a>partial</h3><p>Loads other template files. You can define local variables in <code>locals</code>.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial(layout, [locals], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>cache</code></td><td>Cache contents (Use fragment cache)</td><td><code>false</code></td></tr><tr><td><code>only</code></td><td>Strict local variables. Only use variables set in <code>locals</code> in templates.</td><td><code>false</code></td></tr></tbody></table><h3 id="fragment-cache"><a href="#fragment-cache" class="headerlink" title="fragment_cache"></a>fragment_cache</h3><p>Caches the contents in a fragment. It saves the contents within a fragment and serves the cache when the next request comes in.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- fragment_cache(id, fn);</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- fragment_cache(<span class="string">'header'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="Date-amp-Time"><a href="#Date-amp-Time" class="headerlink" title="Date &amp; Time"></a>Date &amp; Time</h2><h3 id="date"><a href="#date" class="headerlink" title="date"></a>date</h3><p>Inserts formatted date. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object. <code>format</code> is <code>date_format</code> setting by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date(date, [format]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date(<span class="built_in">Date</span>.now()) %&gt;</span><br><span class="line"><span class="comment">// 2013-01-01</span></span><br><span class="line"></span><br><span class="line">&lt;%- date(<span class="built_in">Date</span>.now(), <span class="string">'YYYY/M/D'</span>) %&gt;</span><br><span class="line"><span class="comment">// Jan 1 2013</span></span><br></pre></td></tr></tbody></table></figure><h3 id="date-xml"><a href="#date-xml" class="headerlink" title="date_xml"></a>date_xml</h3><p>Inserts date in XML format. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date_xml(date) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- date_xml(<span class="built_in">Date</span>.now()) %&gt;</span><br><span class="line"><span class="comment">// 2013-01-01T00:00:00.000Z</span></span><br></pre></td></tr></tbody></table></figure><h3 id="time"><a href="#time" class="headerlink" title="time"></a>time</h3><p>Inserts formatted time. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object. <code>format</code> is <code>time_format</code> setting by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- time(date, [format]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- time(<span class="built_in">Date</span>.now()) %&gt;</span><br><span class="line"><span class="comment">// 13:05:12</span></span><br><span class="line"></span><br><span class="line">&lt;%- time(<span class="built_in">Date</span>.now(), <span class="string">'h:mm:ss a'</span>) %&gt;</span><br><span class="line"><span class="comment">// 1:05:12 pm</span></span><br></pre></td></tr></tbody></table></figure><h3 id="full-date"><a href="#full-date" class="headerlink" title="full_date"></a>full_date</h3><p>Inserts formatted date and time. <code>date</code> can be unix time, ISO string, date object, or <a href="http://momentjs.com/">Moment.js</a> object. <code>format</code> is <code>date_format + time_format</code> setting by default.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_date(date, [format]) %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- full_date(<span class="keyword">new</span> <span class="built_in">Date</span>()) %&gt;</span><br><span class="line"><span class="comment">// Jan 1, 2013 0:00:00</span></span><br><span class="line"></span><br><span class="line">&lt;%- full_date(<span class="keyword">new</span> <span class="built_in">Date</span>(), <span class="string">'dddd, MMMM Do YYYY, h:mm:ss a'</span>) %&gt;</span><br><span class="line"><span class="comment">// Tuesday, January 1st 2013, 12:00:00 am</span></span><br></pre></td></tr></tbody></table></figure><h3 id="moment"><a href="#moment" class="headerlink" title="moment"></a>moment</h3><p><a href="http://momentjs.com/">Moment.js</a> library.</p><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><h3 id="list-categories"><a href="#list-categories" class="headerlink" title="list_categories"></a>list_categories</h3><p>Inserts a list of all categories.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_categories([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>orderby</code></td><td>Order of categories</td><td>name</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>show_count</code></td><td>Display the number of posts for each category</td><td>true</td></tr><tr><td><code>style</code></td><td>Style to display the category list. <code>list</code> displays categories in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>depth</code></td><td>Levels of categories to be displayed. <code>0</code> displays all categories and child categories; <code>-1</code> is similar to <code>0</code> but displayed in flat; <code>1</code> displays only top level categories.</td><td>0</td></tr><tr><td><code>class</code></td><td>Class name of category list.</td><td>category</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of category name.</td><td></td></tr><tr><td><code>suffix</code></td><td>Add a suffix to link.</td><td>None</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_categories(post.categories, {</span><br><span class="line">  <span class="attr">class</span>: <span class="string">'post-category'</span>,</span><br><span class="line">  <span class="function"><span class="title">transform</span>(<span class="params">str</span>)</span> {</span><br><span class="line">    <span class="keyword">return</span> titlecase(str);</span><br><span class="line">  }</span><br><span class="line">}) %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%- list_categories(post.categories, {</span><br><span class="line">  <span class="attr">class</span>: <span class="string">'post-category'</span>,</span><br><span class="line">  <span class="function"><span class="title">transform</span>(<span class="params">str</span>)</span> {</span><br><span class="line">    <span class="keyword">return</span> str.toUpperCase();</span><br><span class="line">  }</span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="list-tags"><a href="#list-tags" class="headerlink" title="list_tags"></a>list_tags</h3><p>Inserts a list of all tags.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_tags([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>orderby</code></td><td>Order of categories</td><td>name</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>show_count</code></td><td>Display the number of posts for each tag</td><td>true</td></tr><tr><td><code>style</code></td><td>Style to display the tag list. <code>list</code> displays tags in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between categories. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>class</code></td><td>Class name of tag list (string) or customize each tag’s class (object, see below).</td><td>tag</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of tag name. See examples in <a href="#list-categories">list_categories</a>.</td><td></td></tr><tr><td><code>amount</code></td><td>The number of tags to display (0 = unlimited)</td><td>0</td></tr><tr><td><code>suffix</code></td><td>Add a suffix to link.</td><td>None</td></tr></tbody></table><p>Class advanced customization:</p><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>class.ul</code></td><td><code>&lt;ul&gt;</code> class name (only for style <code>list</code>)</td><td><code>tag-list</code> (list style)</td></tr><tr><td><code>class.li</code></td><td><code>&lt;li&gt;</code> class name (only for style <code>list</code>)</td><td><code>tag-list-item</code> (list style)</td></tr><tr><td><code>class.a</code></td><td><code>&lt;a&gt;</code> class name</td><td><code>tag-list-link</code> (list style) <code>tag-link</code> (normal style)</td></tr><tr><td><code>class.label</code></td><td><code>&lt;span&gt;</code> class name where the tag label is stored (only for normal style, when <code>class.label</code> is set the label is put in a <code>&lt;span&gt;</code>)</td><td><code>tag-label</code> (normal style)</td></tr><tr><td><code>class.count</code></td><td><code>&lt;span&gt;</code> class name where the tag counter is stored (only when <code>show_count</code> is <code>true</code>)</td><td><code>tag-list-count</code> (list style) <code>tag-count</code> (normal style)</td></tr></tbody></table><p>Examples:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_tags(site.tags, {class: 'classtest', style: false, separator: ' | '}) %&gt;</span><br><span class="line">&lt;%- list_tags(site.tags, {class: 'classtest', style: 'list'}) %&gt;</span><br><span class="line">&lt;%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: false, separator: ' | '}) %&gt;</span><br><span class="line">&lt;%- list_tags(site.tags, {class: {ul: 'ululul', li: 'lilili', a: 'aaa', count: 'ccc'}, style: 'list'}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h3 id="list-archives"><a href="#list-archives" class="headerlink" title="list_archives"></a>list_archives</h3><p>Inserts a list of archives.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_archives([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>type</code></td><td>Type. This value can be <code>yearly</code> or <code>monthly</code>.</td><td>monthly</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>show_count</code></td><td>Display the number of posts for each archive</td><td>true</td></tr><tr><td><code>format</code></td><td>Date format</td><td>MMMM YYYY</td></tr><tr><td><code>style</code></td><td>Style to display the archive list. <code>list</code> displays archives in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between archives. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>class</code></td><td>Class name of archive list.</td><td>archive</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of archive name. See examples in <a href="#list-categories">list_categories</a>.</td><td></td></tr></tbody></table><h3 id="list-posts"><a href="#list-posts" class="headerlink" title="list_posts"></a>list_posts</h3><p>Inserts a list of posts.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- list_posts([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>orderby</code></td><td>Order of posts</td><td>date</td></tr><tr><td><code>order</code></td><td>Sort of order. <code>1</code>, <code>asc</code> for ascending; <code>-1</code>, <code>desc</code> for descending</td><td>1</td></tr><tr><td><code>style</code></td><td>Style to display the post list. <code>list</code> displays posts in an unordered list.</td><td>list</td></tr><tr><td><code>separator</code></td><td>Separator between posts. (Only works if <code>style</code> is not <code>list</code>)</td><td>,</td></tr><tr><td><code>class</code></td><td>Class name of post list.</td><td>post</td></tr><tr><td><code>amount</code></td><td>The number of posts to display (0 = unlimited)</td><td>6</td></tr><tr><td><code>transform</code></td><td>The function that changes the display of post name. See examples in <a href="#list-categories">list_categories</a>.</td><td></td></tr></tbody></table><h3 id="tagcloud"><a href="#tagcloud" class="headerlink" title="tagcloud"></a>tagcloud</h3><p>Inserts a tag cloud.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- tagcloud([tags], [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>min_font</code></td><td>Minimum font size</td><td>10</td></tr><tr><td><code>max_font</code></td><td>Maximum font size</td><td>20</td></tr><tr><td><code>unit</code></td><td>Unit of font size</td><td>px</td></tr><tr><td><code>amount</code></td><td>Total amount of tags</td><td>unlimited</td></tr><tr><td><code>orderby</code></td><td>Order of tags</td><td>name</td></tr><tr><td><code>order</code></td><td>Sort order. <code>1</code>, <code>asc</code> as ascending; <code>-1</code>, <code>desc</code> as descending</td><td>1</td></tr><tr><td><code>color</code></td><td>Colorizes the tag cloud</td><td>false</td></tr><tr><td><code>start_color</code></td><td>Start color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href="http://www.w3.org/TR/css3-color/#svg-color">color keywords</a>. This option only works when <code>color</code> is true.</td><td></td></tr><tr><td><code>end_color</code></td><td>End color. You can use hex (<code>#b700ff</code>), rgba (<code>rgba(183, 0, 255, 1)</code>), hsla (<code>hsla(283, 100%, 50%, 1)</code>) or <a href="http://www.w3.org/TR/css3-color/#svg-color">color keywords</a>. This option only works when <code>color</code> is true.</td><td></td></tr><tr><td><code>class</code></td><td>Class name prefix of tags</td><td></td></tr><tr><td><code>level</code></td><td>The number of different class names. This option only works when <code>class</code> is set.</td><td>10</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Default options</span></span><br><span class="line">&lt;%- tagcloud() %&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Limit number of tags to 30</span></span><br><span class="line">&lt;%- tagcloud({<span class="attr">amount</span>: <span class="number">30</span>}) %&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="Miscellaneous"><a href="#Miscellaneous" class="headerlink" title="Miscellaneous"></a>Miscellaneous</h2><h3 id="paginator"><a href="#paginator" class="headerlink" title="paginator"></a>paginator</h3><p>Inserts a paginator.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- paginator(options) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>base</code></td><td>Base URL</td><td>/</td></tr><tr><td><code>format</code></td><td>URL format</td><td>page/%d/</td></tr><tr><td><code>total</code></td><td>The number of pages</td><td>1</td></tr><tr><td><code>current</code></td><td>Current page number</td><td>0</td></tr><tr><td><code>prev_text</code></td><td>The link text of previous page. Works only if <code>prev_next</code> is set to true.</td><td>Prev</td></tr><tr><td><code>next_text</code></td><td>The link text of next page. Works only if <code>prev_next</code> is set to true.</td><td>Next</td></tr><tr><td><code>space</code></td><td>The space text</td><td>&amp;hellp;</td></tr><tr><td><code>prev_next</code></td><td>Display previous and next links</td><td>true</td></tr><tr><td><code>end_size</code></td><td>The number of pages displayed on the start and the end side</td><td>1</td></tr><tr><td><code>mid_size</code></td><td>The number of pages displayed between current page, but not including current page</td><td>2</td></tr><tr><td><code>show_all</code></td><td>Display all pages. If this is set to true, <code>end_size</code> and <code>mid_size</code> will not work</td><td>false</td></tr><tr><td><code>escape</code></td><td>Escape HTML tags</td><td>true</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- paginator({</span><br><span class="line">  <span class="attr">prev_text</span>: <span class="string">'&lt;'</span>,</span><br><span class="line">  <span class="attr">next_text</span>: <span class="string">'&gt;'</span></span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Rendered as --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span><span class="symbol">&amp;lt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">2</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span><span class="symbol">&amp;gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- paginator({</span><br><span class="line">  <span class="attr">prev_text</span>: <span class="string">'&lt;i class="fa fa-angle-left"&gt;&lt;/i&gt;'</span>,</span><br><span class="line">  <span class="attr">next_text</span>: <span class="string">'&lt;i class="fa fa-angle-right"&gt;&lt;/i&gt;'</span>,</span><br><span class="line">  <span class="attr">escape</span>: <span class="literal">false</span></span><br><span class="line">}) %&gt;</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Rendered as --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-left"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/1/"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">2</span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/3/"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-angle-right"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="search-form"><a href="#search-form" class="headerlink" title="search_form"></a>search_form</h3><p>Inserts a Google search form.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- search_form(options) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>class</code></td><td>The class name of form</td><td>search-form</td></tr><tr><td><code>text</code></td><td>Search hint word</td><td>Search</td></tr><tr><td><code>button</code></td><td>Display search button. The value can be a boolean or a string. If the value is a string, it’ll be the text of the button.</td><td>false</td></tr></tbody></table><h3 id="number-format"><a href="#number-format" class="headerlink" title="number_format"></a>number_format</h3><p>Formats a number.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- number_format(number, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>precision</code></td><td>The precision of number. The value can be <code>false</code> or a nonnegative integer.</td><td>false</td></tr><tr><td><code>delimiter</code></td><td>The thousands delimiter</td><td>,</td></tr><tr><td><code>separator</code></td><td>The separator between the fractional and integer digits.</td><td>.</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">precision</span>: <span class="number">1</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345.68</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">precision</span>: <span class="number">4</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345.6700</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">precision</span>: <span class="number">0</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">delimiter</span>: <span class="string">''</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12345.67</span></span><br><span class="line"></span><br><span class="line">&lt;%- number_format(<span class="number">12345.67</span>, {<span class="attr">separator</span>: <span class="string">'/'</span>}) %&gt;</span><br><span class="line"><span class="comment">// 12,345/67</span></span><br></pre></td></tr></tbody></table></figure><h3 id="meta-generator"><a href="#meta-generator" class="headerlink" title="meta_generator"></a>meta_generator</h3><p>Inserts <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta">generator tag</a>.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- meta_generator() %&gt;</span><br></pre></td></tr></tbody></table></figure><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- meta_generator() %&gt;</span><br><span class="line"><span class="comment">// &lt;meta name="generator" content="Hexo 4.0.0"&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="open-graph"><a href="#open-graph" class="headerlink" title="open_graph"></a>open_graph</h3><p>Inserts <a href="http://ogp.me/">Open Graph</a> data.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- open_graph([options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>title</code></td><td>Page title (<code>og:title</code>)</td><td><code>page.title</code></td></tr><tr><td><code>type</code></td><td>Page type (<code>og:type</code>)</td><td>blog</td></tr><tr><td><code>url</code></td><td>Page URL (<code>og:url</code>)</td><td><code>url</code></td></tr><tr><td><code>image</code></td><td>Page images (<code>og:image</code>)</td><td>All images in the content</td></tr><tr><td><code>site_name</code></td><td>Site name (<code>og:site_name</code>)</td><td><code>config.title</code></td></tr><tr><td><code>description</code></td><td>Page description (<code>og:description</code>)</td><td>Page excerpt or first 200 characters of the content</td></tr><tr><td><code>twitter_card</code></td><td>Twitter card type (<code>twitter:card</code>)</td><td>summary</td></tr><tr><td><code>twitter_id</code></td><td>Twitter ID (<code>twitter:creator</code>)</td><td></td></tr><tr><td><code>twitter_site</code></td><td>Twitter Site (<code>twitter:site</code>)</td><td></td></tr><tr><td><code>google_plus</code></td><td>Google+ profile link</td><td></td></tr><tr><td><code>fb_admins</code></td><td>Facebook admin ID</td><td></td></tr><tr><td><code>fb_app_id</code></td><td>Facebook App ID</td><td></td></tr></tbody></table><h3 id="toc"><a href="#toc" class="headerlink" title="toc"></a>toc</h3><p>Parses all heading tags (h1~h6) in the content and inserts a table of contents.</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- toc(str, [options]) %&gt;</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>class</code></td><td>Class name</td><td>toc</td></tr><tr><td><code>list_number</code></td><td>Displays list number</td><td>true</td></tr><tr><td><code>max_depth</code></td><td>Maximum heading depth of generated toc</td><td>6</td></tr><tr><td><code>min_depth</code></td><td>Minimum heading depth of generated toc</td><td>1</td></tr></tbody></table><p><strong>Examples:</strong></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- toc(page.content) %&gt;</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Helpers are used in templates to help you insert snippets quickly.  Helpers cannot be used in source files.&lt;/p&gt;
&lt;p&gt;You could easily &lt;a hr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Documentation</title>
    <link href="http://example.com/2021/11/01/index/"/>
    <id>http://example.com/2021/11/01/index/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  <a href="troubleshooting.html">troubleshooting guide</a>, raise an issue on <a href="https://github.com/hexojs/hexo/issues">GitHub</a> or start a topic on the <a href="https://groups.google.com/group/hexo">Google Group</a>.</p><h2 id="What-is-Hexo"><a href="#What-is-Hexo" class="headerlink" title="What is Hexo?"></a>What is Hexo?</h2><p>Hexo is a fast, simple and powerful blog framework. You write posts in <a href="http://daringfireball.net/projects/markdown/">Markdown</a> (or other markup languages) and Hexo generates static files with a beautiful theme in seconds.</p><h2 id="Installation"><a href="#Installation" class="headerlink" title="Installation"></a>Installation</h2><p>It only takes a few minutes to set up Hexo. If you encounter a problem and can’t find the solution here, please <a href="https://github.com/hexojs/hexo/issues">submit a GitHub issue</a> and we’ll help.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/ARted4RniaU" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h3 id="Requirements"><a href="#Requirements" class="headerlink" title="Requirements"></a>Requirements</h3><p>Installing Hexo is quite easy and only requires the following beforehand:</p><ul><li><a href="http://nodejs.org/">Node.js</a> (Should be at least Node.js 10.13, recommends 12.0 or higher)</li><li><a href="http://git-scm.com/">Git</a></li></ul><p>If your computer already has these, congratulations! You can skip to the <a href="#Install-Hexo">Hexo installation</a> step.</p><p>If not, please follow the following instructions to install all the requirements.</p><h3 id="Install-Git"><a href="#Install-Git" class="headerlink" title="Install Git"></a>Install Git</h3><ul><li>Windows: Download &amp; install <a href="https://git-scm.com/download/win">git</a>.</li><li>Mac: Install it with <a href="https://brew.sh/">Homebrew</a>, <a href="http://www.macports.org/">MacPorts</a> or <a href="http://sourceforge.net/projects/git-osx-installer/">installer</a>.</li><li>Linux (Ubuntu, Debian): <code>sudo apt-get install git-core</code></li><li>Linux (Fedora, Red Hat, CentOS): <code>sudo yum install git-core</code></li></ul><p>You may encounter some problems when compiling. Please install Xcode from App Store first. After Xcode is installed, open Xcode and go to <strong>Preferences -&gt; Download -&gt; Command Line Tools -&gt; Install</strong> to install command line tools.</p><h3 id="Install-Node-js"><a href="#Install-Node-js" class="headerlink" title="Install Node.js"></a>Install Node.js</h3><p>Node.js provides <a href="https://nodejs.org/en/download/">official installer</a> for most platforms.</p><p>Alternative installation methods:</p><ul><li>Windows: Install it with <a href="https://github.com/jasongin/nvs/">nvs</a> (recommended) or <a href="https://github.com/nvm-sh/nvm">nvm</a>.</li><li>Mac: Install it with <a href="https://brew.sh/">Homebrew</a> or <a href="http://www.macports.org/">MacPorts</a>.</li><li>Linux (DEB/RPM-based): Install it with <a href="https://github.com/nodesource/distributions">NodeSource</a>.</li><li>Others: Install it through respective package manager. Refer to <a href="https://nodejs.org/en/download/package-manager/">the guide</a> provided by Node.js.</li></ul><p>nvs is also recommended for Mac and Linux to avoid possible permission issue.</p><p>If you use the official installer, make sure <strong>Add to PATH</strong> is checked (it’s checked by default).</p><p>If you encounter <code>EACCES</code> permission error when trying to install Hexo, please follow <a href="https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally">the workaround</a> provided by npmjs; overriding with root/sudo is highly discouraged.</p><p>If you installed Node.js using Snap, you may need to manually run <code>npm install</code> in the target folder when <a href="/docs/commands#init">initializing</a> a blog.</p><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><p>Once all the requirements are installed, you can install Hexo with npm:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></tbody></table></figure><h3 id="Advanced-installation-and-usage"><a href="#Advanced-installation-and-usage" class="headerlink" title="Advanced installation and usage"></a>Advanced installation and usage</h3><p>Advanced users may prefer to install and use <code>hexo</code> package instead.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo</span><br></pre></td></tr></tbody></table></figure><p>Once installed, you can run Hexo in two ways:</p><ol><li><code>npx hexo &lt;command&gt;</code></li><li>Linux users can set relative path of <code>node_modules/</code> folder:</li></ol>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'PATH="$PATH:./node_modules/.bin"'</span> &gt;&gt; ~/.profile</span><br></pre></td></tr></tbody></table></figure><p>  then run Hexo using <code>hexo &lt;command&gt;</code></p><h3 id="Minimum-required-Node-js-version"><a href="#Minimum-required-Node-js-version" class="headerlink" title="Minimum required Node.js version"></a>Minimum required Node.js version</h3><p>If you are stuck with older Node.js, you can consider installing a past version of Hexo.</p><p>Please note we do not provide bugfixes to past versions of Hexo.</p><p>We highly recommend to always install the <a href="https://www.npmjs.com/package/hexo?activeTab=versions">latest version</a> of Hexo and the <a href="#Requirements">recommended version</a> of Node.js, whenever possible.</p><table><thead><tr><th>Hexo version</th><th>Minimum Node.js version</th></tr></thead><tbody><tr><td>5.0+</td><td>10.13.0</td></tr><tr><td>4.1 - 4.2</td><td>8.10</td></tr><tr><td>4.0</td><td>8.6</td></tr><tr><td>3.3 - 3.9</td><td>6.9</td></tr><tr><td>3.2 - 3.3</td><td>0.12</td></tr><tr><td>3.0 - 3.1</td><td>0.10 or iojs</td></tr><tr><td>0.0.1 - 2.8</td><td>0.10</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to the Hexo documentation. If you encounter any problems when using Hexo, have a look at the  &lt;a href=&quot;troubleshooting.html&quot;&gt;trou</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Internationalization (i18n)</title>
    <link href="http://example.com/2021/11/01/internationalization/"/>
    <id>http://example.com/2021/11/01/internationalization/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>You can use internationalization to present your site in different languages. The default language is set by modifying the <code>language</code> setting in <code>_config.yml</code>. You can also set multiple languages and modify the order of default languages.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">language:</span> <span class="string">zh-tw</span></span><br><span class="line"></span><br><span class="line"><span class="attr">language:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">zh-tw</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">en</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Language-Files"><a href="#Language-Files" class="headerlink" title="Language Files"></a>Language Files</h3><p>Language files can be YAML or JSON files. You should put them into the <code>languages</code> folder in the theme. There is support for the <a href="https://github.com/alexei/sprintf.js">printf format</a> in language files.</p><h3 id="Templates"><a href="#Templates" class="headerlink" title="Templates"></a>Templates</h3><p>Use <code>__</code> or <code>_p</code> helpers in templates to get the translated strings. The former is for normal usage and the latter is for plural strings. For example:</p><figure class="highlight yaml"><figcaption><span>en.yml</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index:</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Home</span></span><br><span class="line">  <span class="attr">add:</span> <span class="string">Add</span></span><br><span class="line">  <span class="attr">video:</span></span><br><span class="line">    <span class="attr">zero:</span> <span class="literal">No</span> <span class="string">videos</span></span><br><span class="line">    <span class="attr">one:</span> <span class="string">One</span> <span class="string">video</span></span><br><span class="line">    <span class="attr">other:</span> <span class="string">%d</span> <span class="string">videos</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= __(<span class="string">'index.title'</span>) %&gt;</span><br><span class="line"><span class="comment">// Home</span></span><br><span class="line"></span><br><span class="line">&lt;%= _p(<span class="string">'index.video'</span>, <span class="number">3</span>) %&gt;</span><br><span class="line"><span class="comment">// 3 videos</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h3><p>You can set the language of pages in front-matter, or modify the <code>i18n_dir</code> setting in <code>_config.yml</code> to enable automatic detection by Hexo.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br></pre></td></tr></tbody></table></figure><p>The default value of <code>i18n_dir</code> setting is <code>:lang</code>, which means that Hexo will detect the language within the first segment of URL. For example:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/index.html =&gt; en</span><br><span class="line">/archives/index.html =&gt; en</span><br><span class="line">/zh-tw/index.html =&gt; zh-tw</span><br></pre></td></tr></tbody></table></figure><p>The string will only be served as a language when the language file exists. So <code>archives</code> in <code>/archives/index.html</code> (example 2) will not get served as a language.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;You can use internationalization to present your site in different languages. The default language is set by modifying the &lt;code&gt;language</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Migration</title>
    <link href="http://example.com/2021/11/01/migration/"/>
    <id>http://example.com/2021/11/01/migration/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h2><p>First, install the <code>hexo-migrator-rss</code> plugin.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-rss --save</span><br></pre></td></tr></tbody></table></figure><p>Once the plugin is installed, run the following command to migrate all posts from RSS. <code>source</code> can be a file path or URL.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate rss &lt;<span class="built_in">source</span>&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="Jekyll"><a href="#Jekyll" class="headerlink" title="Jekyll"></a>Jekyll</h2><p>Move all files in the Jekyll <code>_posts</code> folder to the <code>source/_posts</code> folder.</p><p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Octopress"><a href="#Octopress" class="headerlink" title="Octopress"></a>Octopress</h2><p>Move all files in the Octopress <code>source/_posts</code> folder to <code>source/_posts</code></p><p>Modify the <code>new_post_name</code> setting in <code>_config.yml</code>:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:year-:month-:day-:title.md</span></span><br></pre></td></tr></tbody></table></figure><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><p>First, install the <code>hexo-migrator-wordpress</code> plugin.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-wordpress --save</span><br></pre></td></tr></tbody></table></figure><p>Export your WordPress site by going to “Tools” → “Export” → “WordPress” in the WordPress dashboard (see the <a href="http://en.support.wordpress.com/export/">WordPress support page</a> for more details).</p><p>Now run:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate wordpress &lt;<span class="built_in">source</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p>Where <code>source</code> is the file path or URL to the WordPress export file.</p><h2 id="Joomla"><a href="#Joomla" class="headerlink" title="Joomla"></a>Joomla</h2><p>First, install the <code>hexo-migrator-joomla</code> plugin.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-migrator-joomla --save</span><br></pre></td></tr></tbody></table></figure><p>Export your Joomla articles using the <a href="http://extensions.joomla.org/extensions/migration-a-conversion/data-import-a-export/12816?qh=YToxOntpOjA7czo1OiJqMnhtbCI7fQ==">J2XML</a> component.</p><p>Now run:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate joomla &lt;<span class="built_in">source</span>&gt;</span><br></pre></td></tr></tbody></table></figure><p>Where <code>source</code> is the file path or URL to the Joomla export file.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;RSS&quot;&gt;&lt;a href=&quot;#RSS&quot; class=&quot;headerlink&quot; title=&quot;RSS&quot;&gt;&lt;/a&gt;RSS&lt;/h2&gt;&lt;p&gt;First, install the &lt;code&gt;hexo-migrator-rss&lt;/code&gt; plugin.&lt;/p&gt;
&lt;fig</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>One-Command Deployment</title>
    <link href="http://example.com/2021/11/01/one-command-deployment/"/>
    <id>http://example.com/2021/11/01/one-command-deployment/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your server.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>Install the necessary plugin(s) that is compatible with the deployment method provided by your server/repository.</p><p>Deployment is usually configured through <strong>_config.yml</strong>. A valid configuration must have the <code>type</code> field. For example:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br></pre></td></tr></tbody></table></figure><p>You can use multiple deployers. Hexo will execute each deployer in order.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">heroku</span></span><br><span class="line">  <span class="attr">repo:</span></span><br></pre></td></tr></tbody></table></figure><p>Refer to the <a href="https://hexo.io/plugins/">Plugins</a> list for more deployment plugins.</p><h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><ol><li>Install <a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a>.</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>Edit <strong>_config.yml</strong> (with example values shown below as comments):</li></ol><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span> <span class="comment"># https://bitbucket.org/JohnSmith/johnsmith.bitbucket.io</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">branch</span>]</span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>repo</code></td><td>URL of the target repository</td><td></td></tr><tr><td><code>branch</code></td><td>Branch name.</td><td><code>gh-pages</code> (GitHub)<br><code>coding-pages</code> (Coding.net)<br><code>master</code> (others)</td></tr><tr><td><code>message</code></td><td>Customize commit message.</td><td><code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code></td></tr><tr><td><code>token</code></td><td>Optional token value to authenticate with the repo. Prefix with <code>$</code> to read token from environment variable</td><td></td></tr></tbody></table><ol start="3"><li>Deploy your site <code>hexo clean &amp;&amp; hexo deploy</code>.</li></ol><ul><li>You will be prompted with username and password of the target repository, unless you authenticate with a token or ssh key.</li><li>hexo-deployer-git does not store your username and password. Use <a href="https://git-scm.com/docs/git-credential-cache">git-credential-cache</a> to store them temporarily.</li></ul><ol start="4"><li>Navigate to your repository settings and change the “Pages” branch to <code>gh-pages</code> (or the branch specified in your config). The deployed site should be live on the link shown on the “Pages” setting.</li></ol><h2 id="Heroku"><a href="#Heroku" class="headerlink" title="Heroku"></a>Heroku</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-heroku">hexo-deployer-heroku</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-heroku --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">heroku</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>repo</code>, <code>repository</code></td><td>Heroku repository URL</td></tr><tr><td><code>message</code></td><td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td></tr></tbody></table><h2 id="Netlify"><a href="#Netlify" class="headerlink" title="Netlify"></a>Netlify</h2><p><a href="https://www.netlify.com/">Netlify</a> provides continuous deployment (Git-triggered builds), an intelligent global CDN, full DNS (including custom domains), automated HTTPS, asset acceleration, and a lot more. It is a unified platform that automates your code to create high-performance, easily maintainable sites and web apps.</p><p>There are two different ways to deploy your sites on Netlify. The most common way is to use the web UI. Go to the <a href="https://app.netlify.com/start">create a new site page</a>, select your project repo from GitHub, GitLab, or Bitbucket, and follow the prompts.</p><p>Alternatively, you can use Netlify’s <a href="https://www.netlify.com/docs/cli/">Node based CLI</a> tool to manage and deploy sites on Netlify without leaving your terminal.</p><p>You can also add a <a href="https://www.netlify.com/docs/deploy-button/">Deploy to Netlify Button</a> in your README.file to allow others to create a copy of your repository and be deployed to Netlify via one click.</p><h2 id="Rsync"><a href="#Rsync" class="headerlink" title="Rsync"></a>Rsync</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-rsync">hexo-deployer-rsync</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-rsync --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">rsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&lt;host&gt;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&lt;user&gt;</span></span><br><span class="line">  <span class="attr">root:</span> <span class="string">&lt;root&gt;</span></span><br><span class="line">  <span class="attr">port:</span> [<span class="string">port</span>]</span><br><span class="line">  <span class="attr">delete:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br><span class="line">  <span class="attr">verbose:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br><span class="line">  <span class="attr">ignore_errors:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>host</code></td><td>Address of remote host</td><td></td></tr><tr><td><code>user</code></td><td>Username</td><td></td></tr><tr><td><code>root</code></td><td>Root directory of remote host</td><td></td></tr><tr><td><code>port</code></td><td>Port</td><td>22</td></tr><tr><td><code>delete</code></td><td>Delete old files on remote host</td><td>true</td></tr><tr><td><code>verbose</code></td><td>Display verbose messages</td><td>true</td></tr><tr><td><code>ignore_errors</code></td><td>Ignore errors</td><td>false</td></tr></tbody></table><h2 id="OpenShift"><a href="#OpenShift" class="headerlink" title="OpenShift"></a>OpenShift</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-openshift">hexo-deployer-openshift</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-openshift --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">openshift</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&lt;repository</span> <span class="string">url&gt;</span></span><br><span class="line">  <span class="attr">message:</span> [<span class="string">message</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th></tr></thead><tbody><tr><td><code>repo</code></td><td>OpenShift repository URL</td></tr><tr><td><code>message</code></td><td>Customize commit message (Default to <code>Site updated: {{ now('YYYY-MM-DD HH:mm:ss') }}</code>)</td></tr></tbody></table><h2 id="FTPSync"><a href="#FTPSync" class="headerlink" title="FTPSync"></a>FTPSync</h2><p>Install <a href="https://github.com/hexojs/hexo-deployer-ftpsync">hexo-deployer-ftpsync</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-ftpsync --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ftpsync</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&lt;host&gt;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&lt;user&gt;</span></span><br><span class="line">  <span class="attr">pass:</span> <span class="string">&lt;password&gt;</span></span><br><span class="line">  <span class="attr">remote:</span> [<span class="string">remote</span>]</span><br><span class="line">  <span class="attr">port:</span> [<span class="string">port</span>]</span><br><span class="line">  <span class="attr">ignore:</span> [<span class="string">ignore</span>]</span><br><span class="line">  <span class="attr">connections:</span> [<span class="string">connections</span>]</span><br><span class="line">  <span class="attr">verbose:</span> [<span class="literal">true</span><span class="string">|false</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>host</code></td><td>Address of remote host</td><td></td></tr><tr><td><code>user</code></td><td>Username</td><td></td></tr><tr><td><code>pass</code></td><td>Password</td><td></td></tr><tr><td><code>remote</code></td><td>Root directory of remote host</td><td><code>/</code></td></tr><tr><td><code>port</code></td><td>Port</td><td>21</td></tr><tr><td><code>ignore</code></td><td>Ignore the files on either host or remote</td><td></td></tr><tr><td><code>connections</code></td><td>Connections number</td><td>1</td></tr><tr><td><code>verbose</code></td><td>Display verbose messages</td><td>false</td></tr></tbody></table><h2 id="SFTP"><a href="#SFTP" class="headerlink" title="SFTP"></a>SFTP</h2><p>Install <a href="https://github.com/lucascaro/hexo-deployer-sftp">hexo-deployer-sftp</a>. Deploys the site via SFTP, allowing for passwordless connections using ssh-agent.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-sftp --save</span><br></pre></td></tr></tbody></table></figure><p>Edit settings.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">sftp</span></span><br><span class="line">  <span class="attr">host:</span> <span class="string">&lt;host&gt;</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">&lt;user&gt;</span></span><br><span class="line">  <span class="attr">pass:</span> <span class="string">&lt;password&gt;</span></span><br><span class="line">  <span class="attr">remotePath:</span> [<span class="string">remote</span> <span class="string">path</span>]</span><br><span class="line">  <span class="attr">port:</span> [<span class="string">port</span>]</span><br><span class="line">  <span class="attr">privateKey:</span> [<span class="string">path/to/privateKey</span>]</span><br><span class="line">  <span class="attr">passphrase:</span> [<span class="string">passphrase</span>]</span><br><span class="line">  <span class="attr">agent:</span> [<span class="string">path/to/agent/socket</span>]</span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Option</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>host</code></td><td>Address of remote host</td><td></td></tr><tr><td><code>user</code></td><td>Username</td><td></td></tr><tr><td><code>pass</code></td><td>Password</td><td></td></tr><tr><td><code>remotePath</code></td><td>Root directory of remote host</td><td><code>/</code></td></tr><tr><td><code>port</code></td><td>Port</td><td>22</td></tr><tr><td><code>privateKey</code></td><td>Path to a ssh private key</td><td></td></tr><tr><td><code>passphrase</code></td><td>Optional passphrase for the private key</td><td></td></tr><tr><td><code>agent</code></td><td>Path to the ssh-agent socket</td><td><code>$SSH_AUTH_SOCK</code></td></tr></tbody></table><h2 id="Vercel"><a href="#Vercel" class="headerlink" title="Vercel"></a>Vercel</h2><p><a href="https://vercel.com/">Vercel</a> is a cloud platform that enables developers to host Jamstack websites and web services that deploy instantly, scale automatically, and requires no supervision, all with zero configuration. They provide a global edge network, SSL encryption, asset compression, cache invalidation, and more.</p><p>Step 1: Add a build script to your <code>package.json</code> file:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"scripts"</span>: {</span><br><span class="line">    <span class="attr">"build"</span>: <span class="string">"hexo generate"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>Step 2: Deploy your Hexo Website to Vercel</p><p>To deploy your Hexo app with a <a href="https://vercel.com/docs/git-integrations">Vercel for Git Integration</a>, make sure it has been pushed to a Git repository.</p><p>Import the project into Vercel using the <a href="https://vercel.com/import/git">Import Flow</a>. During the import, you will find all relevant options preconfigured for you; however, you can choose to change any of these options, a list of which can be found <a href="https://vercel.com/docs/build-step#build-&amp;-development-settings">here</a>.</p><p>After your project has been imported, all subsequent pushes to branches will generate <a href="https://vercel.com/docs/platform/deployments#preview">Preview Deployments</a>, and all changes made to the <a href="https://vercel.com/docs/git-integrations#production-branch">Production Branch</a> (commonly “main”) will result in a <a href="https://vercel.com/docs/platform/deployments#production">Production Deployment</a>.</p><p>Alternatively, you can click the deploy button below to create a new project:</p><p><a href="https://vercel.com/new/hexo"><img src="https://vercel.com/button" alt="Deploy Vercel"></a></p><h2 id="21YunBox"><a href="#21YunBox" class="headerlink" title="21YunBox"></a>21YunBox</h2><ol><li>On <a href="https://www.21yunbox.com/">21YunBox</a>, setup up a new <code>Static Site</code> project from GitHub with the following settings:</li></ol><ul><li><strong>Build command:</strong> <code>yarn &amp;&amp; hexo deploy</code></li><li><strong>Publish directory:</strong> <code>public</code></li></ul><ol start="2"><li>Press Deploy Buton！</li></ol><p>That’s it! Your app will be live on your 21YunBox URL as soon as the build finishes.</p><p>The sample app for <code>hexo</code> is deployed at <a href="https://hexo.21yunbox.com/">https://hexo.21yunbox.com/</a>.</p><p>For more detail, follow this guide at <a href="https://www.21yunbox.com/docs/#/deploy-hexo">https://www.21yunbox.com/docs/#/deploy-hexo</a>.</p><h2 id="Bip"><a href="#Bip" class="headerlink" title="Bip"></a>Bip</h2><p><a href="https://bip.sh/">Bip</a> is a commercial hosting service which provides zero downtime deployment, a global CDN, SSL, unlimited bandwidth and more for static websites. Plans are available on a pay as you go, per domain basis.</p><p>Getting started is quick and easy, as Bip provides out the box support for Hexo. This guide assumes you already have <a href="https://bip.sh/getstarted">a Bip domain and Bip CLI installed</a>.</p><p>1: Initialise your project directory</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ bip init</span><br></pre></td></tr></tbody></table></figure><p>Follow the prompts, where you’ll be asked which domain you’d like to deploy to. Bip will detect that you’re using Hexo, and set project settings like the source file directory automatically.</p><p>2: Deploy your website</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate —deploy &amp;&amp; bip deploy</span><br></pre></td></tr></tbody></table></figure><p>After a few moments, your website will be deployed.</p><h2 id="RSS3"><a href="#RSS3" class="headerlink" title="RSS3"></a>RSS3</h2><p><a href="https://rss3.io/">RSS3</a> is an open protocol designed for content and social networks in the Web 3.0 era.</p><ol><li><p>Install <a href="https://github.com/NaturalSelectionLabs/hexo-deployer-rss3">hexo-deployer-rss3</a>.</p></li><li><p>Modify the configuration.</p></li></ol>  <figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span> <span class="comment"># The root configuration block for all deployers</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">type:</span> <span class="string">rss3</span></span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">https://hub.rss3.io</span></span><br><span class="line">  <span class="attr">privateKey:</span> <span class="string">47e18d6c386898b424025cd9db446f779ef24ad33a26c499c87bb3d9372540ba</span></span><br><span class="line">  <span class="attr">ipfs:</span></span><br><span class="line">    <span class="attr">deploy:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">gateway:</span> <span class="string">pinata</span></span><br><span class="line">    <span class="attr">api:</span></span><br><span class="line">      <span class="attr">key:</span> <span class="string">d693df715d3631e489d6</span></span><br><span class="line">      <span class="attr">secret:</span> <span class="string">ee8b74626f12b61c1a4bde3b8c331ad390567c86ba779c9b18561ee92c1cbff0</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td><code>endpoint</code></td><td>a link to the RSS3 Hub</td></tr><tr><td><code>privateKey</code></td><td>your private key, 64 bytes</td></tr><tr><td><code>ipfs/deploy</code></td><td>whether to deploy to IPFS</td></tr><tr><td><code>ipfs/gateway</code></td><td>IPFS API gateway</td></tr><tr><td><code>ipfs/api/key</code></td><td>IPFS gateway-related authentication content</td></tr><tr><td><code>ipfs/api/secret</code></td><td>IPFS gateway-related authentication content</td></tr></tbody></table><ol start="3"><li><p>generate static files</p></li><li><p>deploy</p></li></ol><p>For deployment-related considerations, you can refer to <a href="https://github.com/NaturalSelectionLabs/hexo-deployer-rss3/blob/develop/README.md">Our documentation</a>.</p><h2 id="Other-Methods"><a href="#Other-Methods" class="headerlink" title="Other Methods"></a>Other Methods</h2><p>All generated files are saved in the <code>public</code> folder. You can copy them to wherever you like.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo provides a fast and easy deployment strategy. You only need one single command to deploy your site to your server.&lt;/p&gt;
&lt;figure class</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Permalinks</title>
    <link href="http://example.com/2021/11/01/permalinks/"/>
    <id>http://example.com/2021/11/01/permalinks/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>You can specify the permalinks for your site in <code>_config.yml</code> or in the front-matter for each post.</p><h3 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h3><p>Besides the following variables, you can use any attributes in the permalink.</p><table><thead><tr><th>Variable</th><th>Description</th></tr></thead><tbody><tr><td><code>:year</code></td><td>Published year of posts (4-digit)</td></tr><tr><td><code>:month</code></td><td>Published month of posts (2-digit)</td></tr><tr><td><code>:i_month</code></td><td>Published month of posts (Without leading zeros)</td></tr><tr><td><code>:day</code></td><td>Published day of posts (2-digit)</td></tr><tr><td><code>:i_day</code></td><td>Published day of posts (Without leading zeros)</td></tr><tr><td><code>:hour</code></td><td>Published hour of posts (2-digit)</td></tr><tr><td><code>:minute</code></td><td>Published minute of posts (2-digit)</td></tr><tr><td><code>:second</code></td><td>Published second of posts (2-digit)</td></tr><tr><td><code>:title</code></td><td>Filename (relative to “source/_posts/“ folder)</td></tr><tr><td><code>:name</code></td><td>Filename</td></tr><tr><td><code>:post_title</code></td><td>Post title</td></tr><tr><td><code>:id</code></td><td>Post ID (<em>not persistent across <a href="/docs/commands#clean">cache reset</a></em>)</td></tr><tr><td><code>:category</code></td><td>Categories. If the post is uncategorized, it will use the <code>default_category</code> value.</td></tr><tr><td><code>:hash</code></td><td>SHA1 hash of filename (same as <code>:title</code>) and date (12-hexadecimal)</td></tr></tbody></table><p>You can define the default value of each variable in the permalink through the <code>permalink_defaults</code> setting:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line">  <span class="attr">lang:</span> <span class="string">en</span></span><br></pre></td></tr></tbody></table></figure><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><figure class="highlight yaml"><figcaption><span>source/_posts/hello-world.md</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013-07-14 17:01:34</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">foo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">bar</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Setting</th><th>Result</th></tr></thead><tbody><tr><td><code>:year/:month/:day/:title/</code></td><td>2013/07/14/hello-world/</td></tr><tr><td><code>:year-:month-:day-:title.html</code></td><td>2013-07-14-hello-world.html</td></tr><tr><td><code>:category/:title/</code></td><td>foo/bar/hello-world/</td></tr><tr><td><code>:title-:hash/</code></td><td>hello-world-a2c8ac003b43/</td></tr></tbody></table><figure class="highlight yaml"><figcaption><span>source/_posts/lorem/hello-world.md</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">Hello</span> <span class="string">World</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2013-07-14 17:01:34</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">foo</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">bar</span></span><br></pre></td></tr></tbody></table></figure><table><thead><tr><th>Setting</th><th>Result</th></tr></thead><tbody><tr><td><code>:year/:month/:day/:title/</code></td><td>2013/07/14/lorem/hello-world/</td></tr><tr><td><code>:year/:month/:day/:name/</code></td><td>2013/07/14/hello-world/</td></tr></tbody></table><h3 id="Multi-language-Support"><a href="#Multi-language-Support" class="headerlink" title="Multi-language Support"></a>Multi-language Support</h3><p>To create a multi-language site, you can modify the <code>new_post_name</code> and <code>permalink</code> settings like this:</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">new_post_name:</span> <span class="string">:lang/:title.md</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:lang/:title/</span></span><br></pre></td></tr></tbody></table></figure><p>When you create a new post, the post will be saved to:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"Hello World"</span> --lang tw</span><br><span class="line"><span class="comment"># =&gt; source/_posts/tw/Hello-World.md</span></span><br></pre></td></tr></tbody></table></figure><p>and the URL will be:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:4000/tw/hello-world/</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;You can specify the permalinks for your site in &lt;code&gt;_config.yml&lt;/code&gt; or in the front-matter for each post.&lt;/p&gt;
&lt;h3 id=&quot;Variables&quot;&gt;&lt;a </summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Plugins</title>
    <link href="http://example.com/2021/11/01/plugins/"/>
    <id>http://example.com/2021/11/01/plugins/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There are two kinds of plugins in Hexo:</p><h3 id="Script"><a href="#Script" class="headerlink" title="Script"></a>Script</h3><p>If your plugin is relatively simple, it’s recommended to use a script. All you need to do is put your JavaScript files in the <code>scripts</code> folder and Hexo will load them during initialization.</p><h3 id="Plugin"><a href="#Plugin" class="headerlink" title="Plugin"></a>Plugin</h3><p>If your code is complicated or if you want to publish it to the NPM registry, we recommend using a plugin. First, create a folder in the <code>node_modules</code> folder. The name of this folder must begin with <code>hexo-</code> or Hexo will ignore it.</p><p>Your new folder must contain at least two files: one containing the actual JavaScript code and one <code>package.json</code> file that describes the purpose of the plugin and sets its dependencies.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── index.js</span><br><span class="line">└── package.json</span><br></pre></td></tr></tbody></table></figure><p>At the very least, you should set the <code>name</code>, <code>version</code> and <code>main</code> entries in <code>package.json</code>. For example:</p><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-my-plugin"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.1"</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"index"</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>You’ll also need to list your plugin as a dependency in the root <code>package.json</code> of your hexo instance in order for Hexo to detect and load it.</p><h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><p>You can make use of the official tools provided by Hexo to accelerate development:</p><ul><li><a href="https://github.com/hexojs/hexo-fs">hexo-fs</a>：File IO</li><li><a href="https://github.com/hexojs/hexo-util">hexo-util</a>：Utilities</li><li><a href="https://github.com/hexojs/hexo-i18n">hexo-i18n</a>：Localization (i18n)</li><li><a href="https://github.com/hexojs/hexo-pagination">hexo-pagination</a>：Generate pagination data</li></ul><h3 id="Publishing"><a href="#Publishing" class="headerlink" title="Publishing"></a>Publishing</h3><p>When your plugin is ready, you may consider publishing it to the <a href="/plugins">plugin list</a> to invite other people to start using it. Publishing your own plugins is very similar to <a href="contributing.html#Updating_Documentation">updating documentation</a>.</p><ol><li><p>Fork <a href="https://github.com/hexojs/site">hexojs/site</a></p></li><li><p>Clone the repository to your computer and install dependencies.</p> <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/&lt;username&gt;/site.git</span><br><span class="line">$ cd site</span><br><span class="line">$ npm install</span><br></pre></td></tr></tbody></table></figure></li><li><p>Edit <code>source/_data/plugins.yml</code> and add your plugin. For example:</p> <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">- name: hexo-server</span><br><span class="line">  description: Server module for Hexo.</span><br><span class="line">  link: https://github.com/hexojs/hexo-server</span><br><span class="line">  tags:</span><br><span class="line">    - official</span><br><span class="line">    - server</span><br><span class="line">    - console</span><br></pre></td></tr></tbody></table></figure></li><li><p>Push the branch.</p></li><li><p>Create a pull request and describe the change.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo has a powerful plugin system, which makes it easy to extend functions without modifying the source code of the core module. There ar</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Quick hexo startup</title>
    <link href="http://example.com/2021/11/01/quick-startup/"/>
    <id>http://example.com/2021/11/01/quick-startup/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Server</title>
    <link href="http://example.com/2021/11/01/server/"/>
    <id>http://example.com/2021/11/01/server/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="hexo-server"><a href="#hexo-server" class="headerlink" title="hexo-server"></a><a href="https://github.com/hexojs/hexo-server">hexo-server</a></h2><p>With the release of Hexo 3, the server has been separated from the main module. To start using the server, you will first have to install <a href="https://github.com/hexojs/hexo-server">hexo-server</a>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></tbody></table></figure><p>Once the server has been installed, run the following command to start the server. Your website will run at <code>http://localhost:4000</code> by default. When the server is running, Hexo will watch for file changes and update automatically so it’s not necessary to manually restart the server.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>If you want to change the port or if you’re encountering <code>EADDRINUSE</code> errors, use the <code>-p</code> option to set a different port.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></tbody></table></figure><h3 id="Static-Mode"><a href="#Static-Mode" class="headerlink" title="Static Mode"></a>Static Mode</h3><p>In static mode, only files in the <code>public</code> folder will be served and file watching is disabled. You have to run <code>hexo generate</code> before starting the server. Usually used in production.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -s</span><br></pre></td></tr></tbody></table></figure><h3 id="Custom-IP"><a href="#Custom-IP" class="headerlink" title="Custom IP"></a>Custom IP</h3><p>Hexo runs the server at <code>0.0.0.0</code> by default. You can override the default IP setting.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -i 192.168.1.1</span><br></pre></td></tr></tbody></table></figure><h2 id="Pow"><a href="#Pow" class="headerlink" title="Pow"></a>Pow</h2><p><a href="http://pow.cx/">Pow</a> is a zero-config Rack server for Mac.</p><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl get.pow.cx | sh</span><br></pre></td></tr></tbody></table></figure><h3 id="Setup"><a href="#Setup" class="headerlink" title="Setup"></a>Setup</h3><p>Symlink the folder into <code>~/.pow</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/.pow</span><br><span class="line">$ ln -s /path/to/myapp</span><br></pre></td></tr></tbody></table></figure><p>Your website will be up and running at <code>http://myapp.test</code>. The URL is based on the name of the symlink.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;hexo-server&quot;&gt;&lt;a href=&quot;#hexo-server&quot; class=&quot;headerlink&quot; title=&quot;hexo-server&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/hexojs/hexo-server&quot;&gt;hexo-</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Setup</title>
    <link href="http://example.com/2021/11/01/setup/"/>
    <id>http://example.com/2021/11/01/setup/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/0m2HnATkHOk" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p>Once Hexo is installed, run the following commands to initialize Hexo in the target <code>&lt;folder&gt;</code>.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></tbody></table></figure><p>Once initialized, here’s what your project folder will look like:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></tbody></table></figure><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>Site <a href="configuration.html">configuration</a> file. You can configure most settings here.</p><h3 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h3><p>Application data. The <a href="https://ejs.co/">EJS</a>, <a href="http://learnboost.github.io/stylus/">Stylus</a> and <a href="http://daringfireball.net/projects/markdown/">Markdown</a> renderers are installed by default. If you want, you can uninstall them later.</p><figure class="highlight json"><figcaption><span>package.json</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"hexo-site"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="attr">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"hexo"</span>: {</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">""</span></span><br><span class="line">  },</span><br><span class="line">  <span class="attr">"dependencies"</span>: {</span><br><span class="line">    <span class="attr">"hexo"</span>: <span class="string">"^3.8.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-archive"</span>: <span class="string">"^0.1.5"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-category"</span>: <span class="string">"^0.1.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-index"</span>: <span class="string">"^0.2.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-generator-tag"</span>: <span class="string">"^0.2.0"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-ejs"</span>: <span class="string">"^0.3.1"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-stylus"</span>: <span class="string">"^0.3.3"</span>,</span><br><span class="line">    <span class="attr">"hexo-renderer-marked"</span>: <span class="string">"^0.3.2"</span>,</span><br><span class="line">    <span class="attr">"hexo-server"</span>: <span class="string">"^0.3.3"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="scaffolds"><a href="#scaffolds" class="headerlink" title="scaffolds"></a>scaffolds</h3><p><a href="writing.html#Scaffolds">Scaffold</a> folder. When you create a new post, Hexo bases the new file on the scaffold.</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>Source folder. This is where you put your site’s content. Hexo ignores hidden files and files or folders whose names are prefixed with <code>_</code> (underscore) - except the <code>_posts</code> folder. Renderable files (e.g. Markdown, HTML) will be processed and put into the <code>public</code> folder, while other files will simply be copied.</p><h3 id="themes"><a href="#themes" class="headerlink" title="themes"></a>themes</h3><p><a href="themes.html">Theme</a> folder. Hexo generates a static website by combining the site contents with the theme.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/0m2HnATkHOk&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/ifr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Syntax Highlighting</title>
    <link href="http://example.com/2021/11/01/syntax-highlight/"/>
    <id>http://example.com/2021/11/01/syntax-highlight/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo has two built-in syntax highlight libraries, <a href="https://github.com/highlightjs/highlight.js">highlight.js</a> and <a href="https://github.com/PrismJS/prism">prismjs</a>. This tutorial shows you how to integrate Hexo’s built-in syntax highlight into your template.</p><h2 id="How-to-use-code-block-in-posts"><a href="#How-to-use-code-block-in-posts" class="headerlink" title="How to use code block in posts"></a>How to use code block in posts</h2><p>Hexo supports two ways to write code block: <a href="tag-plugins#Code-Block">Tag Plugin - Code Block</a> and <a href="https://hexo.io/docs/tag-plugins#Backtick-Code-Block">Tag Plugin - Backtick Code Block</a>:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">{% codeblock [title] [lang:language] [url] [link text] [additional options] %}</span><br><span class="line">code snippet</span><br><span class="line">{% endcodeblock %}</span><br><span class="line"></span><br><span class="line">{% code [title] [lang:language] [url] [link text] [additional options] %}</span><br><span class="line">code snippet</span><br><span class="line">{% endcode %}</span><br><span class="line"></span><br><span class="line"><span class="code">``` [language] [title] [url] [link text] [additional options]</span></span><br><span class="line"><span class="code">code snippet</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></tbody></table></figure><p>The third syntax is a Markdown’s fenced code block syntax and Hexo extends it to support more features. Check out <a href="tag-plugins#Code-Block">Tag Plugin Docs</a> to find out options available.</p><blockquote><p>Tip: Hexo support posts written in any format, so long the corresponding renderer plugin is installed. It can be in markdown, ejs, swig, nunjucks, pug, asciidoc, etc. Regardless of the format used, those three code block syntax will always be available.</p></blockquote><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>The YAML above is Hexo’s default configuration.</p><h2 id="Disabled"><a href="#Disabled" class="headerlink" title="Disabled"></a>Disabled</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><p>When both <code>highlight.enable</code> and <code>prismjs.enable</code> are <code>false</code>, the output HTML of the code block is controlled by the corresponding renderer. For example, <a href="https://github.com/markedjs/marked"><code>marked.js</code></a> (used by <a href="https://github.com/hexojs/hexo-renderer-marked"><code>hexo-renderer-marked</code></a>, the default markdown renderer of Hexo) will add the language code to the <code>class</code> of <code>&lt;code&gt;</code>:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```yaml</span></span><br><span class="line"><span class="code">hello: hexo</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">"yaml"</span>&gt;</span>hello: hexo<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>When no built-in syntax highlight is enabled, you can either install third-party syntax-highlight plugin, or use a browser-side syntax hilighter (e.g. <code>highlight.js</code> and <code>prism.js</code> both support running in browser).</p><h2 id="Highlight-js"><a href="#Highlight-js" class="headerlink" title="Highlight.js"></a>Highlight.js</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">'  '</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br></pre></td></tr></tbody></table></figure><p><code>highlight.js</code> is enabled by default and used as server-side highlighting in Hexo; it needs to be disabled if you prefer to run <code>highlight.js</code> on browser-side.</p><blockquote><p>Server-side means, the syntax highlight is generated during <code>hexo generate</code> or <code>hexo server</code>.</p></blockquote><h3 id="auto-detect"><a href="#auto-detect" class="headerlink" title="auto_detect"></a>auto_detect</h3><p><code>auto_detect</code> is a <code>highlight.js</code> feature that detect language of the code block automatically.</p><blockquote><p>Tip: When you want to use “sublanguage highlight”, enable <code>auto_detect</code> and don’t mark language when writing code block.</p></blockquote><p><code>auto_detect</code> is very resource-intensive. Do not enable it unless you really need “sublanguage highlight” or prefer not to mark language when writing code block.</p><h3 id="line-number"><a href="#line-number" class="headerlink" title="line_number"></a>line_number</h3><p><code>highlight.js</code> <a href="https://highlightjs.readthedocs.io/en/latest/line-numbers.html">does not</a> support line number.</p><p>Hexo adds line number by wrapping output inside <code>&lt;figure&gt;</code> and <code>&lt;table&gt;</code>:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">figure</span> <span class="attr">class</span>=<span class="string">"highlight yaml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"gutter"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"code"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"line"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"attr"</span>&gt;</span>hello:<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"string"</span>&gt;</span>hexo<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>It is not the behavior of <code>highlight.js</code> and requires custom CSS for <code>&lt;figure&gt;</code> and <code>&lt;table&gt;</code> elements; some themes have built-in support.</p><p>You might also notice that all <code>class</code> has no <code>hljs-</code> prefixed, we will revisit it <a href="#hljs">later part</a>.</p><h3 id="tab-replace"><a href="#tab-replace" class="headerlink" title="tab_replace"></a>tab_replace</h3><p>Replace tabs inside code block with given string. By default it is 2 spaces.</p><h3 id="wraps"><a href="#wraps" class="headerlink" title="wraps"></a>wraps</h3><p>Hexo <em>wraps</em> the output inside <code>&lt;figure&gt;</code> and <code>&lt;table&gt;</code> to support line number. You need to disable <strong>both</strong> <code>line_number</code> and <code>wrap</code> to revert to <code>highlight.js</code>‘s behavior:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">"yaml"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span># _config.yml<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"attr"</span>&gt;</span>hexo:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"string"</span>&gt;</span>hexo<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>Because <code>line_number</code> feature relies on <code>wrap</code>, you can’t disable <code>wrap</code> with <code>line_number</code> enabled: If you set <code>line_number</code> to <code>true</code>, <code>wrap</code> will be automatically enabled.</p><h3 id="hljs"><a href="#hljs" class="headerlink" title="hljs"></a>hljs</h3><p>When <code>hljs</code> is set to <code>true</code>, all the HTML output will have <code>class</code> prefixed with <code>hljs-</code> (regardless <code>wrap</code> is enabled or not):</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;<span class="name">code</span> <span class="attr">class</span>=<span class="string">"yaml hljs"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hljs-comment"</span>&gt;</span># _config.yml<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hljs-attr"</span>&gt;</span>hexo:<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"hljs-string"</span>&gt;</span>hexo<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">code</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>Tip: When <code>line_number</code> is set to <code>false</code>, <code>wrap</code> is set to false and <code>hljs</code> is set to <code>true</code>, you can then use <code>highlight.js</code> <a href="https://github.com/highlightjs/highlight.js/tree/master/src/styles">theme</a> directly in your site.</p></blockquote><h2 id="PrismJS"><a href="#PrismJS" class="headerlink" title="PrismJS"></a>PrismJS</h2><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># _config.yml</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">''</span></span><br></pre></td></tr></tbody></table></figure><p>Prismjs is disabled by default. You should set <code>highlight.enable</code> to <code>false</code> before enabling prismjs.</p><h3 id="preprocess"><a href="#preprocess" class="headerlink" title="preprocess"></a>preprocess</h3><p>Hexo’s built-in prismjs supports both browser-side (<code>preprocess</code> set to <code>false</code>) and server-side (<code>preprocess</code> set to <code>true</code>).</p><p>When use server-side mode (set <code>preprocess</code> to <code>true</code>), you only need to include prismjs theme (css stylesheet) in your website. When use browser-side (set <code>preprocess</code> to <code>false</code>), you have to include the javascript library as well.</p><p>Prismjs is designed to be used in browser, thus under <code>preprocess</code> mode only limited prismjs plugin is supported:</p><ul><li><a href="https://prismjs.com/plugins/line-numbers/">Line Numbers</a>: Only <code>prism-line-numbers.css</code> is required, No need to include <code>prism-line-numbers.js</code> in your website. Hexo will generate required HTML mark up mark up for you.</li><li><a href="https://prismjs.com/plugins/show-language/">Show Languages</a>: Hexo will always have <code>data-language</code> attribute added as long as language is given for the code block.</li><li>Any other prism plugins that don’t need special HTML markup are supported as well, but you will have to include JavaScript required by those plugins.</li></ul><p>All prism plugins are supported if <code>preprocess</code> is set to <code>false</code>. Here are a few things you should still pay attention to:</p><ul><li><a href="https://prismjs.com/plugins/line-numbers/">Line Numbers</a>: Hexo won’t generate required HTML mark up when <code>preprocess</code> is set to <code>false</code>. Requires both <code>prism-line-numbers.css</code> and <code>prism-line-numbers.js</code>.</li><li><a href="https://prismjs.com/plugins/show-language/">Show Languages</a>: Hexo will always have <code>data-language</code> attribute added as long as language is given for the code block.</li><li><a href="https://prismjs.com/plugins/line-highlight/">Line Highlight</a>: Both Hexo <a href="tag-plugins#Code-Block">Tag Plugin - Code Block</a> and <a href="https://hexo.io/docs/tag-plugins#Backtick-Code-Block">Tag Plugin - Backtick Code Block</a> supports Line Highlight syntax (<code>mark</code> option). When <code>mark</code> option is given, Hexo will generate the corresponding HTML markup.</li></ul><h3 id="line-number-1"><a href="#line-number-1" class="headerlink" title="line_number"></a>line_number</h3><p>With both <code>preprocess</code> and <code>line_number</code> set to <code>true</code>, you just need to include <code>prism-line-numbers.css</code> to make line-numbering work. If you set both <code>preprocess</code> and <code>line_number</code> to false, you will need both <code>prism-line-numbers.css</code> and <code>prism-line-numbers.js</code>.</p><h3 id="tab-replace-1"><a href="#tab-replace-1" class="headerlink" title="tab_replace"></a>tab_replace</h3><p>Replace <code>\t</code> inside code block with given string. By default it is 2 spaces.</p><h2 id="Other-useful-information"><a href="#Other-useful-information" class="headerlink" title="Other useful information"></a>Other useful information</h2><ul><li><a href="https://highlightjs.readthedocs.io/en/latest/">Highlight.js</a></li><li><a href="https://prismjs.com/">PrismJS</a></li></ul><p>The source codes behind Hexo’s syntax highlighting are available in:</p><ul><li><a href="https://github.com/hexojs/hexo-util/blob/master/lib/highlight.js">Highlight.js Utility Functions</a></li><li><a href="https://github.com/hexojs/hexo-util/blob/master/lib/prism.js">PrismJS Utility Functions</a></li><li><a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/tag/code.js">Tag Plugin - Code Block</a></li><li><a href="https://github.com/hexojs/hexo/blob/master/lib/plugins/filter/before_post_render/backtick_code_block.js">Tag Plugin - Backtick Code Block</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hexo has two built-in syntax highlight libraries, &lt;a href=&quot;https://github.com/highlightjs/highlight.js&quot;&gt;highlight.js&lt;/a&gt; and &lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Tag Plugins</title>
    <link href="http://example.com/2021/11/01/tag-plugins/"/>
    <id>http://example.com/2021/11/01/tag-plugins/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content to your posts.</p><p>Although you can write your posts in any formats, but the tag plugins will always be available and syntax remains the same.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/I07XMi7MHd4" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p><em>Tag plugins should not be wrapped inside Markdown syntax, e.g. <code>[]({% post_path lorem-ipsum %})</code> is not supported.</em></p><h2 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h2><p>Perfect for adding quotes to your post, with optional author, source and title information.</p><p><strong>Alias:</strong> quote</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% blockquote [author[, source]] [link] [source_link_title] %}</span><br><span class="line">content</span><br><span class="line">{% endblockquote %}</span><br></pre></td></tr></tbody></table></figure><h3 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h3><p><strong>No arguments. Plain blockquote.</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% blockquote %}</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="line">{% endblockquote %}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><p><strong>Quote from a book</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% blockquote David Levithan, Wide Awake %}</span><br><span class="line">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class="line">{% endblockquote %}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote><p><strong>Quote from Twitter</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}</span><br><span class="line">NEW: DevDocs now comes with syntax highlighting. http://devdocs.io</span><br><span class="line">{% endblockquote %}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io/">http://devdocs.io</a></p><footer><strong>@DevDocs</strong><cite><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote><p><strong>Quote from an article on the web</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}</span><br><span class="line">Every interaction is both precious and an opportunity to delight.</span><br><span class="line">{% endblockquote %}</span><br></pre></td></tr></tbody></table></figure><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></cite></footer></blockquote><h2 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h2><p>Useful feature for adding code snippets to your post.</p><p><strong>Alias:</strong> code</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% codeblock [title] [lang:language] [url] [link text] [additional options] %}</span><br><span class="line">code snippet</span><br><span class="line">{% endcodeblock %}</span><br></pre></td></tr></tbody></table></figure><p>Specify additional options in <code>option:value</code> format, e.g. <code>line_number:false first_line:5</code>.</p><table><thead><tr><th>Extra Options</th><th>Description</th><th>Default</th></tr></thead><tbody><tr><td><code>line_number</code></td><td>Show line number</td><td><code>true</code></td></tr><tr><td><code>highlight</code></td><td>Enable code highlighting</td><td><code>true</code></td></tr><tr><td><code>first_line</code></td><td>Specify the first line number</td><td><code>1</code></td></tr><tr><td><code>mark</code></td><td>Line highlight specific line(s), each value separated by a comma. Specify number range using a dash<br>Example: <code>mark:1,4-7,10</code> will mark line 1, 4 to 7 and 10.</td><td></td></tr><tr><td><code>wrap</code></td><td>Wrap the code block in <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table"><code>&lt;table&gt;</code></a></td><td><code>true</code></td></tr></tbody></table><h3 id="Examples-1"><a href="#Examples-1" class="headerlink" title="Examples"></a>Examples</h3><p><strong>A plain code block</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% codeblock %}</span><br><span class="line">alert('Hello World!');</span><br><span class="line">{% endcodeblock %}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alert('Hello World!');</span><br></pre></td></tr></tbody></table></figure><p><strong>Specifying the language</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% codeblock lang:objc %}</span><br><span class="line">[rectangle setX: 10 y: 10 width: 20 height: 20];</span><br><span class="line">{% endcodeblock %}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight objc"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];</span><br></pre></td></tr></tbody></table></figure><p><strong>Adding a caption to the code block</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% codeblock Array.map %}</span><br><span class="line">array.map(callback[, thisArg])</span><br><span class="line">{% endcodeblock %}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><figcaption><span>Array.map</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></tbody></table></figure><p><strong>Adding a caption and a URL</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">{% codeblock _.compact http://underscorejs.org/#compact Underscore.js %}</span><br><span class="line">_.compact([0, 1, false, 2, '', 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br><span class="line">{% endcodeblock %}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact">Underscore.js</a></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, '', 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></tbody></table></figure><h2 id="Backtick-Code-Block"><a href="#Backtick-Code-Block" class="headerlink" title="Backtick Code Block"></a>Backtick Code Block</h2><p>This is identical to using a code block, but instead uses three backticks to delimit the block.</p>``` [language] [title] [url] [link text]code snippet```<h2 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h2><p>To add pull quotes to your posts:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% pullquote [class] %}</span><br><span class="line">content</span><br><span class="line">{% endpullquote %}</span><br></pre></td></tr></tbody></table></figure><h2 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h2><p>To embed a jsFiddle snippet:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% jsfiddle shorttag [tabs] [skin] [width] [height] %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>To embed a Gist snippet:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% gist gist_id [filename] %}</span><br></pre></td></tr></tbody></table></figure><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><p>To embed an iframe:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% iframe url [width] [height] %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>Inserts an image with specified size.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% img [class names] /path/to/image [width] [height] '"title text" "alt text"' %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>Inserts a link with <code>target="_blank"</code> attribute.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% link text url [external] [title] %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><p>Inserts code snippets in <code>source/downloads/code</code> folder. The folder location can be specified through the <code>code_dir</code> option in the config.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% include_code [title] [lang:language] [from:line] [to:line] path/to/file %}</span><br></pre></td></tr></tbody></table></figure><h3 id="Examples-2"><a href="#Examples-2" class="headerlink" title="Examples"></a>Examples</h3><p><strong>Embed the whole content of test.js</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% include_code lang:javascript test.js %}</span><br></pre></td></tr></tbody></table></figure><p><strong>Embed line 3 only</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% include_code lang:javascript from:3 to:3 test.js %}</span><br></pre></td></tr></tbody></table></figure><p><strong>Embed line 5 to 8</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% include_code lang:javascript from:5 to:8 test.js %}</span><br></pre></td></tr></tbody></table></figure><p><strong>Embed line 5 to the end of file</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% include_code lang:javascript from:5 test.js %}</span><br></pre></td></tr></tbody></table></figure><p><strong>Embed line 1 to 8</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% include_code lang:javascript to:8 test.js %}</span><br></pre></td></tr></tbody></table></figure><h2 id="YouTube"><a href="#YouTube" class="headerlink" title="YouTube"></a>YouTube</h2><p>Inserts a YouTube video.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% youtube video_id [type] [cookie] %}</span><br></pre></td></tr></tbody></table></figure><h3 id="Examples-3"><a href="#Examples-3" class="headerlink" title="Examples"></a>Examples</h3><p><strong>Embed a video</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% youtube lJIrF4YjHfQ %}</span><br></pre></td></tr></tbody></table></figure><p><strong>Embed a playlist</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo 'playlist' %}</span><br></pre></td></tr></tbody></table></figure><p><strong>Enable privacy-enhanced mode</strong></p><p>YouTube’s cookie is not used in this mode.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% youtube lJIrF4YjHfQ false %}</span><br><span class="line">{% youtube PL9hW1uS6HUfscJ9DHkOSoOX45MjXduUxo 'playlist' false %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h2><p>Inserts a responsive or specified size Vimeo video.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% vimeo video_id [width] [height] %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Include-Posts"><a href="#Include-Posts" class="headerlink" title="Include Posts"></a>Include Posts</h2><p>Include links to other posts.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% post_path filename %}</span><br><span class="line">{% post_link filename [title] [escape] %}</span><br></pre></td></tr></tbody></table></figure><p>You can ignore permalink and folder information, like languages and dates, when using this tag.</p><p>For instance: <code>{% post_link how-to-bake-a-cake %}</code>.</p><p>This will work as long as the filename of the post is <code>how-to-bake-a-cake.md</code>, even if the post is located at <code>source/posts/2015-02-my-family-holiday</code> and has permalink <code>2018/en/how-to-bake-a-cake</code>.</p><p>You can customize the text to display, instead of displaying the post’s title.</p><p>Post’s title and custom text are escaped by default. You can use the <code>escape</code> option to disable escaping.</p><p>For instance:</p><p><strong>Display title of the post.</strong></p><p><code>{% post_link hexo-3-8-released %}</code></p><a href="#">Post not found: hexo-3-8-released</a><p><strong>Display custom text.</strong></p><p><code>{% post_link hexo-3-8-released 'Link to a post' %}</code></p><a href="#">Post not found: hexo-3-8-released Link to a post</a><p><strong>Escape title.</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% post_link hexo-4-released 'How to use &lt;b&gt; tag in title' %}</span><br></pre></td></tr></tbody></table></figure><a href="#">Post not found: hexo-4-released How to use <b> tag in title</b></a><b><p><strong>Do not escape title.</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">{% post_link hexo-4-released '&lt;b&gt;bold&lt;/b&gt; custom title' false %}</span><br></pre></td></tr></tbody></table></figure><a href="#">Post not found: hexo-4-released <b>bold</b> custom title false</a><h2 id="Include-Assets"><a href="#Include-Assets" class="headerlink" title="Include Assets"></a>Include Assets</h2><p>Include post assets, to be used in conjunction with <a href="/docs/asset-folders"><code>post_asset_folder</code></a>.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% asset_path filename %}</span><br><span class="line">{% asset_img [class names] slug [width] [height] [title text [alt text]] %}</span><br><span class="line">{% asset_link filename [title] [escape] %}</span><br></pre></td></tr></tbody></table></figure><h3 id="Embed-image"><a href="#Embed-image" class="headerlink" title="Embed image"></a>Embed image</h3><p><em>hexo-renderer-marked 3.1.0+ can (optionally) resolves the post’s path of an image automatically, refer to <a href="/docs/asset-folders#Embedding-an-image-using-markdown">this section</a> on how to enable it.</em></p><p>“foo.jpg” is located at <code>http://example.com/2020/01/02/hello/foo.jpg</code>.</p><p><strong>Default (no option)</strong></p><p><code>{% asset_img foo.jpg %}</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/2020/01/02/hello/foo.jpg"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><strong>Custom class</strong></p><p><code>{% asset_img post-image foo.jpg %}</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/2020/01/02/hello/foo.jpg"</span> <span class="attr">class</span>=<span class="string">"post-image"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><strong>Display size</strong></p><p><code>{% asset_img foo.jpg 500 400 %}</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/2020/01/02/hello/foo.jpg"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p><strong>Title &amp; Alt</strong></p><p><code>{% asset_img logo.svg "lorem ipsum'dolor'" %}</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"/2020/01/02/hello/foo.jpg"</span> <span class="attr">title</span>=<span class="string">"lorem ipsum"</span> <span class="attr">alt</span>=<span class="string">"dolor"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h2><p>If certain content is causing processing issues in your posts, wrap it with the <code>raw</code> tag to avoid rendering errors.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% raw %}</span><br><span class="line">content</span><br><span class="line">{% endraw %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Post-Excerpt"><a href="#Post-Excerpt" class="headerlink" title="Post Excerpt"></a>Post Excerpt</h2><p>Use text placed before the <code>&lt;!-- more --&gt;</code> tag as an excerpt for the post. <code>excerpt:</code> value in the <a href="/docs/front-matter#Settings-amp-Their-Default-Values">front-matter</a>, if specified, will take precedent.</p><p><strong>Examples:</strong></p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</span><br><span class="line">&lt;!-- more --&gt;</span><br><span class="line">Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</span><br></pre></td></tr></tbody></table></figure></b>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Tag plugins are different from post tags. They are ported from Octopress and provide a useful way for you to quickly add specific content</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Templates</title>
    <link href="http://example.com/2021/11/01/templates/"/>
    <id>http://example.com/2021/11/01/templates/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>Templates define the presentation of your website by describing what each page should look like. The table below shows the corresponding template for every available page. At the very least, a theme should contain an <code>index</code> template.</p><div class="video-container"><iframe src="https://www.youtube.com/embed/mb65bQ4iUc4" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><table><thead><tr><th>Template</th><th>Page</th><th>Fallback</th></tr></thead><tbody><tr><td><code>index</code></td><td>Home page</td><td></td></tr><tr><td><code>post</code></td><td>Posts</td><td><code>index</code></td></tr><tr><td><code>page</code></td><td>Pages</td><td><code>index</code></td></tr><tr><td><code>archive</code></td><td>Archives</td><td><code>index</code></td></tr><tr><td><code>category</code></td><td>Category archives</td><td><code>archive</code></td></tr><tr><td><code>tag</code></td><td>Tag archives</td><td><code>archive</code></td></tr></tbody></table><h2 id="Layouts"><a href="#Layouts" class="headerlink" title="Layouts"></a>Layouts</h2><p>When pages share a similar structure - for instance, when two templates have both a header and a footer - you can consider using a <code>layout</code> to declare these structural similarities. Every layout file should contain a <code>body</code> variable to display the contents of the template in question. For example:</p><figure class="highlight html"><figcaption><span>index.ejs</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index</span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><figcaption><span>layout.ejs</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>&lt;%- body %&gt;<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>yields:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span>index<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>By default, the <code>layout</code> template is used by all other templates. You can specify additional layouts in the front-matter or set it to <code>false</code> to disable it. It’s even possible to build a complex nested structure by including more layout templates in your top layout.</p><h2 id="Partials"><a href="#Partials" class="headerlink" title="Partials"></a>Partials</h2><p>Partials are useful for sharing components between your templates. Typical examples include headers, footers or sidebars. You may want to put your partials in separate files to make maintaining your website significantly more convenient. For example:</p><figure class="highlight html"><figcaption><span>partial/header.ejs</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"logo"</span>&gt;</span>&lt;%= config.title %&gt;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><figcaption><span>index.ejs</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial('partial/header') %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span>Home page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>yields:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"logo"</span>&gt;</span>My Site<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span>Home page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Local-Variables"><a href="#Local-Variables" class="headerlink" title="Local Variables"></a>Local Variables</h2><p>You can define local variables in templates and use them in other templates.</p><figure class="highlight html"><figcaption><span>partial/header.ejs</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"logo"</span>&gt;</span>&lt;%= title %&gt;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight html"><figcaption><span>index.ejs</span></figcaption><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial('partial/header', {title: 'Hello World'}) %&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span>Home page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>yields:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">id</span>=<span class="string">"logo"</span>&gt;</span>Hello World<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"content"</span>&gt;</span>Home page<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Optimization"><a href="#Optimization" class="headerlink" title="Optimization"></a>Optimization</h2><p>If your theme is exceedingly complex or if the number of files to generate becomes too large, Hexo’s file generation performance may begin to decrease considerably. Aside from simplifying your theme, you may also try Fragment Caching, which was introduced in Hexo 2.7.</p><p>This feature was borrowed from <a href="http://guides.rubyonrails.org/caching_with_rails.html#fragment-caching">Ruby on Rails</a>. It causes content to be saved as fragments and cached for when additional requests are made. This can reduce the number of database queries and can also speed up file generation.</p><p>Fragment caching is best used for headers, footers, sidebars or other static content that is unlikely to change from template to template. For example:</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- fragment_cache(<span class="string">'header'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  <span class="keyword">return</span> <span class="string">'&lt;header&gt;&lt;/header&gt;'</span>;</span><br><span class="line">});</span><br></pre></td></tr></tbody></table></figure><p>Though it may be easier to use partials:</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial(<span class="string">'header'</span>, {}, {<span class="attr">cache</span>: <span class="literal">true</span>});</span><br></pre></td></tr></tbody></table></figure><p><code>fragment_cache()</code> will cache the rendered result and output the cached result to other pages. This should only be used on partials that are expected <strong>not</strong> to change across different pages. Otherwise, it should <strong>not</strong> be enabled.<br>For example, it should be disabled when <code>relative_link</code> is enabled in the config. This is because relative links may appear differently across pages.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Templates define the presentation of your website by describing what each page should look like. The table below shows the corresponding </summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Themes</title>
    <link href="http://example.com/2021/11/01/themes/"/>
    <id>http://example.com/2021/11/01/themes/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/5ROIU_9dYe4" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><p>It’s easy to build a Hexo theme - you just have to create a new folder. To start using your theme, modify the <code>theme</code> setting in your site’s <code>_config.yml</code>. A theme should have the following structure:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── languages</span><br><span class="line">├── layout</span><br><span class="line">├── scripts</span><br><span class="line">└── source</span><br></pre></td></tr></tbody></table></figure><h3 id="config-yml"><a href="#config-yml" class="headerlink" title="_config.yml"></a>_config.yml</h3><p>Theme configuration file. Unlike the site’s primary configuration file, modifying this doesn’t require a server restart.</p><h3 id="languages"><a href="#languages" class="headerlink" title="languages"></a>languages</h3><p>Language folder. See <a href="internationalization.html">internationalization (i18n)</a> for more info.</p><h3 id="layout"><a href="#layout" class="headerlink" title="layout"></a>layout</h3><p>Layout folder. This folder contains the theme’s template files, which define the appearance of your website. Hexo provides the <a href="https://github.com/node-swig/swig-templates">Swig</a> template engine by default, but you can easily install additional plugins to support alternative engines such as <a href="https://github.com/hexojs/hexo-renderer-ejs">EJS</a>, <a href="https://github.com/hexojs/hexo-renderer-haml">Haml</a>, <a href="https://github.com/hexojs/hexo-renderer-jade">Jade</a>, or <a href="https://github.com/maxknee/hexo-render-pug">Pug</a>. Hexo chooses the template engine based on the file extension of the template (just like the posts). For example:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout.ejs   - uses EJS</span><br><span class="line">layout.swig  - uses Swig</span><br></pre></td></tr></tbody></table></figure><p>See <a href="templates.html">templates</a> for more info.</p><h3 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h3><p>Script folder. Hexo will automatically load all JavaScript files in this folder during initialization. For more info, see <a href="plugins.html">plugins</a>.</p><h3 id="source"><a href="#source" class="headerlink" title="source"></a>source</h3><p>Source folder. Place your assets (e.g. CSS and JavaScript files) here. Hexo ignores hidden files and files or folders prefixed with <code>_</code> (underscore).</p><p>Hexo will process and save all renderable files to the <code>public</code> folder. Non-renderable files will be copied to the <code>public</code> folder directly.</p><h3 id="Publishing"><a href="#Publishing" class="headerlink" title="Publishing"></a>Publishing</h3><p>When you have finished building your theme, you can publish it to the <a href="/themes">theme list</a>. Before doing so, you should run the <a href="https://github.com/hexojs/hexo-theme-unit-test">theme unit test</a> to ensure that everything works. The steps for publishing a theme are very similar to those for <a href="contributing.html#Updating_Documentation">updating documentation</a>.</p><ol><li><p>Fork <a href="https://github.com/hexojs/site">hexojs/site</a></p></li><li><p>Clone the repository to your computer and install dependencies.</p> <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/&lt;username&gt;/site.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> site</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>Edit <code>source/_data/themes.yml</code> and add your theme. For example:</p> <figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">landscape</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">A</span> <span class="string">brand</span> <span class="string">new</span> <span class="string">default</span> <span class="string">theme</span> <span class="string">for</span> <span class="string">Hexo.</span></span><br><span class="line">  <span class="attr">link:</span> <span class="string">https://github.com/hexojs/hexo-theme-landscape</span></span><br><span class="line">  <span class="attr">preview:</span> <span class="string">http://hexo.io/hexo-theme-landscape</span></span><br><span class="line">  <span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">official</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">responsive</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">widget</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">two_column</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">one_column</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>Add a screenshot (with the same name as the theme) to <code>source/themes/screenshots</code>. It must be a 800*500px PNG.</p></li><li><p>Push the branch.</p></li><li><p>Create a pull request and describe the change.</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/5ROIU_9dYe4&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/ifr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Troubleshooting</title>
    <link href="http://example.com/2021/11/01/troubleshooting/"/>
    <id>http://example.com/2021/11/01/troubleshooting/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<p>In case you’re experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doesn’t help you solve your problem, try doing a search on <a href="https://github.com/hexojs/hexo/issues">GitHub</a> or our <a href="https://groups.google.com/group/hexo">Google Group</a>.</p><h2 id="YAML-Parsing-Error"><a href="#YAML-Parsing-Error" class="headerlink" title="YAML Parsing Error"></a>YAML Parsing Error</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: incomplete explicit mapping pair; a key node is missed at line 18, column 29:</span><br><span class="line">      last_updated: Last updated: %s</span><br></pre></td></tr></tbody></table></figure><p>Wrap the string with quotations if it contains colons.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">JS-YAML: bad indentation of a mapping entry at line 18, column 31:</span><br><span class="line">      last_updated:"Last updated: %s"</span><br></pre></td></tr></tbody></table></figure><p>Make sure you are using soft tabs and add a space after colons.</p><p>You can see <a href="http://www.yaml.org/spec/1.2/spec.html">YAML Spec</a> for more info.</p><h2 id="EMFILE-Error"><a href="#EMFILE-Error" class="headerlink" title="EMFILE Error"></a>EMFILE Error</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: EMFILE, too many open files</span><br></pre></td></tr></tbody></table></figure><p>Though Node.js has non-blocking I/O, the maximum number of synchronous I/O is still limited by the system. You may come across an EMFILE error when trying to generate a large number of files. You can try to run the following command to increase the number of allowed synchronous I/O operations.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ulimit</span> -n 10000</span><br></pre></td></tr></tbody></table></figure><p><strong>Error: cannot modify limit</strong></p><p>If you encounter the following error:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">ulimit</span> -n 10000</span><br><span class="line"><span class="built_in">ulimit</span>: open files: cannot modify <span class="built_in">limit</span>: Operation not permitted</span><br></pre></td></tr></tbody></table></figure><p>It means some system-wide configurations are preventing <code>ulimit</code> to being increased to a certain limit.</p><p>To override the limit:</p><ol><li>Add the following line to “/etc/security/limits.conf”:</li></ol>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">* - nofile 10000</span><br><span class="line"></span><br><span class="line"># '*' applies to all users and '-' set both soft and hard limits</span><br></pre></td></tr></tbody></table></figure><ul><li>The above setting may not apply in some cases, ensure “/etc/pam.d/login” and “/etc/pam.d/lightdm” have the following line. (Ignore this step if those files do not exist)</li></ul>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session required pam_limits.so</span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>If you are on a <a href="https://en.wikipedia.org/wiki/Systemd#Adoption">systemd-based</a> distribution, systemd may override “limits.conf”. To set the limit in systemd, add the following line in “/etc/systemd/system.conf” and “/etc/systemd/user.conf”:</li></ol>  <figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DefaultLimitNOFILE=10000</span><br></pre></td></tr></tbody></table></figure><ol start="3"><li>Reboot</li></ol><h2 id="Process-Out-of-Memory"><a href="#Process-Out-of-Memory" class="headerlink" title="Process Out of Memory"></a>Process Out of Memory</h2><p>When you encounter this error during generation:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - process out of memory</span><br></pre></td></tr></tbody></table></figure><p>Increase Node.js heap memory size by changing the first line of <code>hexo-cli</code> (<code>which hexo</code> to look for the file).</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env node --max_old_space_size=8192</span><br></pre></td></tr></tbody></table></figure><p><a href="https://github.com/hexojs/hexo/issues/1735">Out of memory while generating a huge blog · Issue #1735 · hexojs/hexo</a></p><h2 id="Git-Deployment-Problems"><a href="#Git-Deployment-Problems" class="headerlink" title="Git Deployment Problems"></a>Git Deployment Problems</h2><h3 id="RPC-failed"><a href="#RPC-failed" class="headerlink" title="RPC failed"></a>RPC failed</h3><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">error: RPC failed; result=22, HTTP code = 403</span><br><span class="line"></span><br><span class="line">fatal: 'username.github.io' does not appear to be a git repository</span><br></pre></td></tr></tbody></table></figure><p>Make sure you have <a href="https://help.github.com/articles/set-up-git">set up git</a> on your computer properly or try to use HTTPS repository URL instead.</p><h3 id="Error-ENOENT-no-such-file-or-directory"><a href="#Error-ENOENT-no-such-file-or-directory" class="headerlink" title="Error: ENOENT: no such file or directory"></a>Error: ENOENT: no such file or directory</h3><p>If you get an error like <code>Error: ENOENT: no such file or directory</code> it’s probably due to to mixing uppercase and lowercase letters in your tags, categories, or filenames. Git cannot automatically merge this change so it breaks the automatic branching.</p><p>To fix this, try</p><ol><li>Check every tag’s and category’s case and make sure they are the same.</li><li>Commit</li><li>Clean and build: <code>./node_modules/.bin/hexo clean &amp;&amp; ./node_modules/.bin/hexo generate</code></li><li>Manually copy the public folder to your desktop</li><li>Switch branch from your master branch to your deployment branch locally</li><li>Copy the contents of the public folder from your desktop into the deployment branch</li><li>Commit. You should see any merge conflicts appear that you can manually resolve.</li><li>Switch back to your master branch and deploy normally: <code>./node_modules/.bin/hexo deploy</code></li></ol><h2 id="Server-Problems"><a href="#Server-Problems" class="headerlink" title="Server Problems"></a>Server Problems</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: listen EADDRINUSE</span><br></pre></td></tr></tbody></table></figure><p>You may have started two Hexo servers at the same time or there might be another application using the same port. Try to modify the <code>port</code> setting or start the Hexo server with the <code>-p</code> flag.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></tbody></table></figure><h2 id="Plugin-Installation-Problems"><a href="#Plugin-Installation-Problems" class="headerlink" title="Plugin Installation Problems"></a>Plugin Installation Problems</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm ERR! node-waf configure build</span><br></pre></td></tr></tbody></table></figure><p>This error may occur when trying to install a plugin written in C, C++ or other non-JavaScript languages. Make sure you have installed the right compiler on your computer.</p><h2 id="Error-with-DTrace-Mac-OS-X"><a href="#Error-with-DTrace-Mac-OS-X" class="headerlink" title="Error with DTrace (Mac OS X)"></a>Error with DTrace (Mac OS X)</h2><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{ [Error: Cannot find module './build/Release/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }</span><br><span class="line">{ [Error: Cannot find module './build/default/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }</span><br><span class="line">{ [Error: Cannot find module './build/Debug/DTraceProviderBindings'] code: 'MODULE_NOT_FOUND' }</span><br></pre></td></tr></tbody></table></figure><p>DTrace install may have issue, use this:</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo --no-optional</span><br></pre></td></tr></tbody></table></figure><p>See <a href="https://github.com/hexojs/hexo/issues/1326#issuecomment-113871796">#1326</a></p><h2 id="Iterate-Data-Model-on-Jade-or-Swig"><a href="#Iterate-Data-Model-on-Jade-or-Swig" class="headerlink" title="Iterate Data Model on Jade or Swig"></a>Iterate Data Model on Jade or Swig</h2><p>Hexo uses <a href="https://github.com/hexojs/warehouse">Warehouse</a> for its data model. It’s not an array so you may have to transform objects into iterables.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">{% for post in site.posts.toArray() %}</span><br><span class="line">{% endfor %}</span><br></pre></td></tr></tbody></table></figure><h2 id="Data-Not-Updated"><a href="#Data-Not-Updated" class="headerlink" title="Data Not Updated"></a>Data Not Updated</h2><p>Some data cannot be updated, or the newly generated files are identical to those of the last version. Clean the cache and try again.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></tbody></table></figure><h2 id="No-command-is-executed"><a href="#No-command-is-executed" class="headerlink" title="No command is executed"></a>No command is executed</h2><p>When you can’t get any command except <code>help</code>, <code>init</code> and <code>version</code> to work and you keep getting content of <code>hexo help</code>, it could be caused by a missing <code>hexo</code> in <code>package.json</code>:</p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">{</span><br><span class="line">  <span class="attr">"hexo"</span>: {</span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"3.2.2"</span></span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="Escape-Contents"><a href="#Escape-Contents" class="headerlink" title="Escape Contents"></a>Escape Contents</h2><p>Hexo uses <a href="http://mozilla.github.io/nunjucks/">Nunjucks</a> to render posts (<a href="http://paularmstrong.github.io/swig/">Swig</a> was used in older version, which share a similar syntax). Content wrapped with <code>{{ }}</code> or <code>{% %}</code> will get parsed and may cause problems. You can skip the parsing by wrapping it with the <a href="/docs/tag-plugins#Raw"><code>raw</code></a> tag plugin, single backtick <code>`{{ }}`</code> or triple backtick.<br>Alternatively, Nunjucks tags can be disabled through the renderer’s option (if supported), <a href="/api/renderer#Disable-Nunjucks-tags">API</a> or <a href="/docs/front-matter">front-matter</a>.</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">{% raw %}</span><br><span class="line">Hello {{ world }}</span><br><span class="line">{% endraw %}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">Hello {{ world }}</span><br><span class="line">```</span><br></pre></td></tr></tbody></table></figure><h2 id="ENOSPC-Error-Linux"><a href="#ENOSPC-Error-Linux" class="headerlink" title="ENOSPC Error (Linux)"></a>ENOSPC Error (Linux)</h2><p>Sometimes when running the command <code>$ hexo server</code> it returns an error:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch ENOSPC ...</span><br></pre></td></tr></tbody></table></figure><p>It can be fixed by running <code>$ npm dedupe</code> or, if that doesn’t help, try the following in the Linux console:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</span><br></pre></td></tr></tbody></table></figure><p>This will increase the limit for the number of files you can watch.</p><h2 id="EMPERM-Error-Windows-Subsystem-for-Linux"><a href="#EMPERM-Error-Windows-Subsystem-for-Linux" class="headerlink" title="EMPERM Error (Windows Subsystem for Linux)"></a>EMPERM Error (Windows Subsystem for Linux)</h2><p>When running <code>$ hexo server</code> in a BashOnWindows environment, it returns the following error:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Error: watch /path/to/hexo/theme/ EMPERM</span><br></pre></td></tr></tbody></table></figure><p>Unfortunately, WSL does not currently support filesystem watchers. Therefore, the live updating feature of hexo’s server is currently unavailable. You can still run the server from a WSL environment by first generating the files and then running it as a static server:</p><figure class="highlight sh"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">$ hexo server -s</span><br></pre></td></tr></tbody></table></figure><p>This is <a href="https://github.com/Microsoft/BashOnWindows/issues/216">a known BashOnWindows issue</a>, and on 15 Aug 2016, the Windows team said they would work on it. You can get progress updates and encourage them to prioritize it on <a href="https://wpdev.uservoice.com/forums/266908-command-prompt-console-bash-on-ubuntu-on-windo/suggestions/13469097-support-for-filesystem-watchers-like-inotify">the issue’s UserVoice suggestion page</a>.</p><h2 id="Template-render-error"><a href="#Template-render-error" class="headerlink" title="Template render error"></a>Template render error</h2><p>Sometimes when running the command <code>$ hexo generate</code> it returns an error:</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span><br><span class="line">Template render error: (unknown path)</span><br></pre></td></tr></tbody></table></figure><p>One possible reason is that there are some unrecognizable words in your file, e.g. invisible zero width characters.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;In case you’re experiencing problems with using Hexo, here is a list of solutions to some frequently encountered issues. If this page doe</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Variables</title>
    <link href="http://example.com/2021/11/01/variables/"/>
    <id>http://example.com/2021/11/01/variables/</id>
    <published>2021-11-01T10:31:16.771Z</published>
    <updated>2021-11-01T10:31:16.771Z</updated>
    
    <content type="html"><![CDATA[<div class="video-container"><iframe src="https://www.youtube.com/embed/T9oAax-IRw0" frameborder="0" loading="lazy" allowfullscreen=""></iframe></div><h3 id="Global-Variables"><a href="#Global-Variables" class="headerlink" title="Global Variables"></a>Global Variables</h3><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>site</code></td><td>Sitewide information.</td><td><code>object</code>; see <a href="#Site-Variables">Site Variables</a></td></tr><tr><td><code>page</code></td><td>Page specific information and custom variables set in front-matter.</td><td><code>object</code>; see <a href="#Page-Variables">Page Variables</a></td></tr><tr><td><code>config</code></td><td>Site configuration.</td><td><code>object</code> (your site’s _config file)</td></tr><tr><td><code>theme</code></td><td>Theme configuration. Inherits from site configuration.</td><td><code>object</code> (your theme’s _config file)</td></tr><tr><td><code>path</code></td><td>Path of current page</td><td><code>string</code></td></tr><tr><td><code>url</code></td><td>Full URL of current page</td><td><code>string</code></td></tr><tr><td><code>env</code></td><td>Environment variables</td><td>???</td></tr></tbody></table><p>Lodash has been removed from global variables since Hexo 5.0.0. <a href="https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore">You-Dont-Need-Lodash-Underscore</a> might be helpful for your migration.</p><h3 id="Site-Variables"><a href="#Site-Variables" class="headerlink" title="Site Variables"></a>Site Variables</h3><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>site.posts</code></td><td>All posts</td><td><code>array</code> of <code>post</code> objects</td></tr><tr><td><code>site.pages</code></td><td>All pages</td><td><code>array</code> of <code>page</code> objects</td></tr><tr><td><code>site.categories</code></td><td>All categories</td><td><code>array</code> of ???</td></tr><tr><td><code>site.tags</code></td><td>All tags</td><td><code>array</code> of ???</td></tr></tbody></table><h3 id="Page-Variables"><a href="#Page-Variables" class="headerlink" title="Page Variables"></a>Page Variables</h3><p><strong>Article (<code>page</code>)</strong></p><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>page.title</code></td><td>Article title</td><td><code>string</code></td></tr><tr><td><code>page.date</code></td><td>Article created date</td><td><a href="http://momentjs.com/">Moment.js</a> object</td></tr><tr><td><code>page.updated</code></td><td>Article last updated date</td><td><a href="http://momentjs.com/">Moment.js</a> object</td></tr><tr><td><code>page.comments</code></td><td>Comment enabled or not</td><td><code>boolean</code></td></tr><tr><td><code>page.layout</code></td><td>Layout name</td><td><code>string</code></td></tr><tr><td><code>page.content</code></td><td>The full processed content of the article</td><td><code>string</code></td></tr><tr><td><code>page.excerpt</code></td><td>Article excerpt</td><td><code>string</code></td></tr><tr><td><code>page.more</code></td><td>Contents except article excerpt</td><td><code>string</code></td></tr><tr><td><code>page.source</code></td><td>The path of the source file</td><td><code>string</code></td></tr><tr><td><code>page.full_source</code></td><td>Full path of the source file</td><td><code>string</code></td></tr><tr><td><code>page.path</code></td><td>The URL of the article without root URL. We usually use <code>url_for(page.path)</code> in theme.</td><td><code>string</code></td></tr><tr><td><code>page.permalink</code></td><td>Full (encoded) URL of the article</td><td><code>string</code></td></tr><tr><td><code>page.prev</code></td><td>The previous post, <code>null</code> if the post is the first post</td><td>???</td></tr><tr><td><code>page.next</code></td><td>The next post, <code>null</code> if the post is the last post</td><td>???</td></tr><tr><td><code>page.raw</code></td><td>The raw data of the article</td><td>???</td></tr><tr><td><code>page.photos</code></td><td>The photos of the article (Used in gallery posts)</td><td>array of ???</td></tr><tr><td><code>page.link</code></td><td>The external link of the article (Used in link posts)</td><td><code>string</code></td></tr></tbody></table><p><strong>Post (<code>post</code>):</strong> Same as <code>page</code> layout but add the following variables.</p><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>page.published</code></td><td>True if the post is not a draft</td><td><code>boolean</code></td></tr><tr><td><code>page.categories</code></td><td>All categories of the post</td><td><code>array</code> of ???</td></tr><tr><td><code>page.tags</code></td><td>All tags of the post</td><td><code>array</code> of ???</td></tr></tbody></table><p><strong>Home (<code>index</code>)</strong></p><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>page.per_page</code></td><td>Posts displayed per page</td><td><code>number</code></td></tr><tr><td><code>page.total</code></td><td>Total number of pages</td><td><code>number</code></td></tr><tr><td><code>page.current</code></td><td>Current page number</td><td><code>number</code></td></tr><tr><td><code>page.current_url</code></td><td>The URL of current page</td><td><code>string</code></td></tr><tr><td><code>page.posts</code></td><td>Posts in this page (<a href="https://hexojs.github.io/warehouse/">Data Model</a>)</td><td><code>object</code></td></tr><tr><td><code>page.prev</code></td><td>Previous page number. <code>0</code> if the current page is the first.</td><td><code>number</code></td></tr><tr><td><code>page.prev_link</code></td><td>The URL of previous page. <code>''</code> if the current page is the first.</td><td><code>string</code></td></tr><tr><td><code>page.next</code></td><td>Next page number. <code>0</code> if the current page is the last.</td><td><code>number</code></td></tr><tr><td><code>page.next_link</code></td><td>The URL of next page. <code>''</code> if the current page is the last.</td><td><code>string</code></td></tr><tr><td><code>page.path</code></td><td>The URL of current page without root URL. We usually use <code>url_for(page.path)</code> in theme.</td><td><code>string</code></td></tr></tbody></table><p><strong>Archive (<code>archive</code>):</strong> Same as <code>index</code> layout but add the following variables.</p><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>page.archive</code></td><td>Equals <code>true</code></td><td><code>boolean</code></td></tr><tr><td><code>page.year</code></td><td>Archive year (4-digit)</td><td><code>number</code></td></tr><tr><td><code>page.month</code></td><td>Archive month (2-digit without leading zeros)</td><td><code>number</code></td></tr></tbody></table><p><strong>Category (<code>category</code>):</strong> Same as <code>index</code> layout but add the following variables.</p><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>page.category</code></td><td>Category name</td><td><code>string</code></td></tr></tbody></table><p><strong>Tag (<code>tag</code>):</strong> Same as <code>index</code> layout but add the following variables.</p><table><thead><tr><th>Variable</th><th>Description</th><th>Type</th></tr></thead><tbody><tr><td><code>page.tag</code></td><td>Tag name</td><td><code>string</code></td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;video-container&quot;&gt;&lt;iframe src=&quot;https://www.youtube.com/embed/T9oAax-IRw0&quot; frameborder=&quot;0&quot; loading=&quot;lazy&quot; allowfullscreen=&quot;&quot;&gt;&lt;/ifr</summary>
      
    
    
    
    <category term="frontend" scheme="http://example.com/categories/frontend/"/>
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    <category term="cheatsheets" scheme="http://example.com/categories/cheatsheets/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="website" scheme="http://example.com/tags/website/"/>
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
</feed>
